{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _core = require(\"@react-navigation/core\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _LinkingContext = _interopRequireDefault(require(\"./LinkingContext\"));\nvar _DefaultTheme = _interopRequireDefault(require(\"./theming/DefaultTheme\"));\nvar _ThemeProvider = _interopRequireDefault(require(\"./theming/ThemeProvider\"));\nvar _useBackButton = _interopRequireDefault(require(\"./useBackButton\"));\nvar _useDocumentTitle = _interopRequireDefault(require(\"./useDocumentTitle\"));\nvar _useLinking2 = _interopRequireDefault(require(\"./useLinking\"));\nvar _useThenable3 = _interopRequireDefault(require(\"./useThenable\"));\nvar _excluded = [\"theme\", \"linking\", \"fallback\", \"documentTitle\", \"onReady\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\nfunction NavigationContainerInner(_ref, ref) {\n  var _ref$theme = _ref.theme,\n    theme = _ref$theme === void 0 ? _DefaultTheme.default : _ref$theme,\n    linking = _ref.linking,\n    _ref$fallback = _ref.fallback,\n    fallback = _ref$fallback === void 0 ? null : _ref$fallback,\n    documentTitle = _ref.documentTitle,\n    onReady = _ref.onReady,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isLinkingEnabled = linking ? linking.enabled !== false : false;\n  if (linking !== null && linking !== void 0 && linking.config) {\n    (0, _core.validatePathConfig)(linking.config);\n  }\n  var refContainer = React.useRef(null);\n  (0, _useBackButton.default)(refContainer);\n  (0, _useDocumentTitle.default)(refContainer, documentTitle);\n  var _useLinking = (0, _useLinking2.default)(refContainer, Object.assign({\n      independent: rest.independent,\n      enabled: isLinkingEnabled,\n      prefixes: []\n    }, linking)),\n    getInitialState = _useLinking.getInitialState;\n  React.useEffect(function () {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          var _linking$prefixes, _linking$getStateFrom, _linking$getPathFromS, _linking$getActionFro;\n          return Object.assign({}, linking, {\n            enabled: isLinkingEnabled,\n            prefixes: (_linking$prefixes = linking === null || linking === void 0 ? void 0 : linking.prefixes) !== null && _linking$prefixes !== void 0 ? _linking$prefixes : [],\n            getStateFromPath: (_linking$getStateFrom = linking === null || linking === void 0 ? void 0 : linking.getStateFromPath) !== null && _linking$getStateFrom !== void 0 ? _linking$getStateFrom : _core.getStateFromPath,\n            getPathFromState: (_linking$getPathFromS = linking === null || linking === void 0 ? void 0 : linking.getPathFromState) !== null && _linking$getPathFromS !== void 0 ? _linking$getPathFromS : _core.getPathFromState,\n            getActionFromState: (_linking$getActionFro = linking === null || linking === void 0 ? void 0 : linking.getActionFromState) !== null && _linking$getActionFro !== void 0 ? _linking$getActionFro : _core.getActionFromState\n          });\n        }\n      });\n    }\n  });\n  var _useThenable = (0, _useThenable3.default)(getInitialState),\n    _useThenable2 = (0, _slicedToArray2.default)(_useThenable, 2),\n    isResolved = _useThenable2[0],\n    initialState = _useThenable2[1];\n  React.useImperativeHandle(ref, function () {\n    return refContainer.current;\n  });\n  var linkingContext = React.useMemo(function () {\n    return {\n      options: linking\n    };\n  }, [linking]);\n  var isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n  var onReadyRef = React.useRef(onReady);\n  React.useEffect(function () {\n    onReadyRef.current = onReady;\n  });\n  React.useEffect(function () {\n    if (isReady) {\n      var _onReadyRef$current;\n      (_onReadyRef$current = onReadyRef.current) === null || _onReadyRef$current === void 0 ? void 0 : _onReadyRef$current.call(onReadyRef);\n    }\n  }, [isReady]);\n  if (!isReady) {\n    return fallback;\n  }\n  return React.createElement(_LinkingContext.default.Provider, {\n    value: linkingContext\n  }, React.createElement(_ThemeProvider.default, {\n    value: theme\n  }, React.createElement(_core.BaseNavigationContainer, _extends({}, rest, {\n    initialState: rest.initialState == null ? initialState : rest.initialState,\n    ref: refContainer\n  }))));\n}\nvar NavigationContainer = React.forwardRef(NavigationContainerInner);\nvar _default = NavigationContainer;\nexports.default = _default;","map":{"version":3,"sources":["NavigationContainer.tsx"],"names":["global","REACT_NAVIGATION_DEVTOOLS","WeakMap","NavigationContainerInner","theme","DefaultTheme","linking","fallback","documentTitle","onReady","rest","ref","isLinkingEnabled","enabled","config","validatePathConfig","refContainer","React","useRef","useBackButton","useDocumentTitle","getInitialState","useLinking","independent","prefixes","useEffect","current","set","getStateFromPath","getPathFromState","getActionFromState","isResolved","initialState","useThenable","useImperativeHandle","linkingContext","useMemo","options","isReady","onReadyRef","NavigationContainer","forwardRef"],"mappings":"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","sourcesContent":["import {\n  BaseNavigationContainer,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  NavigationContainerProps,\n  NavigationContainerRef,\n  ParamListBase,\n  validatePathConfig,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\nimport DefaultTheme from './theming/DefaultTheme';\nimport ThemeProvider from './theming/ThemeProvider';\nimport type { DocumentTitleOptions, LinkingOptions, Theme } from './types';\nimport useBackButton from './useBackButton';\nimport useDocumentTitle from './useDocumentTitle';\nimport useLinking from './useLinking';\nimport useThenable from './useThenable';\n\ndeclare global {\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends {}> = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer =\n    React.useRef<NavigationContainerRef<ParamListBase>>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    independent: rest.independent,\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState:\n              linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n}\n\nconst NavigationContainer = React.forwardRef(NavigationContainerInner) as <\n  RootParamList extends {} = ReactNavigation.RootParamList\n>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"script"}