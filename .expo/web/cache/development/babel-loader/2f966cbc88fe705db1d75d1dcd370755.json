{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useOnGetState;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _isArrayEqual = _interopRequireDefault(require(\"./isArrayEqual\"));\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction useOnGetState(_ref) {\n  var getState = _ref.getState,\n    getStateListeners = _ref.getStateListeners;\n  var _React$useContext = React.useContext(_NavigationBuilderContext.default),\n    addKeyedListener = _React$useContext.addKeyedListener;\n  var route = React.useContext(_NavigationRouteContext.default);\n  var key = route ? route.key : 'root';\n  var getRehydratedState = React.useCallback(function () {\n    var state = getState();\n    var routes = state.routes.map(function (route) {\n      var _getStateListeners$ro;\n      var childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n      if (route.state === childState) {\n        return route;\n      }\n      return Object.assign({}, route, {\n        state: childState\n      });\n    });\n    if ((0, _isArrayEqual.default)(state.routes, routes)) {\n      return state;\n    }\n    return Object.assign({}, state, {\n      routes: routes\n    });\n  }, [getState, getStateListeners]);\n  React.useEffect(function () {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}","map":{"version":3,"sources":["useOnGetState.tsx"],"names":["useOnGetState","getState","getStateListeners","addKeyedListener","React","useContext","NavigationBuilderContext","route","NavigationRouteContext","key","getRehydratedState","useCallback","state","routes","map","childState","isArrayEqual","useEffect"],"mappings":";;;;;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAOe,SAASA,aAAT,CAAA,IAAA,EAGH;EAH0B,IACpCC,QADoC,GAG1B,IAAA,CAFVA,QADoC;IAEpCC,iBAAAA,GACU,IAAA,CADVA,iBAAAA;EAEA,wBAA6BE,KAAK,CAACC,UAAND,CAAiBE,iCAAjBF,CAA7B;IAAQD,gBAAAA,qBAAAA,gBAAAA;EACR,IAAMI,KAAK,GAAGH,KAAK,CAACC,UAAND,CAAiBI,+BAAjBJ,CAAd;EACA,IAAMK,GAAG,GAAGF,KAAK,GAAGA,KAAK,CAACE,GAAT,GAAe,MAAhC;EAEA,IAAMC,kBAAkB,GAAG,KAAK,CAACC,WAAN,CAAkB,YAAM;IACjD,IAAMC,KAAK,GAAGX,QAAQ,EAD2B;IAIjD,IAAMY,MAAM,GAAG,KAAK,CAACA,MAAN,CAAaC,GAAb,CAAkBP,UAAAA,KAAD,EAAW;MAAA,IAAA,qBAAA;MACzC,IAAMQ,UAAU,GAAA,CAAA,qBAAA,GAAGb,iBAAiB,CAACK,KAAK,CAACE,GAAP,CAApB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGP,qBAAAA,CAAAA,IAAAA,CAAAA,iBAAiB,CAApC;MAEA,IAAIK,KAAK,CAACK,KAANL,KAAgBQ,UAApB,EAAgC;QAC9B,OAAOR,KAAP;MACD;MAED,yBAAYA,KAAL;QAAYK,KAAK,EAAEG;MAAAA;IAC3B,CARc,CAAf;IAUA,IAAIC,IAAAA,qBAAY,EAACJ,KAAK,CAACC,MAAP,EAAeA,MAAf,CAAhB,EAAwC;MACtC,OAAOD,KAAP;IACD;IAED,yBAAYA,KAAL;MAAYC,MAAAA,EAAAA;IAAAA;EACpB,CAnB0B,EAmBxB,CAACZ,QAAD,EAAWC,iBAAX,CAnBwB,CAA3B;EAqBAE,KAAK,CAACa,SAANb,CAAgB,YAAM;IACpB,OAAOD,gBAAP,KAAA,IAAA,IAAOA,gBAAP,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,gBAAgB,CAAG,UAAH,EAAeM,GAAf,EAAoBC,kBAApB,CAAvB;EACD,CAFDN,EAEG,CAACD,gBAAD,EAAmBO,kBAAnB,EAAuCD,GAAvC,CAFHL,CAAAA;AAGD","sourcesContent":["import type { NavigationState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext, {\n  GetStateListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\n\ntype Options = {\n  getState: () => NavigationState;\n  getStateListeners: Record<string, GetStateListener | undefined>;\n};\n\nexport default function useOnGetState({\n  getState,\n  getStateListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map((route) => {\n      const childState = getStateListeners[route.key]?.();\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return { ...route, state: childState };\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return { ...state, routes };\n  }, [getState, getStateListeners]);\n\n  React.useEffect(() => {\n    return addKeyedListener?.('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n"]},"metadata":{},"sourceType":"script"}