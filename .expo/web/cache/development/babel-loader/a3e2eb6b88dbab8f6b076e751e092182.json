{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAndroidManifestPlugin = createAndroidManifestPlugin;\nexports.createStringsXmlPlugin = createStringsXmlPlugin;\nexports.withStringsXml = exports.withSettingsGradle = exports.withProjectBuildGradle = exports.withMainApplication = exports.withMainActivity = exports.withGradleProperties = exports.withAppBuildGradle = exports.withAndroidStyles = exports.withAndroidManifest = exports.withAndroidColorsNight = exports.withAndroidColors = void 0;\nfunction _withMod() {\n  var data = require(\"./withMod\");\n  _withMod = function _withMod() {\n    return data;\n  };\n  return data;\n}\nfunction createAndroidManifestPlugin(action, name) {\n  var withUnknown = function withUnknown(config) {\n    return withAndroidManifest(config, function () {\n      var _ref = _asyncToGenerator(function* (config) {\n        config.modResults = yield action(config, config.modResults);\n        return config;\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name\n    });\n  }\n  return withUnknown;\n}\nfunction createStringsXmlPlugin(action, name) {\n  var withUnknown = function withUnknown(config) {\n    return withStringsXml(config, function () {\n      var _ref2 = _asyncToGenerator(function* (config) {\n        config.modResults = yield action(config, config.modResults);\n        return config;\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name\n    });\n  }\n  return withUnknown;\n}\nvar withAndroidManifest = function withAndroidManifest(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'manifest',\n    action: action\n  });\n};\nexports.withAndroidManifest = withAndroidManifest;\nvar withStringsXml = function withStringsXml(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'strings',\n    action: action\n  });\n};\nexports.withStringsXml = withStringsXml;\nvar withAndroidColors = function withAndroidColors(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'colors',\n    action: action\n  });\n};\nexports.withAndroidColors = withAndroidColors;\nvar withAndroidColorsNight = function withAndroidColorsNight(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'colorsNight',\n    action: action\n  });\n};\nexports.withAndroidColorsNight = withAndroidColorsNight;\nvar withAndroidStyles = function withAndroidStyles(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'styles',\n    action: action\n  });\n};\nexports.withAndroidStyles = withAndroidStyles;\nvar withMainActivity = function withMainActivity(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'mainActivity',\n    action: action\n  });\n};\nexports.withMainActivity = withMainActivity;\nvar withMainApplication = function withMainApplication(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'mainApplication',\n    action: action\n  });\n};\nexports.withMainApplication = withMainApplication;\nvar withProjectBuildGradle = function withProjectBuildGradle(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'projectBuildGradle',\n    action: action\n  });\n};\nexports.withProjectBuildGradle = withProjectBuildGradle;\nvar withAppBuildGradle = function withAppBuildGradle(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'appBuildGradle',\n    action: action\n  });\n};\nexports.withAppBuildGradle = withAppBuildGradle;\nvar withSettingsGradle = function withSettingsGradle(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'settingsGradle',\n    action: action\n  });\n};\nexports.withSettingsGradle = withSettingsGradle;\nvar withGradleProperties = function withGradleProperties(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'gradleProperties',\n    action: action\n  });\n};\nexports.withGradleProperties = withGradleProperties;","map":{"version":3,"sources":["../../src/plugins/android-plugins.ts"],"names":["createAndroidManifestPlugin","action","name","withUnknown","config","withAndroidManifest","modResults","Object","defineProperty","value","createStringsXmlPlugin","withStringsXml","platform","mod","withAndroidColors","withAndroidColorsNight","withAndroidStyles","withMainActivity","withMainApplication","withProjectBuildGradle","withAppBuildGradle","withSettingsGradle","withGradleProperties"],"mappings":";;;;;;;;;AAIA,SAAA,QAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,WAAA,CAAA;EAAA,QAAA,GAAA,oBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AAWO,SAASA,2BAAT,CACLC,MADK,EAELC,IAFK,EAGS;EACd,IAAMC,WAAyB,GAAIC,SAA7BD,WAAyB,CAAIC,MAAD;IAAA,OAChCC,mBAAmB,CAACD,MAAD;MAAA,6BAAS,WAAOA,MAAP,EAAkB;QAC5CA,MAAM,CAACE,UAAPF,SAA0BH,MAAM,CAACG,MAAD,EAASA,MAAM,CAACE,UAAhB,CAAhCF;QACA,OAAOA,MAAP;MACD,CAHkB;MAAA;QAAA;MAAA;IAAA,IADrB;EAAA;EAKA,IAAIF,IAAJ,EAAU;IACRK,MAAM,CAACC,cAAPD,CAAsBJ,WAAtBI,EAAmC,MAAnCA,EAA2C;MACzCE,KAAK,EAAEP;IADkC,CAA3CK,CAAAA;EAGD;EACD,OAAOJ,WAAP;AACD;AAEM,SAASO,sBAAT,CACLT,MADK,EAELC,IAFK,EAGS;EACd,IAAMC,WAAyB,GAAIC,SAA7BD,WAAyB,CAAIC,MAAD;IAAA,OAChCO,cAAc,CAACP,MAAD;MAAA,8BAAS,WAAOA,MAAP,EAAkB;QACvCA,MAAM,CAACE,UAAPF,SAA0BH,MAAM,CAACG,MAAD,EAASA,MAAM,CAACE,UAAhB,CAAhCF;QACA,OAAOA,MAAP;MACD,CAHa;MAAA;QAAA;MAAA;IAAA,IADhB;EAAA;EAKA,IAAIF,IAAJ,EAAU;IACRK,MAAM,CAACC,cAAPD,CAAsBJ,WAAtBI,EAAmC,MAAnCA,EAA2C;MACzCE,KAAK,EAAEP;IADkC,CAA3CK,CAAAA;EAGD;EACD,OAAOJ,WAAP;AACD;AAQM,IAAME,mBAAgE,GAAG,SAAnEA,mBAAgE,CAC3ED,MAD8E,EAE9EH,MAF8E,EAG3E;EACH,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,UAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CATM;;AAiBA,IAAMU,cAAwD,GAAG,SAA3DA,cAAwD,CAAIP,MAAD,EAASH,MAAT,EAAoB;EAC1F,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,SAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CANM;;AAcA,IAAMa,iBAA2D,GAAG,SAA9DA,iBAA2D,CAAIV,MAAD,EAASH,MAAT,EAAoB;EAC7F,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,QAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CANM;;AAcA,IAAMc,sBAAgE,GAAG,SAAnEA,sBAAgE,CAC3EX,MAD8E,EAE9EH,MAF8E,EAG3E;EACH,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,aAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CATM;;AAiBA,IAAMe,iBAA2D,GAAG,SAA9DA,iBAA2D,CAAIZ,MAAD,EAASH,MAAT,EAAoB;EAC7F,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,QAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CANM;;AAcA,IAAMgB,gBAAiE,GAAG,SAApEA,gBAAiE,CAC5Eb,MAD+E,EAE/EH,MAF+E,EAG5E;EACH,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,cAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CATM;;AAiBA,IAAMiB,mBAAoE,GAAG,SAAvEA,mBAAoE,CAC/Ed,MADkF,EAElFH,MAFkF,EAG/E;EACH,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,iBAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CATM;;AAiBA,IAAMkB,sBAAkE,GAAG,SAArEA,sBAAkE,CAC7Ef,MADgF,EAEhFH,MAFgF,EAG7E;EACH,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,oBAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CATM;;AAiBA,IAAMmB,kBAA8D,GAAG,SAAjEA,kBAA8D,CAAIhB,MAAD,EAASH,MAAT,EAAoB;EAChG,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,gBAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CANM;;AAcA,IAAMoB,kBAA8D,GAAG,SAAjEA,kBAA8D,CAAIjB,MAAD,EAASH,MAAT,EAAoB;EAChG,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,gBAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CANM;;AAcA,IAAMqB,oBAAoE,GAAG,SAAvEA,oBAAoE,CAC/ElB,MADkF,EAElFH,MAFkF,EAG/E;EACH,OAAO,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,EAAQG,MAAR,EAAgB;IACrBQ,QAAQ,EAAE,SADW;IAErBC,GAAG,EAAE,kBAFgB;IAGrBZ,MAAAA,EAAAA;EAHqB,CAAhB,CAAP;AAKD,CATM","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ConfigPlugin, Mod } from '../Plugin.types';\nimport { Manifest, Paths, Properties, Resources } from '../android';\nimport { withMod } from './withMod';\n\ntype OptionalPromise<T> = T | Promise<T>;\n\ntype MutateDataAction<T> = (expo: ExpoConfig, data: T) => OptionalPromise<T>;\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport function createAndroidManifestPlugin(\n  action: MutateDataAction<Manifest.AndroidManifest>,\n  name: string\n): ConfigPlugin {\n  const withUnknown: ConfigPlugin = (config) =>\n    withAndroidManifest(config, async (config) => {\n      config.modResults = await action(config, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\nexport function createStringsXmlPlugin(\n  action: MutateDataAction<Resources.ResourceXML>,\n  name: string\n): ConfigPlugin {\n  const withUnknown: ConfigPlugin = (config) =>\n    withStringsXml(config, async (config) => {\n      config.modResults = await action(config, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\n/**\n * Provides the AndroidManifest.xml for modification.\n *\n * @param config\n * @param action\n */\nexport const withAndroidManifest: ConfigPlugin<Mod<Manifest.AndroidManifest>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'manifest',\n    action,\n  });\n};\n\n/**\n * Provides the strings.xml for modification.\n *\n * @param config\n * @param action\n */\nexport const withStringsXml: ConfigPlugin<Mod<Resources.ResourceXML>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'strings',\n    action,\n  });\n};\n\n/**\n * Provides the `android/app/src/main/res/values/colors.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport const withAndroidColors: ConfigPlugin<Mod<Resources.ResourceXML>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'colors',\n    action,\n  });\n};\n\n/**\n * Provides the `android/app/src/main/res/values-night/colors.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport const withAndroidColorsNight: ConfigPlugin<Mod<Resources.ResourceXML>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'colorsNight',\n    action,\n  });\n};\n\n/**\n * Provides the `android/app/src/main/res/values/styles.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport const withAndroidStyles: ConfigPlugin<Mod<Resources.ResourceXML>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'styles',\n    action,\n  });\n};\n\n/**\n * Provides the project MainActivity for modification.\n *\n * @param config\n * @param action\n */\nexport const withMainActivity: ConfigPlugin<Mod<Paths.ApplicationProjectFile>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'mainActivity',\n    action,\n  });\n};\n\n/**\n * Provides the project MainApplication for modification.\n *\n * @param config\n * @param action\n */\nexport const withMainApplication: ConfigPlugin<Mod<Paths.ApplicationProjectFile>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'mainApplication',\n    action,\n  });\n};\n\n/**\n * Provides the project /build.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport const withProjectBuildGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'projectBuildGradle',\n    action,\n  });\n};\n\n/**\n * Provides the app/build.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport const withAppBuildGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'appBuildGradle',\n    action,\n  });\n};\n\n/**\n * Provides the /settings.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport const withSettingsGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'settingsGradle',\n    action,\n  });\n};\n\n/**\n * Provides the /gradle.properties for modification.\n *\n * @param config\n * @param action\n */\nexport const withGradleProperties: ConfigPlugin<Mod<Properties.PropertiesItem[]>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'gradleProperties',\n    action,\n  });\n};\n"]},"metadata":{},"sourceType":"script"}