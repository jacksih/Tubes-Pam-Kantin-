{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cacheKeyParts = void 0;\nexports.getCacheKey = getCacheKey;\nfunction _crypto() {\n  var data = _interopRequireDefault(require(\"crypto\"));\n  _crypto = function _crypto() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = require(\"fs\");\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar cacheKeyParts = [(0, _fs().readFileSync)(__filename), process.env.EXPO_METRO_CACHE_KEY_VERSION || '3.3.0'];\nexports.cacheKeyParts = cacheKeyParts;\nfunction getCacheKey() {\n  var key = _crypto().default.createHash('md5');\n  cacheKeyParts.forEach(function (part) {\n    return key.update(part);\n  });\n  return key.digest('hex');\n}","map":{"version":3,"sources":["../../src/transformer/getCacheKey.ts"],"names":["cacheKeyParts","__filename","process","env","EXPO_METRO_CACHE_KEY_VERSION","getCacheKey","key","crypto","createHash","forEach","part","update","digest"],"mappings":";;;;;;;AAAA,SAAA,OAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;EAAA,OAAA,GAAA,mBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,GAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA;EAAA,GAAA,GAAA,eAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;;;;;;AAEO,IAAMA,aAAa,GAAG,CAC3B,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,YAAA,EAAaC,UAAb,CAD2B,EAI3BC,OAAO,CAACC,GAARD,CAAYE,4BAAZF,IAA4C,OAJjB,CAAtB;;AASA,SAASG,WAAT,GAA+B;EACpC,IAAMC,GAAG,GAAGC,OAAAA,EAAAA,CAAAA,OAAAA,CAAOC,UAAPD,CAAkB,KAAlBA,CAAZ;EACAP,aAAa,CAACS,OAAdT,CAAuBU,UAAAA,IAAD;IAAA,OAAUJ,GAAG,CAACK,MAAJL,CAAWI,IAAXJ,CAAhCN;EAAAA,EAAAA;EACA,OAAOM,GAAG,CAACM,MAAJN,CAAW,KAAXA,CAAP;AACD","sourcesContent":["import crypto from 'crypto';\nimport { readFileSync } from 'fs';\n\nexport const cacheKeyParts = [\n  readFileSync(__filename),\n  // Since babel-preset-fbjs cannot be safely resolved relative to the\n  // project root, use this environment variable that we define earlier.\n  process.env.EXPO_METRO_CACHE_KEY_VERSION || '3.3.0',\n  //   require('babel-preset-fbjs/package.json').version,\n];\n\n// Matches upstream\nexport function getCacheKey(): string {\n  const key = crypto.createHash('md5');\n  cacheKeyParts.forEach((part) => key.update(part));\n  return key.digest('hex');\n}\n"]},"metadata":{},"sourceType":"script"}