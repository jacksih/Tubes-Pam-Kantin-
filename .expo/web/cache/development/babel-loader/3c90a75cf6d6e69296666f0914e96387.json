{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = PlatformPressable;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _excluded = [\"onPressIn\", \"onPressOut\", \"android_ripple\", \"pressColor\", \"pressOpacity\", \"style\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar AnimatedPressable = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);\nvar ANDROID_VERSION_LOLLIPOP = 21;\nvar ANDROID_SUPPORTS_RIPPLE = _reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP;\nfunction PlatformPressable(_ref) {\n  var onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    android_ripple = _ref.android_ripple,\n    pressColor = _ref.pressColor,\n    _ref$pressOpacity = _ref.pressOpacity,\n    pressOpacity = _ref$pressOpacity === void 0 ? 0.3 : _ref$pressOpacity,\n    style = _ref.style,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _useTheme = (0, _native.useTheme)(),\n    dark = _useTheme.dark;\n  var _React$useState = React.useState(function () {\n      return new _reactNative.Animated.Value(1);\n    }),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n    opacity = _React$useState2[0];\n  var animateTo = function animateTo(toValue, duration) {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n    _reactNative.Animated.timing(opacity, {\n      toValue: toValue,\n      duration: duration,\n      easing: _reactNative.Easing.inOut(_reactNative.Easing.quad),\n      useNativeDriver: true\n    }).start();\n  };\n  var handlePressIn = function handlePressIn(e) {\n    animateTo(pressOpacity, 0);\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n  };\n  var handlePressOut = function handlePressOut(e) {\n    animateTo(1, 200);\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(e);\n  };\n  return React.createElement(AnimatedPressable, _extends({\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    android_ripple: ANDROID_SUPPORTS_RIPPLE ? Object.assign({\n      color: pressColor !== undefined ? pressColor : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)'\n    }, android_ripple) : undefined,\n    style: [{\n      opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1\n    }, style]\n  }, rest));\n}","map":{"version":3,"sources":["PlatformPressable.tsx"],"names":["AnimatedPressable","Animated","createAnimatedComponent","Pressable","ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","Platform","OS","Version","PlatformPressable","onPressIn","onPressOut","android_ripple","pressColor","pressOpacity","style","rest","dark","useTheme","opacity","React","useState","Value","animateTo","toValue","duration","timing","easing","Easing","inOut","quad","useNativeDriver","start","handlePressIn","e","handlePressOut","color","undefined"],"mappings":";;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AAkBA,IAAMA,iBAAiB,GAAGC,qBAAQ,CAACC,uBAATD,CAAiCE,sBAAjCF,CAA1B;AAEA,IAAMG,wBAAwB,GAAG,EAAjC;AACA,IAAMC,uBAAuB,GAC3BC,qBAAQ,CAACC,EAATD,KAAgB,SAAhBA,IAA6BA,qBAAQ,CAACE,OAATF,IAAoBF,wBADnD;AAMe,SAASK,iBAAT,CAAA,IAAA,EAQL;EARgC,IACxCC,SADwC,GAQhC,IAAA,CAPRA,SADwC;IAExCC,UAFwC,GAQhC,IAAA,CANRA,UAFwC;IAGxCC,cAHwC,GAQhC,IAAA,CALRA,cAHwC;IAIxCC,UAJwC,GAQhC,IAAA,CAJRA,UAJwC;IAAA,oBAQhC,IAAA,CAHRC,YAAY;IAAZA,YAAY,kCAAG,GALyB;IAMxCC,KANwC,GAQhC,IAAA,CAFRA,KANwC;IAOrCC,IAAAA,0CACK,IAAA;EACR,gBAAiBE,IAAAA,gBAAQ,GAAzB;IAAQD,IAAAA,aAAAA,IAAAA;EACR,sBAAkBG,KAAK,CAACC,QAAND,CAAe;MAAA,OAAM,IAAInB,qBAAQ,CAACqB,KAAb,CAAmB,CAAnB,CAArBF;IAAAA,EAAlB;IAAA;IAAOD,OAAD;EAEN,IAAMI,SAAS,GAAG,SAAZA,SAAS,CAAIC,OAAD,EAAkBC,QAAlB,EAAuC;IACvD,IAAIpB,uBAAJ,EAA6B;MAC3B;IACD;IAEDJ,qBAAQ,CAACyB,MAATzB,CAAgBkB,OAAhBlB,EAAyB;MACvBuB,OADuB,EACvBA,OADuB;MAEvBC,QAFuB,EAEvBA,QAFuB;MAGvBE,MAAM,EAAEC,mBAAM,CAACC,KAAPD,CAAaA,mBAAM,CAACE,IAApBF,CAHe;MAIvBG,eAAe,EAAE;IAJM,CAAzB9B,CAAAA,CAKG+B,KALH/B,EAAAA;EAMD,CAXD;EAaA,IAAMgC,aAAa,GAAIC,SAAjBD,aAAa,CAAIC,CAAD,EAA8B;IAClDX,SAAS,CAACT,YAAD,EAAe,CAAf,CAATS;IACAb,SAAS,KAAA,IAATA,IAAAA,SAAS,KAAA,KAAA,CAATA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAGwB,CAAH,CAATxB;EACD,CAHD;EAKA,IAAMyB,cAAc,GAAID,SAAlBC,cAAc,CAAID,CAAD,EAA8B;IACnDX,SAAS,CAAC,CAAD,EAAI,GAAJ,CAATA;IACAZ,UAAU,KAAA,IAAVA,IAAAA,UAAU,KAAA,KAAA,CAAVA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAGuB,CAAH,CAAVvB;EACD,CAHD;EAKA,OACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA,QAAA,CAAA;IACE,SAAS,EAAEsB,aADb;IAEE,UAAU,EAAEE,cAFd;IAGE,cAAc,EACZ9B,uBAAuB;MAEjB+B,KAAK,EACHvB,UAAU,KAAKwB,SAAfxB,GACIA,UADJA,GAEII,IAAI,GACJ,0BADI,GAEJ;IANR,GAOKL,cAAAA,IAELyB,SAdR;IAgBE,KAAK,EAAE,CAAC;MAAElB,OAAO,EAAE,CAACd,uBAAD,GAA2Bc,OAA3B,GAAqC;IAAhD,CAAD,EAAsDJ,KAAtD;EAhBT,CAAA,EAiBMC,IAjBN,CAAA,CADF;AAqBD","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nexport type Props = Omit<PressableProps, 'style'> & {\n  pressColor?: string;\n  pressOpacity?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children: React.ReactNode;\n};\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({\n  onPressIn,\n  onPressOut,\n  android_ripple,\n  pressColor,\n  pressOpacity = 0.3,\n  style,\n  ...rest\n}: Props) {\n  const { dark } = useTheme();\n  const [opacity] = React.useState(() => new Animated.Value(1));\n\n  const animateTo = (toValue: number, duration: number) => {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    animateTo(pressOpacity, 0);\n    onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    animateTo(1, 200);\n    onPressOut?.(e);\n  };\n\n  return (\n    <AnimatedPressable\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                  ? 'rgba(255, 255, 255, .32)'\n                  : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={[{ opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1 }, style]}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"script"}