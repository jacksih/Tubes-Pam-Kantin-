{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"com.apple.developer.associated-domains\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureApplicationTargetEntitlementsFileConfigured = ensureApplicationTargetEntitlementsFileConfigured;\nexports.getEntitlementsPath = getEntitlementsPath;\nexports.setAssociatedDomains = setAssociatedDomains;\nexports.withAssociatedDomains = void 0;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _slash() {\n  var data = _interopRequireDefault(require(\"slash\"));\n  _slash = function _slash() {\n    return data;\n  };\n  return data;\n}\nfunction _iosPlugins() {\n  var data = require(\"../plugins/ios-plugins\");\n  _iosPlugins = function _iosPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Target() {\n  var data = require(\"./Target\");\n  _Target = function _Target() {\n    return data;\n  };\n  return data;\n}\nfunction _Xcodeproj() {\n  var data = require(\"./utils/Xcodeproj\");\n  _Xcodeproj = function _Xcodeproj() {\n    return data;\n  };\n  return data;\n}\nfunction _string() {\n  var data = require(\"./utils/string\");\n  _string = function _string() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar withAssociatedDomains = (0, _iosPlugins().createEntitlementsPlugin)(setAssociatedDomains, 'withAssociatedDomains');\nexports.withAssociatedDomains = withAssociatedDomains;\nfunction setAssociatedDomains(config, _ref) {\n  var _ = _ref['com.apple.developer.associated-domains'],\n    entitlementsPlist = _objectWithoutProperties(_ref, _excluded);\n  var _config$ios;\n  if ((_config$ios = config.ios) !== null && _config$ios !== void 0 && _config$ios.associatedDomains) {\n    return Object.assign({}, entitlementsPlist, {\n      'com.apple.developer.associated-domains': config.ios.associatedDomains\n    });\n  }\n  return entitlementsPlist;\n}\nfunction getEntitlementsPath(projectRoot) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    targetName = _ref2.targetName,\n    _ref2$buildConfigurat = _ref2.buildConfiguration,\n    buildConfiguration = _ref2$buildConfigurat === void 0 ? 'Release' : _ref2$buildConfigurat;\n  var project = (0, _Xcodeproj().getPbxproj)(projectRoot);\n  var xcBuildConfiguration = (0, _Target().getXCBuildConfigurationFromPbxproj)(project, {\n    targetName: targetName,\n    buildConfiguration: buildConfiguration\n  });\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n  var entitlementsPath = getEntitlementsPathFromBuildConfiguration(projectRoot, xcBuildConfiguration);\n  return entitlementsPath && _fs().default.existsSync(entitlementsPath) ? entitlementsPath : null;\n}\nfunction getEntitlementsPathFromBuildConfiguration(projectRoot, xcBuildConfiguration) {\n  var _xcBuildConfiguration;\n  var entitlementsPathRaw = xcBuildConfiguration === null || xcBuildConfiguration === void 0 ? void 0 : (_xcBuildConfiguration = xcBuildConfiguration.buildSettings) === null || _xcBuildConfiguration === void 0 ? void 0 : _xcBuildConfiguration.CODE_SIGN_ENTITLEMENTS;\n  if (entitlementsPathRaw) {\n    return _path().default.normalize(_path().default.join(projectRoot, 'ios', (0, _string().trimQuotes)(entitlementsPathRaw)));\n  } else {\n    return null;\n  }\n}\nfunction ensureApplicationTargetEntitlementsFileConfigured(projectRoot) {\n  var project = (0, _Xcodeproj().getPbxproj)(projectRoot);\n  var projectName = (0, _Xcodeproj().getProjectName)(projectRoot);\n  var productName = (0, _Xcodeproj().getProductName)(project);\n  var _ref3 = (0, _Target().findFirstNativeTarget)(project),\n    _ref4 = _slicedToArray(_ref3, 2),\n    applicationTarget = _ref4[1];\n  var buildConfigurations = (0, _Xcodeproj().getBuildConfigurationsForListId)(project, applicationTarget.buildConfigurationList);\n  var hasChangesToWrite = false;\n  for (var _ref5 of buildConfigurations) {\n    var _ref6 = _slicedToArray(_ref5, 2);\n    var xcBuildConfiguration = _ref6[1];\n    var oldEntitlementPath = getEntitlementsPathFromBuildConfiguration(projectRoot, xcBuildConfiguration);\n    if (oldEntitlementPath && _fs().default.existsSync(oldEntitlementPath)) {\n      return;\n    }\n    hasChangesToWrite = true;\n    var entitlementsRelativePath = (0, _slash().default)(_path().default.join(projectName, productName + \".entitlements\"));\n    var entitlementsPath = _path().default.normalize(_path().default.join(projectRoot, 'ios', entitlementsRelativePath));\n    _fs().default.mkdirSync(_path().default.dirname(entitlementsPath), {\n      recursive: true\n    });\n    if (!_fs().default.existsSync(entitlementsPath)) {\n      _fs().default.writeFileSync(entitlementsPath, ENTITLEMENTS_TEMPLATE);\n    }\n    xcBuildConfiguration.buildSettings.CODE_SIGN_ENTITLEMENTS = entitlementsRelativePath;\n  }\n  if (hasChangesToWrite) {\n    _fs().default.writeFileSync(project.filepath, project.writeSync());\n  }\n}\nvar ENTITLEMENTS_TEMPLATE = \"\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE plist PUBLIC \\\"-//Apple//DTD PLIST 1.0//EN\\\" \\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\n<plist version=\\\"1.0\\\">\\n<dict>\\n</dict>\\n</plist>\\n\";","map":{"version":3,"sources":["../../src/ios/Entitlements.ts"],"names":["withAssociatedDomains","setAssociatedDomains","config","_","entitlementsPlist","ios","associatedDomains","getEntitlementsPath","projectRoot","targetName","buildConfiguration","project","xcBuildConfiguration","entitlementsPath","getEntitlementsPathFromBuildConfiguration","fs","existsSync","entitlementsPathRaw","buildSettings","CODE_SIGN_ENTITLEMENTS","path","normalize","join","ensureApplicationTargetEntitlementsFileConfigured","projectName","productName","applicationTarget","buildConfigurations","buildConfigurationList","hasChangesToWrite","oldEntitlementPath","entitlementsRelativePath","mkdirSync","dirname","recursive","writeFileSync","ENTITLEMENTS_TEMPLATE","filepath","writeSync"],"mappings":"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","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { JSONObject } from '@expo/json-file';\nimport fs from 'fs';\nimport path from 'path';\nimport slash from 'slash';\nimport { XCBuildConfiguration } from 'xcode';\n\nimport { createEntitlementsPlugin } from '../plugins/ios-plugins';\nimport { findFirstNativeTarget, getXCBuildConfigurationFromPbxproj } from './Target';\nimport {\n  getBuildConfigurationsForListId,\n  getPbxproj,\n  getProductName,\n  getProjectName,\n} from './utils/Xcodeproj';\nimport { trimQuotes } from './utils/string';\n\nexport const withAssociatedDomains = createEntitlementsPlugin(\n  setAssociatedDomains,\n  'withAssociatedDomains'\n);\n\nexport function setAssociatedDomains(\n  config: ExpoConfig,\n  { 'com.apple.developer.associated-domains': _, ...entitlementsPlist }: JSONObject\n): JSONObject {\n  if (config.ios?.associatedDomains) {\n    return {\n      ...entitlementsPlist,\n      'com.apple.developer.associated-domains': config.ios.associatedDomains,\n    };\n  }\n\n  return entitlementsPlist;\n}\n\nexport function getEntitlementsPath(\n  projectRoot: string,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string } = {}\n): string | null {\n  const project = getPbxproj(projectRoot);\n  const xcBuildConfiguration = getXCBuildConfigurationFromPbxproj(project, {\n    targetName,\n    buildConfiguration,\n  });\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n  const entitlementsPath = getEntitlementsPathFromBuildConfiguration(\n    projectRoot,\n    xcBuildConfiguration\n  );\n  return entitlementsPath && fs.existsSync(entitlementsPath) ? entitlementsPath : null;\n}\n\nfunction getEntitlementsPathFromBuildConfiguration(\n  projectRoot: string,\n  xcBuildConfiguration: XCBuildConfiguration\n): string | null {\n  const entitlementsPathRaw = xcBuildConfiguration?.buildSettings?.CODE_SIGN_ENTITLEMENTS as\n    | string\n    | undefined;\n  if (entitlementsPathRaw) {\n    return path.normalize(path.join(projectRoot, 'ios', trimQuotes(entitlementsPathRaw)));\n  } else {\n    return null;\n  }\n}\n\nexport function ensureApplicationTargetEntitlementsFileConfigured(projectRoot: string): void {\n  const project = getPbxproj(projectRoot);\n  const projectName = getProjectName(projectRoot);\n  const productName = getProductName(project);\n\n  const [, applicationTarget] = findFirstNativeTarget(project);\n  const buildConfigurations = getBuildConfigurationsForListId(\n    project,\n    applicationTarget.buildConfigurationList\n  );\n  let hasChangesToWrite = false;\n  for (const [, xcBuildConfiguration] of buildConfigurations) {\n    const oldEntitlementPath = getEntitlementsPathFromBuildConfiguration(\n      projectRoot,\n      xcBuildConfiguration\n    );\n    if (oldEntitlementPath && fs.existsSync(oldEntitlementPath)) {\n      return;\n    }\n    hasChangesToWrite = true;\n    // Use posix formatted path, even on Windows\n    const entitlementsRelativePath = slash(path.join(projectName, `${productName}.entitlements`));\n    const entitlementsPath = path.normalize(\n      path.join(projectRoot, 'ios', entitlementsRelativePath)\n    );\n    fs.mkdirSync(path.dirname(entitlementsPath), { recursive: true });\n    if (!fs.existsSync(entitlementsPath)) {\n      fs.writeFileSync(entitlementsPath, ENTITLEMENTS_TEMPLATE);\n    }\n    xcBuildConfiguration.buildSettings.CODE_SIGN_ENTITLEMENTS = entitlementsRelativePath;\n  }\n  if (hasChangesToWrite) {\n    fs.writeFileSync(project.filepath, project.writeSync());\n  }\n}\n\nconst ENTITLEMENTS_TEMPLATE = `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n</dict>\n</plist>\n`;\n"]},"metadata":{},"sourceType":"script"}