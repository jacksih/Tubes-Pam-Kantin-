{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar code_frame_1 = require(\"@babel/code-frame\");\nvar fs_1 = __importDefault(require(\"fs\"));\nvar json5_1 = __importDefault(require(\"json5\"));\nvar path_1 = __importDefault(require(\"path\"));\nvar util_1 = require(\"util\");\nvar write_file_atomic_1 = __importDefault(require(\"write-file-atomic\"));\nvar JsonFileError_1 = __importStar(require(\"./JsonFileError\"));\nvar writeFileAtomicAsync = (0, util_1.promisify)(write_file_atomic_1.default);\nvar DEFAULT_OPTIONS = {\n  badJsonDefault: undefined,\n  jsonParseErrorDefault: undefined,\n  cantReadFileDefault: undefined,\n  ensureDir: false,\n  default: undefined,\n  json5: false,\n  space: 2,\n  addNewLineAtEOF: true\n};\nvar JsonFile = function () {\n  function JsonFile(file) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, JsonFile);\n    this.file = file;\n    this.options = options;\n  }\n  _createClass(JsonFile, [{\n    key: \"read\",\n    value: function read(options) {\n      return _read(this.file, this._getOptions(options));\n    }\n  }, {\n    key: \"readAsync\",\n    value: function () {\n      var _readAsync2 = _asyncToGenerator(function* (options) {\n        return _readAsync(this.file, this._getOptions(options));\n      });\n      function readAsync(_x) {\n        return _readAsync2.apply(this, arguments);\n      }\n      return readAsync;\n    }()\n  }, {\n    key: \"writeAsync\",\n    value: function () {\n      var _writeAsync2 = _asyncToGenerator(function* (object, options) {\n        return _writeAsync(this.file, object, this._getOptions(options));\n      });\n      function writeAsync(_x2, _x3) {\n        return _writeAsync2.apply(this, arguments);\n      }\n      return writeAsync;\n    }()\n  }, {\n    key: \"parseJsonString\",\n    value: function parseJsonString(json, options) {\n      return _parseJsonString(json, options);\n    }\n  }, {\n    key: \"getAsync\",\n    value: function () {\n      var _getAsync2 = _asyncToGenerator(function* (key, defaultValue, options) {\n        return _getAsync(this.file, key, defaultValue, this._getOptions(options));\n      });\n      function getAsync(_x4, _x5, _x6) {\n        return _getAsync2.apply(this, arguments);\n      }\n      return getAsync;\n    }()\n  }, {\n    key: \"setAsync\",\n    value: function () {\n      var _setAsync2 = _asyncToGenerator(function* (key, value, options) {\n        return _setAsync(this.file, key, value, this._getOptions(options));\n      });\n      function setAsync(_x7, _x8, _x9) {\n        return _setAsync2.apply(this, arguments);\n      }\n      return setAsync;\n    }()\n  }, {\n    key: \"mergeAsync\",\n    value: function () {\n      var _mergeAsync2 = _asyncToGenerator(function* (sources, options) {\n        return _mergeAsync(this.file, sources, this._getOptions(options));\n      });\n      function mergeAsync(_x10, _x11) {\n        return _mergeAsync2.apply(this, arguments);\n      }\n      return mergeAsync;\n    }()\n  }, {\n    key: \"deleteKeyAsync\",\n    value: function () {\n      var _deleteKeyAsync2 = _asyncToGenerator(function* (key, options) {\n        return _deleteKeyAsync(this.file, key, this._getOptions(options));\n      });\n      function deleteKeyAsync(_x12, _x13) {\n        return _deleteKeyAsync2.apply(this, arguments);\n      }\n      return deleteKeyAsync;\n    }()\n  }, {\n    key: \"deleteKeysAsync\",\n    value: function () {\n      var _deleteKeysAsync2 = _asyncToGenerator(function* (keys, options) {\n        return _deleteKeysAsync(this.file, keys, this._getOptions(options));\n      });\n      function deleteKeysAsync(_x14, _x15) {\n        return _deleteKeysAsync2.apply(this, arguments);\n      }\n      return deleteKeysAsync;\n    }()\n  }, {\n    key: \"rewriteAsync\",\n    value: function () {\n      var _rewriteAsync2 = _asyncToGenerator(function* (options) {\n        return _rewriteAsync(this.file, this._getOptions(options));\n      });\n      function rewriteAsync(_x16) {\n        return _rewriteAsync2.apply(this, arguments);\n      }\n      return rewriteAsync;\n    }()\n  }, {\n    key: \"_getOptions\",\n    value: function _getOptions(options) {\n      return Object.assign({}, this.options, options);\n    }\n  }]);\n  return JsonFile;\n}();\nexports.default = JsonFile;\nJsonFile.read = _read;\nJsonFile.readAsync = _readAsync;\nJsonFile.parseJsonString = _parseJsonString;\nJsonFile.writeAsync = _writeAsync;\nJsonFile.getAsync = _getAsync;\nJsonFile.setAsync = _setAsync;\nJsonFile.mergeAsync = _mergeAsync;\nJsonFile.deleteKeyAsync = _deleteKeyAsync;\nJsonFile.deleteKeysAsync = _deleteKeysAsync;\nJsonFile.rewriteAsync = _rewriteAsync;\nfunction _read(file, options) {\n  var json;\n  try {\n    json = fs_1.default.readFileSync(file, 'utf8');\n  } catch (error) {\n    assertEmptyJsonString(json, file);\n    var defaultValue = cantReadFileDefault(options);\n    if (defaultValue === undefined) {\n      throw new JsonFileError_1.default(\"Can't read JSON file: \" + file, error, error.code, file);\n    } else {\n      return defaultValue;\n    }\n  }\n  return _parseJsonString(json, options, file);\n}\nfunction _readAsync(_x17, _x18) {\n  return _readAsync3.apply(this, arguments);\n}\nfunction _readAsync3() {\n  _readAsync3 = _asyncToGenerator(function* (file, options) {\n    var json;\n    try {\n      json = yield fs_1.default.promises.readFile(file, 'utf8');\n    } catch (error) {\n      assertEmptyJsonString(json, file);\n      var defaultValue = cantReadFileDefault(options);\n      if (defaultValue === undefined) {\n        throw new JsonFileError_1.default(\"Can't read JSON file: \" + file, error, error.code);\n      } else {\n        return defaultValue;\n      }\n    }\n    return _parseJsonString(json, options);\n  });\n  return _readAsync3.apply(this, arguments);\n}\nfunction _parseJsonString(json, options, fileName) {\n  assertEmptyJsonString(json, fileName);\n  try {\n    if (_getOption(options, 'json5')) {\n      return json5_1.default.parse(json);\n    } else {\n      return JSON.parse(json);\n    }\n  } catch (e) {\n    var defaultValue = jsonParseErrorDefault(options);\n    if (defaultValue === undefined) {\n      var location = locationFromSyntaxError(e, json);\n      if (location) {\n        var codeFrame = (0, code_frame_1.codeFrameColumns)(json, {\n          start: location\n        });\n        e.codeFrame = codeFrame;\n        e.message += \"\\n\" + codeFrame;\n      }\n      throw new JsonFileError_1.default(\"Error parsing JSON: \" + json, e, 'EJSONPARSE', fileName);\n    } else {\n      return defaultValue;\n    }\n  }\n}\nfunction _getAsync(_x19, _x20, _x21, _x22) {\n  return _getAsync3.apply(this, arguments);\n}\nfunction _getAsync3() {\n  _getAsync3 = _asyncToGenerator(function* (file, key, defaultValue, options) {\n    var object = yield _readAsync(file, options);\n    if (key in object) {\n      return object[key];\n    }\n    if (defaultValue === undefined) {\n      throw new JsonFileError_1.default(\"No value at key path \\\"\" + key + \"\\\" in JSON object from: \" + file);\n    }\n    return defaultValue;\n  });\n  return _getAsync3.apply(this, arguments);\n}\nfunction _writeAsync(_x23, _x24, _x25) {\n  return _writeAsync3.apply(this, arguments);\n}\nfunction _writeAsync3() {\n  _writeAsync3 = _asyncToGenerator(function* (file, object, options) {\n    if (options === null || options === void 0 ? void 0 : options.ensureDir) {\n      yield fs_1.default.promises.mkdir(path_1.default.dirname(file), {\n        recursive: true\n      });\n    }\n    var space = _getOption(options, 'space');\n    var json5 = _getOption(options, 'json5');\n    var addNewLineAtEOF = _getOption(options, 'addNewLineAtEOF');\n    var json;\n    try {\n      if (json5) {\n        json = json5_1.default.stringify(object, null, space);\n      } else {\n        json = JSON.stringify(object, null, space);\n      }\n    } catch (e) {\n      throw new JsonFileError_1.default(\"Couldn't JSON.stringify object for file: \" + file, e);\n    }\n    var data = addNewLineAtEOF ? json + \"\\n\" : json;\n    yield writeFileAtomicAsync(file, data, {});\n    return object;\n  });\n  return _writeAsync3.apply(this, arguments);\n}\nfunction _setAsync(_x26, _x27, _x28, _x29) {\n  return _setAsync3.apply(this, arguments);\n}\nfunction _setAsync3() {\n  _setAsync3 = _asyncToGenerator(function* (file, key, value, options) {\n    var object = yield _readAsync(file, options);\n    return _writeAsync(file, Object.assign({}, object, _defineProperty({}, key, value)), options);\n  });\n  return _setAsync3.apply(this, arguments);\n}\nfunction _mergeAsync(_x30, _x31, _x32) {\n  return _mergeAsync3.apply(this, arguments);\n}\nfunction _mergeAsync3() {\n  _mergeAsync3 = _asyncToGenerator(function* (file, sources, options) {\n    var object = yield _readAsync(file, options);\n    if (Array.isArray(sources)) {\n      Object.assign.apply(Object, [object].concat(_toConsumableArray(sources)));\n    } else {\n      Object.assign(object, sources);\n    }\n    return _writeAsync(file, object, options);\n  });\n  return _mergeAsync3.apply(this, arguments);\n}\nfunction _deleteKeyAsync(_x33, _x34, _x35) {\n  return _deleteKeyAsync3.apply(this, arguments);\n}\nfunction _deleteKeyAsync3() {\n  _deleteKeyAsync3 = _asyncToGenerator(function* (file, key, options) {\n    return _deleteKeysAsync(file, [key], options);\n  });\n  return _deleteKeyAsync3.apply(this, arguments);\n}\nfunction _deleteKeysAsync(_x36, _x37, _x38) {\n  return _deleteKeysAsync3.apply(this, arguments);\n}\nfunction _deleteKeysAsync3() {\n  _deleteKeysAsync3 = _asyncToGenerator(function* (file, keys, options) {\n    var object = yield _readAsync(file, options);\n    var didDelete = false;\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (object.hasOwnProperty(key)) {\n        delete object[key];\n        didDelete = true;\n      }\n    }\n    if (didDelete) {\n      return _writeAsync(file, object, options);\n    }\n    return object;\n  });\n  return _deleteKeysAsync3.apply(this, arguments);\n}\nfunction _rewriteAsync(_x39, _x40) {\n  return _rewriteAsync3.apply(this, arguments);\n}\nfunction _rewriteAsync3() {\n  _rewriteAsync3 = _asyncToGenerator(function* (file, options) {\n    var object = yield _readAsync(file, options);\n    return _writeAsync(file, object, options);\n  });\n  return _rewriteAsync3.apply(this, arguments);\n}\nfunction jsonParseErrorDefault() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (options.jsonParseErrorDefault === undefined) {\n    return options.default;\n  } else {\n    return options.jsonParseErrorDefault;\n  }\n}\nfunction cantReadFileDefault() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (options.cantReadFileDefault === undefined) {\n    return options.default;\n  } else {\n    return options.cantReadFileDefault;\n  }\n}\nfunction _getOption(options, field) {\n  if (options) {\n    if (options[field] !== undefined) {\n      return options[field];\n    }\n  }\n  return DEFAULT_OPTIONS[field];\n}\nfunction locationFromSyntaxError(error, sourceString) {\n  if ('lineNumber' in error && 'columnNumber' in error) {\n    return {\n      line: error.lineNumber,\n      column: error.columnNumber\n    };\n  }\n  var match = /at position (\\d+)/.exec(error.message);\n  if (match) {\n    var index = parseInt(match[1], 10);\n    var lines = sourceString.slice(0, index + 1).split('\\n');\n    return {\n      line: lines.length,\n      column: lines[lines.length - 1].length\n    };\n  }\n  return null;\n}\nfunction assertEmptyJsonString(json, file) {\n  if ((json === null || json === void 0 ? void 0 : json.trim()) === '') {\n    throw new JsonFileError_1.EmptyJsonFileError(file);\n  }\n}","map":{"version":3,"sources":["../src/JsonFile.ts"],"names":[],"mappings":"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","sourcesContent":["import { codeFrameColumns } from '@babel/code-frame';\nimport fs from 'fs';\nimport JSON5 from 'json5';\nimport path from 'path';\nimport { promisify } from 'util';\nimport writeFileAtomic from 'write-file-atomic';\n\nimport JsonFileError, { EmptyJsonFileError } from './JsonFileError';\n\nconst writeFileAtomicAsync: (\n  filename: string,\n  data: string | Buffer,\n  options: writeFileAtomic.Options\n) => void = promisify(writeFileAtomic);\n\nexport type JSONValue = boolean | number | string | null | JSONArray | JSONObject;\nexport interface JSONArray extends Array<JSONValue> {}\nexport interface JSONObject {\n  [key: string]: JSONValue | undefined;\n}\n\ntype Defined<T> = T extends undefined ? never : T;\n\ntype Options<TJSONObject extends JSONObject> = {\n  badJsonDefault?: TJSONObject;\n  jsonParseErrorDefault?: TJSONObject;\n  cantReadFileDefault?: TJSONObject;\n  ensureDir?: boolean;\n  default?: TJSONObject;\n  json5?: boolean;\n  space?: number;\n  addNewLineAtEOF?: boolean;\n};\n\nconst DEFAULT_OPTIONS = {\n  badJsonDefault: undefined,\n  jsonParseErrorDefault: undefined,\n  cantReadFileDefault: undefined,\n  ensureDir: false,\n  default: undefined,\n  json5: false,\n  space: 2,\n  addNewLineAtEOF: true,\n};\n\n/**\n * The JsonFile class represents the contents of json file.\n *\n * It's polymorphic on \"JSONObject\", which is a simple type representing\n * and object with string keys and either objects or primitive types as values.\n * @type {[type]}\n */\nexport default class JsonFile<TJSONObject extends JSONObject> {\n  file: string;\n  options: Options<TJSONObject>;\n\n  static read = read;\n  static readAsync = readAsync;\n  static parseJsonString = parseJsonString;\n  static writeAsync = writeAsync;\n  static getAsync = getAsync;\n  static setAsync = setAsync;\n  static mergeAsync = mergeAsync;\n  static deleteKeyAsync = deleteKeyAsync;\n  static deleteKeysAsync = deleteKeysAsync;\n  static rewriteAsync = rewriteAsync;\n\n  constructor(file: string, options: Options<TJSONObject> = {}) {\n    this.file = file;\n    this.options = options;\n  }\n\n  read(options?: Options<TJSONObject>): TJSONObject {\n    return read(this.file, this._getOptions(options));\n  }\n\n  async readAsync(options?: Options<TJSONObject>): Promise<TJSONObject> {\n    return readAsync(this.file, this._getOptions(options));\n  }\n\n  async writeAsync(object: TJSONObject, options?: Options<TJSONObject>) {\n    return writeAsync(this.file, object, this._getOptions(options));\n  }\n\n  parseJsonString(json: string, options?: Options<TJSONObject>): TJSONObject {\n    return parseJsonString(json, options);\n  }\n\n  async getAsync<K extends keyof TJSONObject, TDefault extends TJSONObject[K] | null>(\n    key: K,\n    defaultValue: TDefault,\n    options?: Options<TJSONObject>\n  ): Promise<Defined<TJSONObject[K]> | TDefault> {\n    return getAsync(this.file, key, defaultValue, this._getOptions(options));\n  }\n\n  async setAsync(key: string, value: unknown, options?: Options<TJSONObject>) {\n    return setAsync(this.file, key, value, this._getOptions(options));\n  }\n\n  async mergeAsync(\n    sources: Partial<TJSONObject> | Partial<TJSONObject>[],\n    options?: Options<TJSONObject>\n  ): Promise<TJSONObject> {\n    return mergeAsync<TJSONObject>(this.file, sources, this._getOptions(options));\n  }\n\n  async deleteKeyAsync(key: string, options?: Options<TJSONObject>) {\n    return deleteKeyAsync(this.file, key, this._getOptions(options));\n  }\n\n  async deleteKeysAsync(keys: string[], options?: Options<TJSONObject>) {\n    return deleteKeysAsync(this.file, keys, this._getOptions(options));\n  }\n\n  async rewriteAsync(options?: Options<TJSONObject>) {\n    return rewriteAsync(this.file, this._getOptions(options));\n  }\n\n  _getOptions(options?: Options<TJSONObject>): Options<TJSONObject> {\n    return {\n      ...this.options,\n      ...options,\n    };\n  }\n}\n\nfunction read<TJSONObject extends JSONObject>(\n  file: string,\n  options?: Options<TJSONObject>\n): TJSONObject {\n  let json;\n  try {\n    json = fs.readFileSync(file, 'utf8');\n  } catch (error: any) {\n    assertEmptyJsonString(json, file);\n    const defaultValue = cantReadFileDefault(options);\n    if (defaultValue === undefined) {\n      throw new JsonFileError(`Can't read JSON file: ${file}`, error, error.code, file);\n    } else {\n      return defaultValue;\n    }\n  }\n  return parseJsonString(json, options, file);\n}\n\nasync function readAsync<TJSONObject extends JSONObject>(\n  file: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  let json;\n  try {\n    json = await fs.promises.readFile(file, 'utf8');\n  } catch (error: any) {\n    assertEmptyJsonString(json, file);\n    const defaultValue = cantReadFileDefault(options);\n    if (defaultValue === undefined) {\n      throw new JsonFileError(`Can't read JSON file: ${file}`, error, error.code);\n    } else {\n      return defaultValue;\n    }\n  }\n  return parseJsonString(json, options);\n}\n\nfunction parseJsonString<TJSONObject extends JSONObject>(\n  json: string,\n  options?: Options<TJSONObject>,\n  fileName?: string\n): TJSONObject {\n  assertEmptyJsonString(json, fileName);\n  try {\n    if (_getOption(options, 'json5')) {\n      return JSON5.parse(json);\n    } else {\n      return JSON.parse(json);\n    }\n  } catch (e: any) {\n    const defaultValue = jsonParseErrorDefault(options);\n    if (defaultValue === undefined) {\n      const location = locationFromSyntaxError(e, json);\n      if (location) {\n        const codeFrame = codeFrameColumns(json, { start: location });\n        e.codeFrame = codeFrame;\n        e.message += `\\n${codeFrame}`;\n      }\n      throw new JsonFileError(`Error parsing JSON: ${json}`, e, 'EJSONPARSE', fileName);\n    } else {\n      return defaultValue;\n    }\n  }\n}\n\nasync function getAsync<TJSONObject extends JSONObject, K extends keyof TJSONObject, DefaultValue>(\n  file: string,\n  key: K,\n  defaultValue: DefaultValue,\n  options?: Options<TJSONObject>\n): Promise<any> {\n  const object = await readAsync(file, options);\n  if (key in object) {\n    return object[key];\n  }\n  if (defaultValue === undefined) {\n    throw new JsonFileError(`No value at key path \"${key}\" in JSON object from: ${file}`);\n  }\n  return defaultValue;\n}\n\nasync function writeAsync<TJSONObject extends JSONObject>(\n  file: string,\n  object: TJSONObject,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  if (options?.ensureDir) {\n    await fs.promises.mkdir(path.dirname(file), { recursive: true });\n  }\n  const space = _getOption(options, 'space');\n  const json5 = _getOption(options, 'json5');\n  const addNewLineAtEOF = _getOption(options, 'addNewLineAtEOF');\n  let json;\n  try {\n    if (json5) {\n      json = JSON5.stringify(object, null, space);\n    } else {\n      json = JSON.stringify(object, null, space);\n    }\n  } catch (e: any) {\n    throw new JsonFileError(`Couldn't JSON.stringify object for file: ${file}`, e);\n  }\n  const data = addNewLineAtEOF ? `${json}\\n` : json;\n  await writeFileAtomicAsync(file, data, {});\n  return object;\n}\n\nasync function setAsync<TJSONObject extends JSONObject>(\n  file: string,\n  key: string,\n  value: unknown,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  // TODO: Consider implementing some kind of locking mechanism, but\n  // it's not critical for our use case, so we'll leave it out for now\n  const object = await readAsync(file, options);\n  return writeAsync(file, { ...object, [key]: value }, options);\n}\n\nasync function mergeAsync<TJSONObject extends JSONObject>(\n  file: string,\n  sources: Partial<TJSONObject> | Partial<TJSONObject>[],\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  if (Array.isArray(sources)) {\n    Object.assign(object, ...sources);\n  } else {\n    Object.assign(object, sources);\n  }\n  return writeAsync(file, object, options);\n}\n\nasync function deleteKeyAsync<TJSONObject extends JSONObject>(\n  file: string,\n  key: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  return deleteKeysAsync(file, [key], options);\n}\n\nasync function deleteKeysAsync<TJSONObject extends JSONObject>(\n  file: string,\n  keys: string[],\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  let didDelete = false;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (object.hasOwnProperty(key)) {\n      delete object[key];\n      didDelete = true;\n    }\n  }\n\n  if (didDelete) {\n    return writeAsync(file, object, options);\n  }\n  return object;\n}\n\nasync function rewriteAsync<TJSONObject extends JSONObject>(\n  file: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  return writeAsync(file, object, options);\n}\n\nfunction jsonParseErrorDefault<TJSONObject extends JSONObject>(\n  options: Options<TJSONObject> = {}\n): TJSONObject | void {\n  if (options.jsonParseErrorDefault === undefined) {\n    return options.default;\n  } else {\n    return options.jsonParseErrorDefault;\n  }\n}\n\nfunction cantReadFileDefault<TJSONObject extends JSONObject>(\n  options: Options<TJSONObject> = {}\n): TJSONObject | void {\n  if (options.cantReadFileDefault === undefined) {\n    return options.default;\n  } else {\n    return options.cantReadFileDefault;\n  }\n}\n\nfunction _getOption<TJSONObject extends JSONObject, K extends keyof Options<TJSONObject>>(\n  options: Options<TJSONObject> | undefined,\n  field: K\n): Options<TJSONObject>[K] {\n  if (options) {\n    if (options[field] !== undefined) {\n      return options[field];\n    }\n  }\n  return DEFAULT_OPTIONS[field];\n}\n\nfunction locationFromSyntaxError(error: any, sourceString: string) {\n  // JSON5 SyntaxError has lineNumber and columnNumber.\n  if ('lineNumber' in error && 'columnNumber' in error) {\n    return { line: error.lineNumber, column: error.columnNumber };\n  }\n  // JSON SyntaxError only includes the index in the message.\n  const match = /at position (\\d+)/.exec(error.message);\n  if (match) {\n    const index = parseInt(match[1], 10);\n    const lines = sourceString.slice(0, index + 1).split('\\n');\n    return { line: lines.length, column: lines[lines.length - 1].length };\n  }\n\n  return null;\n}\n\nfunction assertEmptyJsonString(json?: string, file?: string) {\n  if (json?.trim() === '') {\n    throw new EmptyJsonFileError(file);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}