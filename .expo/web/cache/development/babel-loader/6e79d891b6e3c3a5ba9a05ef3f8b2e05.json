{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useOnGetState;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _isArrayEqual = _interopRequireDefault(require(\"./isArrayEqual\"));\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction useOnGetState(_ref) {\n  var getState = _ref.getState,\n    getStateListeners = _ref.getStateListeners;\n  var _React$useContext = React.useContext(_NavigationBuilderContext.default),\n    addKeyedListener = _React$useContext.addKeyedListener;\n  var route = React.useContext(_NavigationRouteContext.default);\n  var key = route ? route.key : 'root';\n  var getRehydratedState = React.useCallback(function () {\n    var state = getState();\n    var routes = state.routes.map(function (route) {\n      var _getStateListeners$ro;\n      var childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n      if (route.state === childState) {\n        return route;\n      }\n      return Object.assign({}, route, {\n        state: childState\n      });\n    });\n    if ((0, _isArrayEqual.default)(state.routes, routes)) {\n      return state;\n    }\n    return Object.assign({}, state, {\n      routes: routes\n    });\n  }, [getState, getStateListeners]);\n  React.useEffect(function () {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}","map":{"version":3,"mappings":";;;;;AACA;AAEA;AACA;AAGA;AAA6D;AAAA;AAO9C,SAASA,aAAa,OAGzB;EAAA,IAFVC,QAAQ,GAEAC,KAFRD,QAAQ;IACRE,oBACQD,KADRC;EAEA,wBAA6BC,KAAK,CAACC,UAAU,CAACC,iCAAwB,CAAC;IAA/DC;EACR,IAAMC,KAAK,GAAGJ,KAAK,CAACC,UAAU,CAACI,+BAAsB,CAAC;EACtD,IAAMC,GAAG,GAAGF,KAAK,GAAGA,KAAK,CAACE,GAAG,GAAG,MAAM;EAEtC,IAAMC,kBAAkB,GAAGP,KAAK,CAACQ,WAAW,CAAC,YAAM;IACjD,IAAMC,KAAK,GAAGZ,QAAQ,EAAE;IAGxB,IAAMa,MAAM,GAAGD,KAAK,CAACC,MAAM,CAACC,GAAG,CAAEP,eAAK,EAAK;MAAA;MACzC,IAAMQ,UAAU,4BAAGb,iBAAiB,CAACK,KAAK,CAACE,GAAG,CAAC,0DAA5BO,4CAAiB,CAAe;MAEnD,IAAIT,KAAK,CAACK,KAAK,KAAKG,UAAU,EAAE;QAC9B,OAAOR,KAAK;MACd;MAEA,yBAAYA,KAAK;QAAEK,KAAK,EAAEG;MAAAA;IAC5B,CAAC,CAAC;IAEF,IAAIE,yBAAY,EAACL,KAAK,CAACC,MAAM,EAAEA,MAAM,CAAC,EAAE;MACtC,OAAOD,KAAK;IACd;IAEA,yBAAYA,KAAK;MAAEC;IAAAA;EACrB,CAAC,EAAE,CAACb,QAAQ,EAAEE,iBAAiB,CAAC,CAAC;EAEjCC,KAAK,CAACe,SAAS,CAAC,YAAM;IACpB,OAAOZ,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAG,UAAU,EAAEG,GAAG,EAAEC,kBAAkB,CAAC;EAChE,CAAC,EAAE,CAACJ,gBAAgB,EAAEI,kBAAkB,EAAED,GAAG,CAAC,CAAC;AACjD","names":["useOnGetState","getState","_ref","getStateListeners","React","useContext","NavigationBuilderContext","addKeyedListener","route","NavigationRouteContext","key","getRehydratedState","useCallback","state","routes","map","childState","_getStateListeners$ro","isArrayEqual","useEffect"],"sourceRoot":"../../src","sources":["useOnGetState.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}