{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInfoPlistPathFromPbxproj = getInfoPlistPathFromPbxproj;\nfunction _Target() {\n  var data = require(\"../Target\");\n  _Target = function _Target() {\n    return data;\n  };\n  return data;\n}\nfunction _Xcodeproj() {\n  var data = require(\"./Xcodeproj\");\n  _Xcodeproj = function _Xcodeproj() {\n    return data;\n  };\n  return data;\n}\nfunction getInfoPlistPathFromPbxproj(projectRootOrProject) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    targetName = _ref.targetName,\n    _ref$buildConfigurati = _ref.buildConfiguration,\n    buildConfiguration = _ref$buildConfigurati === void 0 ? 'Release' : _ref$buildConfigurati;\n  var project = (0, _Xcodeproj().resolvePathOrProject)(projectRootOrProject);\n  if (!project) {\n    return null;\n  }\n  var xcBuildConfiguration = (0, _Target().getXCBuildConfigurationFromPbxproj)(project, {\n    targetName: targetName,\n    buildConfiguration: buildConfiguration\n  });\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n  return sanitizeInfoPlistBuildProperty(xcBuildConfiguration.buildSettings.INFOPLIST_FILE);\n}\nfunction sanitizeInfoPlistBuildProperty(infoPlist) {\n  var _infoPlist$replace$re;\n  return (_infoPlist$replace$re = infoPlist === null || infoPlist === void 0 ? void 0 : infoPlist.replace(/\"/g, '').replace('$(SRCROOT)', '')) !== null && _infoPlist$replace$re !== void 0 ? _infoPlist$replace$re : null;\n}","map":{"version":3,"sources":["../../../src/ios/utils/getInfoPlistPath.ts"],"names":["getInfoPlistPathFromPbxproj","projectRootOrProject","targetName","buildConfiguration","project","xcBuildConfiguration","sanitizeInfoPlistBuildProperty","buildSettings","INFOPLIST_FILE","infoPlist","replace"],"mappings":";;;;;;AAEA,SAAA,OAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,WAAA,CAAA;EAAA,OAAA,GAAA,mBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,UAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,aAAA,CAAA;EAAA,UAAA,GAAA,sBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AASO,SAASA,2BAAT,CACLC,oBADK,EAMU;EAAA,+EADiE,CAAA,CAL3E;IAGHC,UADF,QACEA,UADF;IAAA,6BAEEC,kBAAkB;IAAlBA,kBAAkB,sCAAG,SAAA;EAGvB,IAAMC,OAAO,GAAG,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA,oBAAA,EAAqBH,oBAArB,CAAhB;EACA,IAAI,CAACG,OAAL,EAAc;IACZ,OAAO,IAAP;EACD;EAED,IAAMC,oBAAoB,GAAG,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,kCAAA,EAAmCD,OAAnC,EAA4C;IACvEF,UADuE,EACvEA,UADuE;IAEvEC,kBAAAA,EAAAA;EAFuE,CAA5C,CAA7B;EAIA,IAAI,CAACE,oBAAL,EAA2B;IACzB,OAAO,IAAP;EAXa;EAcf,OAAOC,8BAA8B,CAACD,oBAAoB,CAACE,aAArBF,CAAmCG,cAApC,CAArC;AACD;AAED,SAASF,8BAAT,CAAwCG,SAAxC,EAA2E;EAAA,IAAA,qBAAA;EACzE,OAAA,CAAA,qBAAA,GAAOA,SAAP,KAAA,IAAA,IAAOA,SAAP,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,SAAS,CAAEC,OAAXD,CAAmB,IAAnBA,EAAyB,EAAzBA,CAAAA,CAA6BC,OAA7BD,CAAqC,YAArCA,EAAmD,EAAnDA,CAAP,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAiE,IAAjE;AACD","sourcesContent":["import { XcodeProject } from 'xcode';\n\nimport { getXCBuildConfigurationFromPbxproj } from '../Target';\nimport { resolvePathOrProject } from './Xcodeproj';\n\n/**\n * Find the Info.plist path linked to a specific build configuration.\n *\n * @param projectRoot\n * @param param1\n * @returns\n */\nexport function getInfoPlistPathFromPbxproj(\n  projectRootOrProject: string | XcodeProject,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string | 'Release' | 'Debug' } = {}\n): string | null {\n  const project = resolvePathOrProject(projectRootOrProject);\n  if (!project) {\n    return null;\n  }\n\n  const xcBuildConfiguration = getXCBuildConfigurationFromPbxproj(project, {\n    targetName,\n    buildConfiguration,\n  });\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n  // The `INFOPLIST_FILE` is relative to the project folder, ex: app/Info.plist.\n  return sanitizeInfoPlistBuildProperty(xcBuildConfiguration.buildSettings.INFOPLIST_FILE);\n}\n\nfunction sanitizeInfoPlistBuildProperty(infoPlist?: string): string | null {\n  return infoPlist?.replace(/\"/g, '').replace('$(SRCROOT)', '') ?? null;\n}\n"]},"metadata":{},"sourceType":"script"}