{"ast":null,"code":"\"use strict\";\n\nvar _toArray = require(\"@babel/runtime/helpers/toArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findSchemeNames = findSchemeNames;\nexports.findSchemePaths = findSchemePaths;\nexports.getAllEntitlementsPaths = getAllEntitlementsPaths;\nexports.getAllInfoPlistPaths = getAllInfoPlistPaths;\nexports.getAllPBXProjectPaths = getAllPBXProjectPaths;\nexports.getAllXcodeProjectPaths = getAllXcodeProjectPaths;\nexports.getAppDelegate = getAppDelegate;\nexports.getAppDelegateFilePath = getAppDelegateFilePath;\nexports.getAppDelegateHeaderFilePath = getAppDelegateHeaderFilePath;\nexports.getAppDelegateObjcHeaderFilePath = getAppDelegateObjcHeaderFilePath;\nexports.getEntitlementsPath = getEntitlementsPath;\nexports.getExpoPlistPath = getExpoPlistPath;\nexports.getFileInfo = getFileInfo;\nexports.getInfoPlistPath = getInfoPlistPath;\nexports.getPBXProjectPath = getPBXProjectPath;\nexports.getSourceRoot = getSourceRoot;\nexports.getSupportingPath = getSupportingPath;\nexports.getXcodeProjectPath = getXcodeProjectPath;\nfunction _fs() {\n  var data = require(\"fs\");\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _glob() {\n  var data = require(\"glob\");\n  _glob = function _glob() {\n    return data;\n  };\n  return data;\n}\nfunction path() {\n  var data = _interopRequireWildcard(require(\"path\"));\n  path = function path() {\n    return data;\n  };\n  return data;\n}\nfunction _errors() {\n  var data = require(\"../utils/errors\");\n  _errors = function _errors() {\n    return data;\n  };\n  return data;\n}\nfunction _warnings() {\n  var data = require(\"../utils/warnings\");\n  _warnings = function _warnings() {\n    return data;\n  };\n  return data;\n}\nfunction Entitlements() {\n  var data = _interopRequireWildcard(require(\"./Entitlements\"));\n  Entitlements = function Entitlements() {\n    return data;\n  };\n  return data;\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar ignoredPaths = ['**/@(Carthage|Pods|vendor|node_modules)/**'];\nfunction getAppDelegateHeaderFilePath(projectRoot) {\n  var _ref = (0, _glob().sync)('ios/*/AppDelegate.h', {\n      absolute: true,\n      cwd: projectRoot,\n      ignore: ignoredPaths\n    }),\n    _ref2 = _toArray(_ref),\n    using = _ref2[0],\n    extra = _ref2.slice(1);\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate header at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-header',\n      fileName: 'AppDelegate',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n  return using;\n}\nfunction getAppDelegateFilePath(projectRoot) {\n  var _ref3 = (0, _glob().sync)('ios/*/AppDelegate.@(m|mm|swift)', {\n      absolute: true,\n      cwd: projectRoot,\n      ignore: ignoredPaths\n    }),\n    _ref4 = _toArray(_ref3),\n    using = _ref4[0],\n    extra = _ref4.slice(1);\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n  return using;\n}\nfunction getAppDelegateObjcHeaderFilePath(projectRoot) {\n  var _ref5 = (0, _glob().sync)('ios/*/AppDelegate.h', {\n      absolute: true,\n      cwd: projectRoot,\n      ignore: ignoredPaths\n    }),\n    _ref6 = _toArray(_ref5),\n    using = _ref6[0],\n    extra = _ref6.slice(1);\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate.h at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-objc-header',\n      fileName: 'AppDelegate.h',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n  return using;\n}\nfunction getLanguage(filePath) {\n  var extension = path().extname(filePath);\n  switch (extension) {\n    case '.mm':\n      return 'objcpp';\n    case '.m':\n    case '.h':\n      return 'objc';\n    case '.swift':\n      return 'swift';\n    default:\n      throw new (_errors().UnexpectedError)(\"Unexpected iOS file extension: \" + extension);\n  }\n}\nfunction getFileInfo(filePath) {\n  return {\n    path: path().normalize(filePath),\n    contents: (0, _fs().readFileSync)(filePath, 'utf8'),\n    language: getLanguage(filePath)\n  };\n}\nfunction getAppDelegate(projectRoot) {\n  var filePath = getAppDelegateFilePath(projectRoot);\n  return getFileInfo(filePath);\n}\nfunction getSourceRoot(projectRoot) {\n  var appDelegate = getAppDelegate(projectRoot);\n  return path().dirname(appDelegate.path);\n}\nfunction findSchemePaths(projectRoot) {\n  return (0, _glob().sync)('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  });\n}\nfunction findSchemeNames(projectRoot) {\n  var schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map(function (schemePath) {\n    return path().parse(schemePath).name;\n  });\n}\nfunction getAllXcodeProjectPaths(projectRoot) {\n  var iosFolder = 'ios';\n  var pbxprojPaths = (0, _glob().sync)('ios/**/*.xcodeproj', {\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }).filter(function (project) {\n    return !/test|example|sample/i.test(project) || path().dirname(project) === iosFolder;\n  }).sort().sort(function (a, b) {\n    var isAInIos = path().dirname(a) === iosFolder;\n    var isBInIos = path().dirname(b) === iosFolder;\n    if (isAInIos && isBInIos || !isAInIos && !isBInIos) {\n      return 0;\n    }\n    return isAInIos ? -1 : 1;\n  });\n  if (!pbxprojPaths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate the ios/*.xcodeproj files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n  return pbxprojPaths.map(function (value) {\n    return path().join(projectRoot, value);\n  });\n}\nfunction getXcodeProjectPath(projectRoot) {\n  var _getAllXcodeProjectPa = getAllXcodeProjectPaths(projectRoot),\n    _getAllXcodeProjectPa2 = _toArray(_getAllXcodeProjectPa),\n    using = _getAllXcodeProjectPa2[0],\n    extra = _getAllXcodeProjectPa2.slice(1);\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n  return using;\n}\nfunction getAllPBXProjectPaths(projectRoot) {\n  var projectPaths = getAllXcodeProjectPaths(projectRoot);\n  var paths = projectPaths.map(function (value) {\n    return path().join(value, 'project.pbxproj');\n  }).filter(function (value) {\n    return (0, _fs().existsSync)(value);\n  });\n  if (!paths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n  return paths;\n}\nfunction getPBXProjectPath(projectRoot) {\n  var _getAllPBXProjectPath = getAllPBXProjectPaths(projectRoot),\n    _getAllPBXProjectPath2 = _toArray(_getAllPBXProjectPath),\n    using = _getAllPBXProjectPath2[0],\n    extra = _getAllPBXProjectPath2.slice(1);\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n  return using;\n}\nfunction getAllInfoPlistPaths(projectRoot) {\n  var paths = (0, _glob().sync)('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }).sort(function (a, b) {\n    return a.length - b.length;\n  });\n  if (!paths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate Info.plist files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n  return paths;\n}\nfunction getInfoPlistPath(projectRoot) {\n  var _getAllInfoPlistPaths = getAllInfoPlistPaths(projectRoot),\n    _getAllInfoPlistPaths2 = _toArray(_getAllInfoPlistPaths),\n    using = _getAllInfoPlistPaths2[0],\n    extra = _getAllInfoPlistPaths2.slice(1);\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n  return using;\n}\nfunction getAllEntitlementsPaths(projectRoot) {\n  var paths = (0, _glob().sync)('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  });\n  return paths;\n}\nfunction getEntitlementsPath(projectRoot) {\n  return Entitlements().getEntitlementsPath(projectRoot);\n}\nfunction getSupportingPath(projectRoot) {\n  return path().resolve(projectRoot, 'ios', path().basename(getSourceRoot(projectRoot)), 'Supporting');\n}\nfunction getExpoPlistPath(projectRoot) {\n  var supportingPath = getSupportingPath(projectRoot);\n  return path().join(supportingPath, 'Expo.plist');\n}\nfunction warnMultipleFiles(_ref7) {\n  var tag = _ref7.tag,\n    fileName = _ref7.fileName,\n    projectRoot = _ref7.projectRoot,\n    using = _ref7.using,\n    extra = _ref7.extra;\n  var usingPath = projectRoot ? path().relative(projectRoot, using) : using;\n  var extraPaths = projectRoot ? extra.map(function (v) {\n    return path().relative(projectRoot, v);\n  }) : extra;\n  (0, _warnings().addWarningIOS)(\"paths-\" + tag, \"Found multiple \" + fileName + \" file paths, using \\\"\" + usingPath + \"\\\". Ignored paths: \" + JSON.stringify(extraPaths));\n}","map":{"version":3,"sources":["../../src/ios/Paths.ts"],"names":["ignoredPaths","getAppDelegateHeaderFilePath","projectRoot","using","extra","absolute","cwd","ignore","UnexpectedError","length","warnMultipleFiles","tag","fileName","getAppDelegateFilePath","getAppDelegateObjcHeaderFilePath","getLanguage","filePath","extension","path","extname","getFileInfo","normalize","contents","language","getAppDelegate","getSourceRoot","appDelegate","dirname","findSchemePaths","findSchemeNames","schemePaths","map","schemePath","parse","name","getAllXcodeProjectPaths","iosFolder","pbxprojPaths","filter","project","test","sort","a","b","isAInIos","isBInIos","value","join","getXcodeProjectPath","getAllPBXProjectPaths","projectPaths","paths","getPBXProjectPath","getAllInfoPlistPaths","getInfoPlistPath","getAllEntitlementsPaths","getEntitlementsPath","Entitlements","getSupportingPath","resolve","basename","getExpoPlistPath","supportingPath","usingPath","relative","extraPaths","v","JSON","stringify"],"mappings":"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","sourcesContent":["import { existsSync, readFileSync } from 'fs';\nimport { sync as globSync } from 'glob';\nimport * as path from 'path';\n\nimport { UnexpectedError } from '../utils/errors';\nimport { addWarningIOS } from '../utils/warnings';\nimport * as Entitlements from './Entitlements';\n\nconst ignoredPaths = ['**/@(Carthage|Pods|vendor|node_modules)/**'];\n\ninterface ProjectFile<L extends string = string> {\n  path: string;\n  language: L;\n  contents: string;\n}\n\ntype AppleLanguage = 'objc' | 'objcpp' | 'swift';\n\nexport type AppDelegateProjectFile = ProjectFile<AppleLanguage>;\n\nexport function getAppDelegateHeaderFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(\n      `Could not locate a valid AppDelegate header at root: \"${projectRoot}\"`\n    );\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-header',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAppDelegateFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.@(m|mm|swift)', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAppDelegateObjcHeaderFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate.h at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-objc-header',\n      fileName: 'AppDelegate.h',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nfunction getLanguage(filePath: string): AppleLanguage {\n  const extension = path.extname(filePath);\n  switch (extension) {\n    case '.mm':\n      return 'objcpp';\n    case '.m':\n    case '.h':\n      return 'objc';\n    case '.swift':\n      return 'swift';\n    default:\n      throw new UnexpectedError(`Unexpected iOS file extension: ${extension}`);\n  }\n}\n\nexport function getFileInfo(filePath: string) {\n  return {\n    path: path.normalize(filePath),\n    contents: readFileSync(filePath, 'utf8'),\n    language: getLanguage(filePath),\n  };\n}\n\nexport function getAppDelegate(projectRoot: string): AppDelegateProjectFile {\n  const filePath = getAppDelegateFilePath(projectRoot);\n  return getFileInfo(filePath);\n}\n\nexport function getSourceRoot(projectRoot: string): string {\n  const appDelegate = getAppDelegate(projectRoot);\n  return path.dirname(appDelegate.path);\n}\n\nexport function findSchemePaths(projectRoot: string): string[] {\n  return globSync('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n}\n\nexport function findSchemeNames(projectRoot: string): string[] {\n  const schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map((schemePath) => path.parse(schemePath).name);\n}\n\nexport function getAllXcodeProjectPaths(projectRoot: string): string[] {\n  const iosFolder = 'ios';\n  const pbxprojPaths = globSync('ios/**/*.xcodeproj', { cwd: projectRoot, ignore: ignoredPaths })\n    .filter(\n      (project) => !/test|example|sample/i.test(project) || path.dirname(project) === iosFolder\n    )\n    // sort alphabetically to ensure this works the same across different devices (Fail in CI (linux) without this)\n    .sort()\n    .sort((a, b) => {\n      const isAInIos = path.dirname(a) === iosFolder;\n      const isBInIos = path.dirname(b) === iosFolder;\n      // preserve previous sort order\n      if ((isAInIos && isBInIos) || (!isAInIos && !isBInIos)) {\n        return 0;\n      }\n      return isAInIos ? -1 : 1;\n    });\n\n  if (!pbxprojPaths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return pbxprojPaths.map((value) => path.join(projectRoot, value));\n}\n\n/**\n * Get the pbxproj for the given path\n */\nexport function getXcodeProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllXcodeProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllPBXProjectPaths(projectRoot: string): string[] {\n  const projectPaths = getAllXcodeProjectPaths(projectRoot);\n  const paths = projectPaths\n    .map((value) => path.join(value, 'project.pbxproj'))\n    .filter((value) => existsSync(value));\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getPBXProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllPBXProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllInfoPlistPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  }).sort(\n    // longer name means more suffixes, we want the shortest possible one to be first.\n    (a, b) => a.length - b.length\n  );\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate Info.plist files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getInfoPlistPath(projectRoot: string): string {\n  const [using, ...extra] = getAllInfoPlistPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllEntitlementsPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n  return paths;\n}\n\n/**\n * @deprecated: use Entitlements.getEntitlementsPath instead\n */\nexport function getEntitlementsPath(projectRoot: string): string | null {\n  return Entitlements.getEntitlementsPath(projectRoot);\n}\n\nexport function getSupportingPath(projectRoot: string): string {\n  return path.resolve(projectRoot, 'ios', path.basename(getSourceRoot(projectRoot)), 'Supporting');\n}\n\nexport function getExpoPlistPath(projectRoot: string): string {\n  const supportingPath = getSupportingPath(projectRoot);\n  return path.join(supportingPath, 'Expo.plist');\n}\n\nfunction warnMultipleFiles({\n  tag,\n  fileName,\n  projectRoot,\n  using,\n  extra,\n}: {\n  tag: string;\n  fileName: string;\n  projectRoot?: string;\n  using: string;\n  extra: string[];\n}) {\n  const usingPath = projectRoot ? path.relative(projectRoot, using) : using;\n  const extraPaths = projectRoot ? extra.map((v) => path.relative(projectRoot, v)) : extra;\n  addWarningIOS(\n    `paths-${tag}`,\n    `Found multiple ${fileName} file paths, using \"${usingPath}\". Ignored paths: ${JSON.stringify(\n      extraPaths\n    )}`\n  );\n}\n"]},"metadata":{},"sourceType":"script"}