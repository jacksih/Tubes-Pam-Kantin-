{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignStylesValue = assignStylesValue;\nexports.getAppThemeLightNoActionBarGroup = getAppThemeLightNoActionBarGroup;\nexports.getProjectStylesXMLPathAsync = getProjectStylesXMLPathAsync;\nexports.getStyleParent = getStyleParent;\nexports.getStylesGroupAsObject = getStylesGroupAsObject;\nexports.getStylesItem = getStylesItem;\nexports.readStylesXMLAsync = readStylesXMLAsync;\nexports.removeStylesItem = removeStylesItem;\nexports.setStylesItem = setStylesItem;\nfunction _Paths() {\n  var data = require(\"./Paths\");\n  _Paths = function _Paths() {\n    return data;\n  };\n  return data;\n}\nfunction _Resources() {\n  var data = require(\"./Resources\");\n  _Resources = function _Resources() {\n    return data;\n  };\n  return data;\n}\nvar fallbackResourceString = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><resources xmlns:tools=\\\"http://schemas.android.com/tools\\\"></resources>\";\nfunction readStylesXMLAsync(_x) {\n  return _readStylesXMLAsync.apply(this, arguments);\n}\nfunction _readStylesXMLAsync() {\n  _readStylesXMLAsync = _asyncToGenerator(function* (_ref) {\n    var path = _ref.path,\n      _ref$fallback = _ref.fallback,\n      fallback = _ref$fallback === void 0 ? fallbackResourceString : _ref$fallback;\n    return (0, _Resources().readResourcesXMLAsync)({\n      path: path,\n      fallback: fallback\n    });\n  });\n  return _readStylesXMLAsync.apply(this, arguments);\n}\nfunction getProjectStylesXMLPathAsync(_x2) {\n  return _getProjectStylesXMLPathAsync.apply(this, arguments);\n}\nfunction _getProjectStylesXMLPathAsync() {\n  _getProjectStylesXMLPathAsync = _asyncToGenerator(function* (projectRoot) {\n    var _ref9 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      kind = _ref9.kind;\n    return (0, _Paths().getResourceXMLPathAsync)(projectRoot, {\n      kind: kind,\n      name: 'styles'\n    });\n  });\n  return _getProjectStylesXMLPathAsync.apply(this, arguments);\n}\nfunction ensureDefaultStyleResourceXML(xml) {\n  var _xml, _xml$resources;\n  xml = (0, _Resources().ensureDefaultResourceXML)(xml);\n  if (!Array.isArray((_xml = xml) === null || _xml === void 0 ? void 0 : (_xml$resources = _xml.resources) === null || _xml$resources === void 0 ? void 0 : _xml$resources.style)) {\n    xml.resources.style = [];\n  }\n  return xml;\n}\nfunction getStyleParent(xml, group) {\n  return (0, _Resources().findResourceGroup)(xml.resources.style, group);\n}\nfunction getStylesItem(_ref2) {\n  var name = _ref2.name,\n    xml = _ref2.xml,\n    parent = _ref2.parent;\n  xml = ensureDefaultStyleResourceXML(xml);\n  var appTheme = getStyleParent(xml, parent);\n  if (!appTheme) {\n    return null;\n  }\n  if (appTheme.item) {\n    var existingItem = appTheme.item.filter(function (_ref3) {\n      var head = _ref3.$;\n      return head.name === name;\n    })[0];\n    if (existingItem) {\n      return existingItem;\n    }\n  }\n  return null;\n}\nfunction setStylesItem(_ref4) {\n  var item = _ref4.item,\n    xml = _ref4.xml,\n    parent = _ref4.parent;\n  xml = ensureDefaultStyleResourceXML(xml);\n  var appTheme = getStyleParent(xml, parent);\n  if (!appTheme) {\n    appTheme = (0, _Resources().buildResourceGroup)(parent);\n    xml.resources.style.push(appTheme);\n  }\n  if (appTheme.item) {\n    var existingItem = appTheme.item.filter(function (_ref5) {\n      var head = _ref5.$;\n      return head.name === item.$.name;\n    })[0];\n    if (existingItem) {\n      existingItem._ = item._;\n      existingItem.$ = item.$;\n    } else {\n      appTheme.item.push(item);\n    }\n  } else {\n    appTheme.item = [item];\n  }\n  return xml;\n}\nfunction removeStylesItem(_ref6) {\n  var name = _ref6.name,\n    xml = _ref6.xml,\n    parent = _ref6.parent;\n  xml = ensureDefaultStyleResourceXML(xml);\n  var appTheme = getStyleParent(xml, parent);\n  if (appTheme !== null && appTheme !== void 0 && appTheme.item) {\n    var index = appTheme.item.findIndex(function (_ref7) {\n      var head = _ref7.$;\n      return head.name === name;\n    });\n    if (index > -1) {\n      appTheme.item.splice(index, 1);\n    }\n  }\n  return xml;\n}\nfunction getAppThemeLightNoActionBarGroup() {\n  return {\n    name: 'AppTheme',\n    parent: 'Theme.AppCompat.Light.NoActionBar'\n  };\n}\nfunction assignStylesValue(xml, _ref8) {\n  var add = _ref8.add,\n    value = _ref8.value,\n    targetApi = _ref8.targetApi,\n    name = _ref8.name,\n    parent = _ref8.parent;\n  if (add) {\n    return setStylesItem({\n      xml: xml,\n      parent: parent,\n      item: (0, _Resources().buildResourceItem)({\n        name: name,\n        targetApi: targetApi,\n        value: value\n      })\n    });\n  }\n  return removeStylesItem({\n    xml: xml,\n    parent: parent,\n    name: name\n  });\n}\nfunction getStylesGroupAsObject(xml, group) {\n  var xmlGroup = getStyleParent(xml, group);\n  return xmlGroup !== null && xmlGroup !== void 0 && xmlGroup.item ? (0, _Resources().getResourceItemsAsObject)(xmlGroup.item) : null;\n}","map":{"version":3,"sources":["../../src/android/Styles.ts"],"names":["fallbackResourceString","readStylesXMLAsync","path","fallback","getProjectStylesXMLPathAsync","projectRoot","kind","name","ensureDefaultStyleResourceXML","xml","Array","isArray","resources","style","getStyleParent","group","getStylesItem","parent","appTheme","item","existingItem","filter","$","head","setStylesItem","push","_","removeStylesItem","index","findIndex","splice","getAppThemeLightNoActionBarGroup","assignStylesValue","add","value","targetApi","getStylesGroupAsObject","xmlGroup"],"mappings":"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","sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport {\n  buildResourceGroup,\n  buildResourceItem,\n  ensureDefaultResourceXML,\n  findResourceGroup,\n  getResourceItemsAsObject,\n  readResourcesXMLAsync,\n  ResourceGroupXML,\n  ResourceItemXML,\n  ResourceKind,\n  ResourceXML,\n} from './Resources';\n\n// Adds support for `tools:x`\nconst fallbackResourceString = `<?xml version=\"1.0\" encoding=\"utf-8\"?><resources xmlns:tools=\"http://schemas.android.com/tools\"></resources>`;\n\nexport async function readStylesXMLAsync({\n  path,\n  fallback = fallbackResourceString,\n}: {\n  path: string;\n  fallback?: string | null;\n}): Promise<ResourceXML> {\n  return readResourcesXMLAsync({ path, fallback });\n}\n\nexport async function getProjectStylesXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n): Promise<string> {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'styles' });\n}\n\nfunction ensureDefaultStyleResourceXML(xml: ResourceXML): ResourceXML {\n  xml = ensureDefaultResourceXML(xml);\n  if (!Array.isArray(xml?.resources?.style)) {\n    xml.resources.style = [];\n  }\n  return xml;\n}\n\nexport function getStyleParent(\n  xml: ResourceXML,\n  group: { name: string; parent?: string }\n): ResourceGroupXML | null {\n  return findResourceGroup(xml.resources.style, group);\n}\n\nexport function getStylesItem({\n  name,\n  xml,\n  parent,\n}: {\n  name: string;\n  xml: ResourceXML;\n  parent: { name: string; parent?: string };\n}): ResourceItemXML | null {\n  xml = ensureDefaultStyleResourceXML(xml);\n\n  const appTheme = getStyleParent(xml, parent);\n\n  if (!appTheme) {\n    return null;\n  }\n\n  if (appTheme.item) {\n    const existingItem = appTheme.item.filter(({ $: head }) => head.name === name)[0];\n\n    // Don't want to 2 of the same item, so if one exists, we overwrite it\n    if (existingItem) {\n      return existingItem;\n    }\n  }\n  return null;\n}\n\nexport function setStylesItem({\n  item,\n  xml,\n  parent,\n}: {\n  item: ResourceItemXML;\n  xml: ResourceXML;\n  parent: { name: string; parent: string };\n}): ResourceXML {\n  xml = ensureDefaultStyleResourceXML(xml);\n\n  let appTheme = getStyleParent(xml, parent);\n\n  if (!appTheme) {\n    appTheme = buildResourceGroup(parent);\n    xml.resources!.style!.push(appTheme);\n  }\n\n  if (appTheme.item) {\n    const existingItem = appTheme.item.filter(({ $: head }) => head.name === item.$.name)[0];\n\n    // Don't want to 2 of the same item, so if one exists, we overwrite it\n    if (existingItem) {\n      existingItem._ = item._;\n      existingItem.$ = item.$;\n    } else {\n      appTheme.item.push(item);\n    }\n  } else {\n    appTheme.item = [item];\n  }\n  return xml;\n}\n\nexport function removeStylesItem({\n  name,\n  xml,\n  parent,\n}: {\n  name: string;\n  xml: ResourceXML;\n  parent: { name: string; parent: string };\n}): ResourceXML {\n  xml = ensureDefaultStyleResourceXML(xml);\n  const appTheme = getStyleParent(xml, parent);\n  if (appTheme?.item) {\n    const index = appTheme.item.findIndex(({ $: head }: ResourceItemXML) => head.name === name);\n    if (index > -1) {\n      appTheme.item.splice(index, 1);\n    }\n  }\n  return xml;\n}\n\n// This is a very common theme so make it reusable.\nexport function getAppThemeLightNoActionBarGroup() {\n  return { name: 'AppTheme', parent: 'Theme.AppCompat.Light.NoActionBar' };\n}\n\nexport function assignStylesValue(\n  xml: ResourceXML,\n  {\n    add,\n    value,\n    targetApi,\n    name,\n    parent,\n  }: {\n    add: boolean;\n    value: string;\n    targetApi?: string;\n    name: string;\n    parent: { name: string; parent: string };\n  }\n): ResourceXML {\n  if (add) {\n    return setStylesItem({\n      xml,\n      parent,\n      item: buildResourceItem({\n        name,\n        targetApi,\n        value,\n      }),\n    });\n  }\n  return removeStylesItem({\n    xml,\n    parent,\n    name,\n  });\n}\n\n/**\n * Helper to convert a styles.xml parent's children into a simple k/v pair.\n * Added for testing purposes.\n *\n * @param xml\n * @returns\n */\nexport function getStylesGroupAsObject(\n  xml: ResourceXML,\n  group: { name: string; parent?: string }\n): Record<string, string> | null {\n  const xmlGroup = getStyleParent(xml, group);\n  return xmlGroup?.item ? getResourceItemsAsObject(xmlGroup.item) : null;\n}\n"]},"metadata":{},"sourceType":"script"}