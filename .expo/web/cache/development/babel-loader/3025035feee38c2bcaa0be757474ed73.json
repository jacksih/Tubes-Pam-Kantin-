{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SCREEN_ORIENTATION_ATTRIBUTE = void 0;\nexports.getOrientation = getOrientation;\nexports.setAndroidOrientation = setAndroidOrientation;\nexports.withOrientation = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n  _Manifest = function _Manifest() {\n    return data;\n  };\n  return data;\n}\nvar SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\nexports.SCREEN_ORIENTATION_ATTRIBUTE = SCREEN_ORIENTATION_ATTRIBUTE;\nvar withOrientation = (0, _androidPlugins().createAndroidManifestPlugin)(setAndroidOrientation, 'withOrientation');\nexports.withOrientation = withOrientation;\nfunction getOrientation(config) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\nfunction setAndroidOrientation(config, androidManifest) {\n  var orientation = getOrientation(config);\n  if (!orientation) {\n    return androidManifest;\n  }\n  var mainActivity = (0, _Manifest().getMainActivityOrThrow)(androidManifest);\n  mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE] = orientation !== 'default' ? orientation : 'unspecified';\n  return androidManifest;\n}","map":{"version":3,"sources":["../../src/android/Orientation.ts"],"names":["SCREEN_ORIENTATION_ATTRIBUTE","withOrientation","setAndroidOrientation","getOrientation","config","orientation","androidManifest","mainActivity","$"],"mappings":";;;;;;;;;AAEA,SAAA,eAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;EAAA,eAAA,GAAA,2BAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,YAAA,CAAA;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AAEO,IAAMA,4BAA4B,GAAG,2BAArC;;AAEA,IAAMC,eAAe,GAAG,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,2BAAA,EAC7BC,qBAD6B,EAE7B,iBAF6B,CAAxB;;AAKA,SAASC,cAAT,CAAwBC,MAAxB,EAAiE;EACtE,OAAO,OAAOA,MAAM,CAACC,WAAd,KAA8B,QAA9B,GAAyCD,MAAM,CAACC,WAAhD,GAA8D,IAArE;AACD;AAEM,SAASH,qBAAT,CACLE,MADK,EAELE,eAFK,EAGL;EACA,IAAMD,WAAW,GAAGF,cAAc,CAACC,MAAD,CADlC;EAGA,IAAI,CAACC,WAAL,EAAkB;IAChB,OAAOC,eAAP;EACD;EAED,IAAMC,YAAY,GAAG,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,sBAAA,EAAuBD,eAAvB,CAArB;EAEAC,YAAY,CAACC,CAAbD,CAAeP,4BAAfO,CAAAA,GACEF,WAAW,KAAK,SAAhBA,GAA4BA,WAA5BA,GAA0C,aAD5CE;EAGA,OAAOD,eAAP;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow } from './Manifest';\n\nexport const SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\n\nexport const withOrientation = createAndroidManifestPlugin(\n  setAndroidOrientation,\n  'withOrientation'\n);\n\nexport function getOrientation(config: Pick<ExpoConfig, 'orientation'>) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\n\nexport function setAndroidOrientation(\n  config: Pick<ExpoConfig, 'orientation'>,\n  androidManifest: AndroidManifest\n) {\n  const orientation = getOrientation(config);\n  // TODO: Remove this if we decide to remove any orientation configuration when not specified\n  if (!orientation) {\n    return androidManifest;\n  }\n\n  const mainActivity = getMainActivityOrThrow(androidManifest);\n\n  mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE] =\n    orientation !== 'default' ? orientation : 'unspecified';\n\n  return androidManifest;\n}\n"]},"metadata":{},"sourceType":"script"}