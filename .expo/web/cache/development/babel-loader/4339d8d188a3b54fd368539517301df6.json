{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProjectStringsXMLPathAsync = getProjectStringsXMLPathAsync;\nexports.removeStringItem = removeStringItem;\nexports.setStringItem = setStringItem;\nfunction _Paths() {\n  var data = require(\"./Paths\");\n  _Paths = function _Paths() {\n    return data;\n  };\n  return data;\n}\nfunction getProjectStringsXMLPathAsync(_x) {\n  return _getProjectStringsXMLPathAsync.apply(this, arguments);\n}\nfunction _getProjectStringsXMLPathAsync() {\n  _getProjectStringsXMLPathAsync = _asyncToGenerator(function* (projectRoot) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      kind = _ref.kind;\n    return (0, _Paths().getResourceXMLPathAsync)(projectRoot, {\n      kind: kind,\n      name: 'strings'\n    });\n  });\n  return _getProjectStringsXMLPathAsync.apply(this, arguments);\n}\nfunction setStringItem(itemToAdd, stringFileContentsJSON) {\n  var _stringFileContentsJS;\n  if (!(stringFileContentsJSON !== null && stringFileContentsJSON !== void 0 && (_stringFileContentsJS = stringFileContentsJSON.resources) !== null && _stringFileContentsJS !== void 0 && _stringFileContentsJS.string)) {\n    if (!stringFileContentsJSON.resources || typeof stringFileContentsJSON.resources === 'string') {\n      stringFileContentsJSON.resources = {};\n    }\n    stringFileContentsJSON.resources.string = itemToAdd;\n    return stringFileContentsJSON;\n  }\n  var _loop = function _loop(newItem) {\n    var stringNameExists = stringFileContentsJSON.resources.string.findIndex(function (e) {\n      return e.$.name === newItem.$.name;\n    });\n    if (stringNameExists > -1) {\n      stringFileContentsJSON.resources.string[stringNameExists] = newItem;\n    } else {\n      stringFileContentsJSON.resources.string = stringFileContentsJSON.resources.string.concat(newItem);\n    }\n  };\n  for (var newItem of itemToAdd) {\n    _loop(newItem);\n  }\n  return stringFileContentsJSON;\n}\nfunction removeStringItem(named, stringFileContentsJSON) {\n  var _stringFileContentsJS2;\n  if (stringFileContentsJSON !== null && stringFileContentsJSON !== void 0 && (_stringFileContentsJS2 = stringFileContentsJSON.resources) !== null && _stringFileContentsJS2 !== void 0 && _stringFileContentsJS2.string) {\n    var stringNameExists = stringFileContentsJSON.resources.string.findIndex(function (e) {\n      return e.$.name === named;\n    });\n    if (stringNameExists > -1) {\n      stringFileContentsJSON.resources.string.splice(stringNameExists, 1);\n    }\n  }\n  return stringFileContentsJSON;\n}","map":{"version":3,"sources":["../../src/android/Strings.ts"],"names":["getProjectStringsXMLPathAsync","projectRoot","kind","name","setStringItem","itemToAdd","stringFileContentsJSON","resources","string","newItem","stringNameExists","findIndex","e","$","concat","removeStringItem","named","splice"],"mappings":";;;;;;;;;AAAA,SAAA,MAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,SAAA,CAAA;EAAA,MAAA,GAAA,kBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AAAA,SAGsBA,6BAAf;EAAA;AAAA;AAAA;EAAA,mDAAA,WACLC,WADK,EAGY;IAAA,+EADmB,CAAA,CAF/B;MAEHC,IAAAA,QAAAA,IAAAA;IAEF,OAAO,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,uBAAA,EAAwBD,WAAxB,EAAqC;MAAEC,IAAF,EAAEA,IAAF;MAAQC,IAAI,EAAE;IAAd,CAArC,CAAP;EACD,CAAA;EAAA;AAAA;AAEM,SAASC,aAAT,CACLC,SADK,EAELC,sBAFK,EAGQ;EAAA,IAAA,qBAAA;EACb,IAAI,EAACA,sBAAD,KAAA,IAAA,IAACA,sBAAD,KAAA,KAAA,CAAA,IAAA,CAAA,qBAAA,GAACA,sBAAsB,CAAEC,SAAzB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,IAACD,qBAAAA,CAAmCE,MAApC,CAAJ,EAAgD;IAC9C,IAAI,CAACF,sBAAsB,CAACC,SAAxB,IAAqC,OAAOD,sBAAsB,CAACC,SAA9B,KAA4C,QAArF,EAA+F;MAE7FD,sBAAsB,CAACC,SAAvBD,GAAmC,CAAA,CAAnCA;IACD;IACDA,sBAAsB,CAACC,SAAvBD,CAAiCE,MAAjCF,GAA0CD,SAA1CC;IACA,OAAOA,sBAAP;EACD;EAAA,2BAEUG,OAAX;IACE,IAAMC,gBAAgB,GAAGJ,sBAAsB,CAACC,SAAvBD,CAAiCE,MAAjCF,CAAwCK,SAAxCL,CACtBM,UAAAA,CAAD;MAAA,OAAwBA,CAAC,CAACC,CAAFD,CAAIT,IAAJS,KAAaH,OAAO,CAACI,CAARJ,CAAUN,IADxBG;IAAAA,EAAzB;IAGA,IAAII,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;MAEzBJ,sBAAsB,CAACC,SAAvBD,CAAiCE,MAAjCF,CAAwCI,gBAAxCJ,CAAAA,GAA4DG,OAA5DH;IACD,CAHD,MAGO;MACLA,sBAAsB,CAACC,SAAvBD,CAAiCE,MAAjCF,GACEA,sBAAsB,CAACC,SAAvBD,CAAiCE,MAAjCF,CAAwCQ,MAAxCR,CAA+CG,OAA/CH,CADFA;IAED;EAAA;EAVH,KAAK,IAAMG,OAAX,IAAsBJ,SAAtB,EAAiC;IAAA,MAAtBI,OAAX;EAWC;EACD,OAAOH,sBAAP;AACD;AAEM,SAASS,gBAAT,CAA0BC,KAA1B,EAAyCV,sBAAzC,EAA2F;EAAA,IAAA,sBAAA;EAChG,IAAIA,sBAAJ,KAAA,IAAA,IAAIA,sBAAJ,KAAA,KAAA,CAAA,IAAA,CAAA,sBAAA,GAAIA,sBAAsB,CAAEC,SAA5B,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,IAAID,sBAAAA,CAAmCE,MAAvC,EAA+C;IAC7C,IAAME,gBAAgB,GAAGJ,sBAAsB,CAACC,SAAvBD,CAAiCE,MAAjCF,CAAwCK,SAAxCL,CACtBM,UAAAA,CAAD;MAAA,OAAwBA,CAAC,CAACC,CAAFD,CAAIT,IAAJS,KAAaI,KADdV;IAAAA,EAAzB;IAGA,IAAII,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;MAEzBJ,sBAAsB,CAACC,SAAvBD,CAAiCE,MAAjCF,CAAwCW,MAAxCX,CAA+CI,gBAA/CJ,EAAiE,CAAjEA,CAAAA;IACD;EACF;EACD,OAAOA,sBAAP;AACD","sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport { ResourceItemXML, ResourceKind, ResourceXML } from './Resources';\n\nexport async function getProjectStringsXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n): Promise<string> {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'strings' });\n}\n\nexport function setStringItem(\n  itemToAdd: ResourceItemXML[],\n  stringFileContentsJSON: ResourceXML\n): ResourceXML {\n  if (!stringFileContentsJSON?.resources?.string) {\n    if (!stringFileContentsJSON.resources || typeof stringFileContentsJSON.resources === 'string') {\n      // file was empty and JSON is `{resources : ''}`\n      stringFileContentsJSON.resources = {};\n    }\n    stringFileContentsJSON.resources.string = itemToAdd;\n    return stringFileContentsJSON;\n  }\n\n  for (const newItem of itemToAdd) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: ResourceItemXML) => e.$.name === newItem.$.name\n    );\n    if (stringNameExists > -1) {\n      // replace the previous item\n      stringFileContentsJSON.resources.string[stringNameExists] = newItem;\n    } else {\n      stringFileContentsJSON.resources.string =\n        stringFileContentsJSON.resources.string.concat(newItem);\n    }\n  }\n  return stringFileContentsJSON;\n}\n\nexport function removeStringItem(named: string, stringFileContentsJSON: ResourceXML): ResourceXML {\n  if (stringFileContentsJSON?.resources?.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: ResourceItemXML) => e.$.name === named\n    );\n    if (stringNameExists > -1) {\n      // replace the previous value\n      stringFileContentsJSON.resources.string.splice(stringNameExists, 1);\n    }\n  }\n  return stringFileContentsJSON;\n}\n"]},"metadata":{},"sourceType":"script"}