{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _EventEmitter = require(\"../EventEmitter\");\nvar _Platform = _interopRequireDefault(require(\"../Platform\"));\nvar _CodedError = require(\"../errors/CodedError\");\nvar _NativeErrorManager = _interopRequireDefault(require(\"./NativeErrorManager\"));\nif (__DEV__ && _Platform.default.OS === 'android' && _NativeErrorManager.default) {\n  var onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  var eventEmitter = new _EventEmitter.EventEmitter(_NativeErrorManager.default);\n  eventEmitter.addListener(onNewException, function (_ref) {\n    var message = _ref.message;\n    console.error(message);\n  });\n}\nglobal.ExpoModulesCore_CodedError = _CodedError.CodedError;","map":{"version":3,"mappings":";AAAA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,IAAIC,iBAAQ,CAACC,EAAE,KAAK,SAAS,IAAIC,2BAAkB,EAAE;EAC9D,IAAMC,cAAc,GAAG,4CAA4C;EACnE,IAAMC,YAAY,GAAG,IAAIC,0BAAY,CAACH,2BAAkB,CAAC;EAEzDE,YAAY,CAACE,WAAW,CAACH,cAAc,EAAE,gBAAqC;IAAA,IAAlCI,OAAO,QAAPA,OAAO;IACjDC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;EACxB,CAAC,CAAC;;AAIJG,MAAM,CAACC,0BAA0B,GAAGC,sBAAU","names":["__DEV__","Platform","OS","NativeErrorManager","onNewException","eventEmitter","EventEmitter","addListener","message","console","error","global","ExpoModulesCore_CodedError","CodedError"],"sourceRoot":"","sources":["../../src/sweet/setUpErrorManager.fx.ts"],"sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport { CodedError } from '../errors/CodedError';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n\n// We have to export `CodedError` via global object to use in later in the C++ code.\nglobal.ExpoModulesCore_CodedError = CodedError;\n"]},"metadata":{},"sourceType":"script"}