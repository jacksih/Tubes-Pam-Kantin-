{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addMetaDataItemToMainApplication = addMetaDataItemToMainApplication;\nexports.addUsesLibraryItemToMainApplication = addUsesLibraryItemToMainApplication;\nexports.ensureToolsAvailable = ensureToolsAvailable;\nexports.findMetaDataItem = findMetaDataItem;\nexports.findUsesLibraryItem = findUsesLibraryItem;\nexports.getMainActivity = getMainActivity;\nexports.getMainActivityOrThrow = getMainActivityOrThrow;\nexports.getMainApplication = getMainApplication;\nexports.getMainApplicationMetaDataValue = getMainApplicationMetaDataValue;\nexports.getMainApplicationOrThrow = getMainApplicationOrThrow;\nexports.getRunnableActivity = getRunnableActivity;\nexports.prefixAndroidKeys = prefixAndroidKeys;\nexports.readAndroidManifestAsync = readAndroidManifestAsync;\nexports.removeMetaDataItemFromMainApplication = removeMetaDataItemFromMainApplication;\nexports.removeUsesLibraryItemFromMainApplication = removeUsesLibraryItemFromMainApplication;\nexports.writeAndroidManifestAsync = writeAndroidManifestAsync;\nfunction _assert() {\n  var data = _interopRequireDefault(require(\"assert\"));\n  _assert = function _assert() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction XML() {\n  var data = _interopRequireWildcard(require(\"../utils/XML\"));\n  XML = function XML() {\n    return data;\n  };\n  return data;\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction writeAndroidManifestAsync(_x, _x2) {\n  return _writeAndroidManifestAsync.apply(this, arguments);\n}\nfunction _writeAndroidManifestAsync() {\n  _writeAndroidManifestAsync = _asyncToGenerator(function* (manifestPath, androidManifest) {\n    var manifestXml = XML().format(androidManifest);\n    yield _fs().default.promises.mkdir(_path().default.dirname(manifestPath), {\n      recursive: true\n    });\n    yield _fs().default.promises.writeFile(manifestPath, manifestXml);\n  });\n  return _writeAndroidManifestAsync.apply(this, arguments);\n}\nfunction readAndroidManifestAsync(_x3) {\n  return _readAndroidManifestAsync.apply(this, arguments);\n}\nfunction _readAndroidManifestAsync() {\n  _readAndroidManifestAsync = _asyncToGenerator(function* (manifestPath) {\n    var xml = yield XML().readXMLAsync({\n      path: manifestPath\n    });\n    if (!isManifest(xml)) {\n      throw new Error('Invalid manifest found at: ' + manifestPath);\n    }\n    return xml;\n  });\n  return _readAndroidManifestAsync.apply(this, arguments);\n}\nfunction isManifest(xml) {\n  return !!xml.manifest;\n}\nfunction getMainApplication(androidManifest) {\n  var _androidManifest$mani, _androidManifest$mani2, _androidManifest$mani3;\n  return (_androidManifest$mani = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani2 = androidManifest.manifest) === null || _androidManifest$mani2 === void 0 ? void 0 : (_androidManifest$mani3 = _androidManifest$mani2.application) === null || _androidManifest$mani3 === void 0 ? void 0 : _androidManifest$mani3.filter(function (e) {\n    var _e$$;\n    return e === null || e === void 0 ? void 0 : (_e$$ = e.$) === null || _e$$ === void 0 ? void 0 : _e$$['android:name'].endsWith('.MainApplication');\n  })[0]) !== null && _androidManifest$mani !== void 0 ? _androidManifest$mani : null;\n}\nfunction getMainApplicationOrThrow(androidManifest) {\n  var mainApplication = getMainApplication(androidManifest);\n  (0, _assert().default)(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\nfunction getMainActivityOrThrow(androidManifest) {\n  var mainActivity = getMainActivity(androidManifest);\n  (0, _assert().default)(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\nfunction getRunnableActivity(androidManifest) {\n  var _androidManifest$mani4, _androidManifest$mani5, _androidManifest$mani6, _androidManifest$mani7, _androidManifest$mani8;\n  var enabledActivities = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani4 = androidManifest.manifest) === null || _androidManifest$mani4 === void 0 ? void 0 : (_androidManifest$mani5 = _androidManifest$mani4.application) === null || _androidManifest$mani5 === void 0 ? void 0 : (_androidManifest$mani6 = _androidManifest$mani5[0]) === null || _androidManifest$mani6 === void 0 ? void 0 : (_androidManifest$mani7 = _androidManifest$mani6.activity) === null || _androidManifest$mani7 === void 0 ? void 0 : (_androidManifest$mani8 = _androidManifest$mani7.filter) === null || _androidManifest$mani8 === void 0 ? void 0 : _androidManifest$mani8.call(_androidManifest$mani7, function (e) {\n    return e.$['android:enabled'] !== 'false' && e.$['android:enabled'] !== false;\n  });\n  if (!enabledActivities) {\n    return null;\n  }\n  for (var activity of enabledActivities) {\n    if (Array.isArray(activity['intent-filter'])) {\n      for (var intentFilter of activity['intent-filter']) {\n        var _intentFilter$action, _intentFilter$categor;\n        if ((_intentFilter$action = intentFilter.action) !== null && _intentFilter$action !== void 0 && _intentFilter$action.find(function (action) {\n          return action.$['android:name'] === 'android.intent.action.MAIN';\n        }) && (_intentFilter$categor = intentFilter.category) !== null && _intentFilter$categor !== void 0 && _intentFilter$categor.find(function (category) {\n          return category.$['android:name'] === 'android.intent.category.LAUNCHER';\n        })) {\n          return activity;\n        }\n      }\n    }\n  }\n  return null;\n}\nfunction getMainActivity(androidManifest) {\n  var _androidManifest$mani9, _androidManifest$mani10, _androidManifest$mani11, _androidManifest$mani12, _androidManifest$mani13, _mainActivity$;\n  var mainActivity = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani9 = androidManifest.manifest) === null || _androidManifest$mani9 === void 0 ? void 0 : (_androidManifest$mani10 = _androidManifest$mani9.application) === null || _androidManifest$mani10 === void 0 ? void 0 : (_androidManifest$mani11 = _androidManifest$mani10[0]) === null || _androidManifest$mani11 === void 0 ? void 0 : (_androidManifest$mani12 = _androidManifest$mani11.activity) === null || _androidManifest$mani12 === void 0 ? void 0 : (_androidManifest$mani13 = _androidManifest$mani12.filter) === null || _androidManifest$mani13 === void 0 ? void 0 : _androidManifest$mani13.call(_androidManifest$mani12, function (e) {\n    return e.$['android:name'] === '.MainActivity';\n  });\n  return (_mainActivity$ = mainActivity === null || mainActivity === void 0 ? void 0 : mainActivity[0]) !== null && _mainActivity$ !== void 0 ? _mainActivity$ : null;\n}\nfunction addMetaDataItemToMainApplication(mainApplication, itemName, itemValue) {\n  var itemType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'value';\n  var existingMetaDataItem;\n  var newItem = {\n    $: prefixAndroidKeys(_defineProperty({\n      name: itemName\n    }, itemType, itemValue))\n  };\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(function (e) {\n      return e.$['android:name'] === itemName;\n    });\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[\"android:\" + itemType] = itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n  return mainApplication;\n}\nfunction removeMetaDataItemFromMainApplication(mainApplication, itemName) {\n  var index = findMetaDataItem(mainApplication, itemName);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication['meta-data'] && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n  return mainApplication;\n}\nfunction findApplicationSubItem(mainApplication, category, itemName) {\n  var parent = mainApplication[category];\n  if (Array.isArray(parent)) {\n    var index = parent.findIndex(function (e) {\n      return e.$['android:name'] === itemName;\n    });\n    return index;\n  }\n  return -1;\n}\nfunction findMetaDataItem(mainApplication, itemName) {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\nfunction findUsesLibraryItem(mainApplication, itemName) {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\nfunction getMainApplicationMetaDataValue(androidManifest, name) {\n  var mainApplication = getMainApplication(androidManifest);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication.hasOwnProperty('meta-data')) {\n    var _mainApplication$meta, _item$$$androidValue;\n    var item = mainApplication === null || mainApplication === void 0 ? void 0 : (_mainApplication$meta = mainApplication['meta-data']) === null || _mainApplication$meta === void 0 ? void 0 : _mainApplication$meta.find(function (e) {\n      return e.$['android:name'] === name;\n    });\n    return (_item$$$androidValue = item === null || item === void 0 ? void 0 : item.$['android:value']) !== null && _item$$$androidValue !== void 0 ? _item$$$androidValue : null;\n  }\n  return null;\n}\nfunction addUsesLibraryItemToMainApplication(mainApplication, item) {\n  var existingMetaDataItem;\n  var newItem = {\n    $: prefixAndroidKeys(item)\n  };\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(function (e) {\n      return e.$['android:name'] === item.name;\n    });\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n  return mainApplication;\n}\nfunction removeUsesLibraryItemFromMainApplication(mainApplication, itemName) {\n  var index = findUsesLibraryItem(mainApplication, itemName);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication['uses-library'] && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n  return mainApplication;\n}\nfunction prefixAndroidKeys(head) {\n  return Object.entries(head).reduce(function (prev, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      curr = _ref2[1];\n    return Object.assign({}, prev, _defineProperty({}, \"android:\" + key, curr));\n  }, {});\n}\nfunction ensureToolsAvailable(manifest) {\n  return ensureManifestHasNamespace(manifest, {\n    namespace: 'xmlns:tools',\n    url: 'http://schemas.android.com/tools'\n  });\n}\nfunction ensureManifestHasNamespace(manifest, _ref3) {\n  var namespace = _ref3.namespace,\n    url = _ref3.url;\n  var _manifest$manifest, _manifest$manifest$$;\n  if (manifest !== null && manifest !== void 0 && (_manifest$manifest = manifest.manifest) !== null && _manifest$manifest !== void 0 && (_manifest$manifest$$ = _manifest$manifest.$) !== null && _manifest$manifest$$ !== void 0 && _manifest$manifest$$[namespace]) {\n    return manifest;\n  }\n  manifest.manifest.$[namespace] = url;\n  return manifest;\n}","map":{"version":3,"sources":["../../src/android/Manifest.ts"],"names":["writeAndroidManifestAsync","manifestPath","androidManifest","manifestXml","XML","format","promises","mkdir","path","dirname","recursive","fs","writeFile","readAndroidManifestAsync","xml","readXMLAsync","isManifest","Error","manifest","getMainApplication","application","filter","e","$","endsWith","getMainApplicationOrThrow","mainApplication","getMainActivityOrThrow","mainActivity","getMainActivity","getRunnableActivity","enabledActivities","activity","Array","isArray","intentFilter","action","find","category","addMetaDataItemToMainApplication","itemName","itemValue","itemType","existingMetaDataItem","newItem","prefixAndroidKeys","name","length","push","removeMetaDataItemFromMainApplication","index","findMetaDataItem","splice","findApplicationSubItem","parent","findIndex","findUsesLibraryItem","getMainApplicationMetaDataValue","hasOwnProperty","item","addUsesLibraryItemToMainApplication","removeUsesLibraryItemFromMainApplication","head","entries","reduce","prev","key","curr","ensureToolsAvailable","ensureManifestHasNamespace","namespace","url"],"mappings":"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","sourcesContent":["import assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as XML from '../utils/XML';\n\nexport type StringBoolean = 'true' | 'false';\n\ntype ManifestMetaDataAttributes = AndroidManifestAttributes & {\n  'android:value'?: string;\n  'android:resource'?: string;\n};\n\ntype AndroidManifestAttributes = {\n  'android:name': string | 'android.intent.action.VIEW';\n  'tools:node'?: string | 'remove';\n};\n\ntype ManifestAction = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestCategory = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestData = {\n  $: {\n    [key: string]: string | undefined;\n    'android:host'?: string;\n    'android:pathPrefix'?: string;\n    'android:scheme'?: string;\n  };\n};\n\ntype ManifestReceiver = {\n  $: AndroidManifestAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:enabled'?: StringBoolean;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\nexport type ManifestIntentFilter = {\n  $?: {\n    'android:autoVerify'?: StringBoolean;\n    'data-generated'?: StringBoolean;\n  };\n  action?: ManifestAction[];\n  data?: ManifestData[];\n  category?: ManifestCategory[];\n};\n\nexport type ManifestMetaData = {\n  $: ManifestMetaDataAttributes;\n};\n\ntype ManifestServiceAttributes = AndroidManifestAttributes & {\n  'android:enabled'?: StringBoolean;\n  'android:exported'?: StringBoolean;\n  'android:permission'?: string;\n  // ...\n};\n\ntype ManifestService = {\n  $: ManifestServiceAttributes;\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\ntype ManifestApplicationAttributes = {\n  'android:name': string | '.MainApplication';\n  'android:icon'?: string;\n  'android:roundIcon'?: string;\n  'android:label'?: string;\n  'android:allowBackup'?: StringBoolean;\n  'android:largeHeap'?: StringBoolean;\n  'android:requestLegacyExternalStorage'?: StringBoolean;\n  'android:usesCleartextTraffic'?: StringBoolean;\n  [key: string]: string | undefined;\n};\n\nexport type ManifestActivity = {\n  $: ManifestApplicationAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:launchMode'?: string;\n    'android:theme'?: string;\n    'android:windowSoftInputMode'?:\n      | string\n      | 'stateUnspecified'\n      | 'stateUnchanged'\n      | 'stateHidden'\n      | 'stateAlwaysHidden'\n      | 'stateVisible'\n      | 'stateAlwaysVisible'\n      | 'adjustUnspecified'\n      | 'adjustResize'\n      | 'adjustPan';\n    [key: string]: string | undefined;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n  // ...\n};\n\nexport type ManifestUsesLibrary = {\n  $: AndroidManifestAttributes & {\n    'android:required'?: StringBoolean;\n  };\n};\n\nexport type ManifestApplication = {\n  $: ManifestApplicationAttributes;\n  activity?: ManifestActivity[];\n  service?: ManifestService[];\n  receiver?: ManifestReceiver[];\n  'meta-data'?: ManifestMetaData[];\n  'uses-library'?: ManifestUsesLibrary[];\n  // ...\n};\n\ntype ManifestPermission = {\n  $: AndroidManifestAttributes & {\n    'android:protectionLevel'?: string | 'signature';\n  };\n};\n\nexport type ManifestUsesPermission = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestUsesFeature = {\n  $: AndroidManifestAttributes & {\n    'android:glEsVersion'?: string;\n    'android:required': StringBoolean;\n  };\n};\n\nexport type AndroidManifest = {\n  manifest: {\n    // Probably more, but this is currently all we'd need for most cases in Expo.\n    $: {\n      'xmlns:android': string;\n      'xmlns:tools'?: string;\n      package?: string;\n      [key: string]: string | undefined;\n    };\n    permission?: ManifestPermission[];\n    'uses-permission'?: ManifestUsesPermission[];\n    'uses-permission-sdk-23'?: ManifestUsesPermission[];\n    'uses-feature'?: ManifestUsesFeature[];\n    application?: ManifestApplication[];\n  };\n};\n\nexport async function writeAndroidManifestAsync(\n  manifestPath: string,\n  androidManifest: AndroidManifest\n): Promise<void> {\n  const manifestXml = XML.format(androidManifest);\n  await fs.promises.mkdir(path.dirname(manifestPath), { recursive: true });\n  await fs.promises.writeFile(manifestPath, manifestXml);\n}\n\nexport async function readAndroidManifestAsync(manifestPath: string): Promise<AndroidManifest> {\n  const xml = await XML.readXMLAsync({ path: manifestPath });\n  if (!isManifest(xml)) {\n    throw new Error('Invalid manifest found at: ' + manifestPath);\n  }\n  return xml;\n}\n\nfunction isManifest(xml: XML.XMLObject): xml is AndroidManifest {\n  // TODO: Maybe more validation\n  return !!xml.manifest;\n}\n\n/** Returns the `manifest.application` tag ending in `.MainApplication` */\nexport function getMainApplication(androidManifest: AndroidManifest): ManifestApplication | null {\n  return (\n    androidManifest?.manifest?.application?.filter((e) =>\n      e?.$?.['android:name'].endsWith('.MainApplication')\n    )[0] ?? null\n  );\n}\n\nexport function getMainApplicationOrThrow(androidManifest: AndroidManifest): ManifestApplication {\n  const mainApplication = getMainApplication(androidManifest);\n  assert(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\n\nexport function getMainActivityOrThrow(androidManifest: AndroidManifest): ManifestActivity {\n  const mainActivity = getMainActivity(androidManifest);\n  assert(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\n\nexport function getRunnableActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  // Get enabled activities\n  const enabledActivities = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:enabled'] !== 'false' && e.$['android:enabled'] !== false\n  );\n\n  if (!enabledActivities) {\n    return null;\n  }\n\n  // Get the activity that has a runnable intent-filter\n  for (const activity of enabledActivities) {\n    if (Array.isArray(activity['intent-filter'])) {\n      for (const intentFilter of activity['intent-filter']) {\n        if (\n          intentFilter.action?.find(\n            (action) => action.$['android:name'] === 'android.intent.action.MAIN'\n          ) &&\n          intentFilter.category?.find(\n            (category) => category.$['android:name'] === 'android.intent.category.LAUNCHER'\n          )\n        ) {\n          return activity;\n        }\n      }\n    }\n  }\n\n  return null;\n}\n\nexport function getMainActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  const mainActivity = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:name'] === '.MainActivity'\n  );\n  return mainActivity?.[0] ?? null;\n}\n\nexport function addMetaDataItemToMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string,\n  itemValue: string,\n  itemType: 'resource' | 'value' = 'value'\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys({ name: itemName, [itemType]: itemValue }),\n  } as ManifestMetaData;\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(\n      (e: any) => e.$['android:name'] === itemName\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[`android:${itemType}` as keyof ManifestMetaDataAttributes] =\n        itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeMetaDataItemFromMainApplication(mainApplication: any, itemName: string) {\n  const index = findMetaDataItem(mainApplication, itemName);\n  if (mainApplication?.['meta-data'] && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nfunction findApplicationSubItem(\n  mainApplication: ManifestApplication,\n  category: keyof ManifestApplication,\n  itemName: string\n): number {\n  const parent = mainApplication[category];\n  if (Array.isArray(parent)) {\n    const index = parent.findIndex((e: any) => e.$['android:name'] === itemName);\n\n    return index;\n  }\n  return -1;\n}\n\nexport function findMetaDataItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\n\nexport function findUsesLibraryItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\n\nexport function getMainApplicationMetaDataValue(\n  androidManifest: AndroidManifest,\n  name: string\n): string | null {\n  const mainApplication = getMainApplication(androidManifest);\n\n  if (mainApplication?.hasOwnProperty('meta-data')) {\n    const item = mainApplication?.['meta-data']?.find((e: any) => e.$['android:name'] === name);\n    return item?.$['android:value'] ?? null;\n  }\n\n  return null;\n}\n\nexport function addUsesLibraryItemToMainApplication(\n  mainApplication: ManifestApplication,\n  item: { name: string; required?: boolean }\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys(item),\n  } as ManifestUsesLibrary;\n\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(\n      (e) => e.$['android:name'] === item.name\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeUsesLibraryItemFromMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string\n) {\n  const index = findUsesLibraryItem(mainApplication, itemName);\n  if (mainApplication?.['uses-library'] && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nexport function prefixAndroidKeys<T extends Record<string, any> = Record<string, string>>(\n  head: T\n): Record<string, any> {\n  // prefix all keys with `android:`\n  return Object.entries(head).reduce(\n    (prev, [key, curr]) => ({ ...prev, [`android:${key}`]: curr }),\n    {} as T\n  );\n}\n\n/**\n * Ensure the `tools:*` namespace is available in the manifest.\n *\n * @param manifest AndroidManifest.xml\n * @returns manifest with the `tools:*` namespace available\n */\nexport function ensureToolsAvailable(manifest: AndroidManifest) {\n  return ensureManifestHasNamespace(manifest, {\n    namespace: 'xmlns:tools',\n    url: 'http://schemas.android.com/tools',\n  });\n}\n\n/**\n * Ensure a particular namespace is available in the manifest.\n *\n * @param manifest `AndroidManifest.xml`\n * @returns manifest with the provided namespace available\n */\nfunction ensureManifestHasNamespace(\n  manifest: AndroidManifest,\n  { namespace, url }: { namespace: string; url: string }\n) {\n  if (manifest?.manifest?.$?.[namespace]) {\n    return manifest;\n  }\n  manifest.manifest.$[namespace] = url;\n  return manifest;\n}\n"]},"metadata":{},"sourceType":"script"}