{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = registerRootComponent;\nrequire(\"expo/build/Expo.fx\");\nvar _reactNative = require(\"react-native\");\nfunction registerRootComponent(component) {\n  if (process.env.NODE_ENV === 'production') {\n    _reactNative.AppRegistry.registerComponent('main', function () {\n      return component;\n    });\n  } else {\n    var _require = require('./withDevTools'),\n      withDevTools = _require.withDevTools;\n    _reactNative.AppRegistry.registerComponent('main', function () {\n      return withDevTools(component);\n    });\n  }\n  if (_reactNative.Platform.OS === 'web') {\n    var _document$getElementB;\n    var rootTag = (_document$getElementB = document.getElementById('root')) != null ? _document$getElementB : document.getElementById('main');\n    _reactNative.AppRegistry.runApplication('main', {\n      rootTag: rootTag\n    });\n  }\n}","map":{"version":3,"sources":["../../src/launch/registerRootComponent.tsx"],"names":[],"mappings":";;;;AAAA;AAGA;AAac,SAAU,qBAAqB,CAC3C,SAAiC,EAAA;EAEjC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,wBAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE;MAAA,OAAM,SAAS;IAAA,EAAC;GACvD,MAAM;IACL,eAAyB,OAAO,CAAC,gBAAgB,CAAoC;MAA7E,YAAY,YAAZ,YAAY;IACpB,wBAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE;MAAA,OAAM,YAAY,CAAC,SAAS,CAAC;IAAA,EAAC;EACrE;EAED,IAAI,qBAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;IAAA;IACzB,IAAM,OAAO,4BAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,oCAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC;IAClF,wBAAW,CAAC,cAAc,CAAC,MAAM,EAAE;MAAE,OAAO,EAAP;IAAO,CAAE,CAAC;EAChD;AACH","sourcesContent":["import 'expo/build/Expo.fx';\n\nimport * as React from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\ntype InitialProps = {\n  exp: {\n    notification?: any;\n    manifestString?: string;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  if (process.env.NODE_ENV === 'production') {\n    AppRegistry.registerComponent('main', () => component);\n  } else {\n    const { withDevTools } = require('./withDevTools') as typeof import('./withDevTools');\n    AppRegistry.registerComponent('main', () => withDevTools(component));\n  }\n\n  if (Platform.OS === 'web') {\n    const rootTag = document.getElementById('root') ?? document.getElementById('main');\n    AppRegistry.runApplication('main', { rootTag });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}