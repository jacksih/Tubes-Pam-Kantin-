{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getModulesPaths = getModulesPaths;\nexports.getWorkspaceRoot = getWorkspaceRoot;\nfunction _findYarnWorkspaceRoot() {\n  var data = _interopRequireDefault(require(\"find-yarn-workspace-root\"));\n  _findYarnWorkspaceRoot = function _findYarnWorkspaceRoot() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getWorkspaceRoot(projectRoot) {\n  try {\n    return (0, _findYarnWorkspaceRoot().default)(projectRoot);\n  } catch (error) {\n    if (error.message.includes('Unexpected end of JSON input')) {\n      return null;\n    }\n    throw error;\n  }\n}\nfunction getModulesPaths(projectRoot) {\n  var paths = [];\n  var workspaceRoot = getWorkspaceRoot(_path().default.resolve(projectRoot));\n  if (workspaceRoot) {\n    paths.push(_path().default.resolve(projectRoot));\n    paths.push(_path().default.resolve(workspaceRoot, 'node_modules'));\n  }\n  return paths;\n}","map":{"version":3,"sources":["../src/getModulesPaths.ts"],"names":["getWorkspaceRoot","projectRoot","error","message","includes","getModulesPaths","paths","workspaceRoot","path","resolve","push"],"mappings":";;;;;;;AAAA,SAAA,sBAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;EAAA,sBAAA,GAAA,kCAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;;;;;;AAGO,SAASA,gBAAT,CAA0BC,WAA1B,EAA8D;EACnE,IAAI;IACF,OAAO,CAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,OAAA,EAAkBA,WAAlB,CAAP;EACD,CAFD,CAEE,OAAOC,KAAP,EAAmB;IACnB,IAAIA,KAAK,CAACC,OAAND,CAAcE,QAAdF,CAAuB,8BAAvBA,CAAJ,EAA4D;MAC1D,OAAO,IAAP;IACD;IACD,MAAMA,KAAN;EACD;AACF;AAEM,SAASG,eAAT,CAAyBJ,WAAzB,EAAwD;EAC7D,IAAMK,KAAe,GAAG,EADqC;EAK7D,IAAMC,aAAa,GAAGP,gBAAgB,CAACQ,KAAAA,EAAAA,CAAAA,OAAAA,CAAKC,OAALD,CAAaP,WAAbO,CAAD,CALuB;EAM7D,IAAID,aAAJ,EAAmB;IACjBD,KAAK,CAACI,IAANJ,CAAWE,KAAAA,EAAAA,CAAAA,OAAAA,CAAKC,OAALD,CAAaP,WAAbO,CAAXF,CAAAA;IACAA,KAAK,CAACI,IAANJ,CAAWE,KAAAA,EAAAA,CAAAA,OAAAA,CAAKC,OAALD,CAAaD,aAAbC,EAA4B,cAA5BA,CAAXF,CAAAA;EACD;EAED,OAAOA,KAAP;AACD","sourcesContent":["import findWorkspaceRoot from 'find-yarn-workspace-root';\nimport path from 'path';\n\n/** Wraps `findWorkspaceRoot` and guards against having an empty `package.json` file in an upper directory. */\nexport function getWorkspaceRoot(projectRoot: string): string | null {\n  try {\n    return findWorkspaceRoot(projectRoot);\n  } catch (error: any) {\n    if (error.message.includes('Unexpected end of JSON input')) {\n      return null;\n    }\n    throw error;\n  }\n}\n\nexport function getModulesPaths(projectRoot: string): string[] {\n  const paths: string[] = [];\n\n  // Only add the project root if it's not the current working directory\n  // this minimizes the chance of Metro resolver breaking on new Node.js versions.\n  const workspaceRoot = getWorkspaceRoot(path.resolve(projectRoot)); // Absolute path or null\n  if (workspaceRoot) {\n    paths.push(path.resolve(projectRoot));\n    paths.push(path.resolve(workspaceRoot, 'node_modules'));\n  }\n\n  return paths;\n}\n"]},"metadata":{},"sourceType":"script"}