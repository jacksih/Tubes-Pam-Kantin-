{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createKnownCommunityMatcher = exports.createExpoMatcher = void 0;\nexports.createModuleMatcher = createModuleMatcher;\nexports.createReactNativeMatcher = void 0;\nfunction createModuleMatcher(_ref) {\n  var _ref$folders = _ref.folders,\n    folders = _ref$folders === void 0 ? ['node_modules'] : _ref$folders,\n    moduleIds = _ref.moduleIds;\n  var modulePathsGroup = folders.join('|');\n  var moduleMatchersGroup = moduleIds.join('|');\n  var moduleMatcherId = '^' + [modulePathsGroup, moduleMatchersGroup].map(function (value) {\n    return \"(?:\" + value + \")\";\n  }).join('/');\n  return new RegExp(moduleMatcherId);\n}\nvar createReactNativeMatcher = function createReactNativeMatcher(_ref2) {\n  var folders = _ref2.folders;\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: ['react-native/']\n  });\n};\nexports.createReactNativeMatcher = createReactNativeMatcher;\nvar createExpoMatcher = function createExpoMatcher(_ref3) {\n  var folders = _ref3.folders;\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: ['expo', '@expo', '@unimodules', '@use-expo']\n  });\n};\nexports.createExpoMatcher = createExpoMatcher;\nvar createKnownCommunityMatcher = function createKnownCommunityMatcher() {\n  var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    folders = _ref4.folders,\n    _ref4$moduleIds = _ref4.moduleIds,\n    moduleIds = _ref4$moduleIds === void 0 ? [] : _ref4$moduleIds;\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: [].concat(_toConsumableArray(moduleIds), ['@react-', '@(?:[\\\\w|-]+)/react-native', 'react-native-', 'victory-', 'native-base', 'styled-components', 'three/build/three.module.js', 'three/examples/jsm', 'html-elements/', 'react-navigation-'])\n  });\n};\nexports.createKnownCommunityMatcher = createKnownCommunityMatcher;","map":{"version":3,"sources":["../../src/transformer/createMatcher.ts"],"names":["createModuleMatcher","folders","moduleIds","modulePathsGroup","join","moduleMatchersGroup","moduleMatcherId","map","value","RegExp","createReactNativeMatcher","createExpoMatcher","createKnownCommunityMatcher"],"mappings":";;;;;;;;;AAEO,SAASA,mBAAT,OAMJ;EAAA,wBALDC,OAAO;IAAPA,OAAO,6BAAG,CAAC,cAAD,CADwB;IAElCC,SAAAA,QAAAA,SAAAA;EAKA,IAAMC,gBAAgB,GAAGF,OAAO,CAACG,IAARH,CAAa,GAAbA,CAAzB;EAEA,IAAMI,mBAAmB,GAAGH,SAAS,CAACE,IAAVF,CAAe,GAAfA,CAA5B;EAEA,IAAMI,eAAe,GACnB,GAAA,GAAM,CAACH,gBAAD,EAAmBE,mBAAnB,CAAA,CAAwCE,GAAxC,CAA6CC,UAAAA,KAAD;IAAA,eAAiBA,KAAM;EAAA,CAAnE,CAAA,CAAuEJ,IAAvE,CAA4E,GAA5E,CADR;EAGA,OAAO,IAAIK,MAAJ,CAAWH,eAAX,CAAP;AACD;AAEM,IAAMI,wBAAwB,GAAG,SAA3BA,wBAAwB;EAAA,IAAMT,OAAAA,SAAAA,OAAAA;EAAAA,OACzCD,mBAAmB,CAAC;IAClBC,OADkB,EAClBA,OADkB;IAElBC,SAAS,EAAE,CAAC,eAAD;EAFO,CAAD,CADd;AAAA;;AAMA,IAAMS,iBAAiB,GAAG,SAApBA,iBAAiB;EAAA,IAAMV,OAAAA,SAAAA,OAAAA;EAAAA,OAClCD,mBAAmB,CAAC;IAClBC,OADkB,EAClBA,OADkB;IAGlBC,SAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,aAAlB,EAAiC,WAAjC;EAHO,CAAD,CADd;AAAA;;AASA,IAAMU,2BAA2B,GAAG,SAA9BA,2BAA2B;EAAA,gFAMpC,CAAA,CANuC;IACzCX,OAD0C,SAC1CA,OAD0C;IAAA,wBAE1CC,SAAS;IAATA,SAAS,gCAAG,EAAA;EAAA,OAKZF,mBAAmB,CAAC;IAClBC,OADkB,EAClBA,OADkB;IAElBC,SAAS,+BACJA,SADM,IAIT,SAJS,EAMT,4BANS,EAOT,eAPS,EAQT,UARS,EAST,aATS,EAUT,mBAVS,EAYT,6BAZS,EAaT,oBAbS,EAeT,gBAfS,EAiBT,mBAjBS;EAFO,CAAD,CAPd;AAAA","sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\n\nexport function createModuleMatcher({\n  folders = ['node_modules'],\n  moduleIds,\n}: {\n  folders?: string[];\n  moduleIds: string[];\n}) {\n  const modulePathsGroup = folders.join('|');\n\n  const moduleMatchersGroup = moduleIds.join('|');\n\n  const moduleMatcherId =\n    '^' + [modulePathsGroup, moduleMatchersGroup].map((value) => `(?:${value})`).join('/');\n\n  return new RegExp(moduleMatcherId);\n}\n\nexport const createReactNativeMatcher = ({ folders }: { folders?: string[] }) =>\n  createModuleMatcher({\n    folders,\n    moduleIds: ['react-native/'],\n  });\n\nexport const createExpoMatcher = ({ folders }: { folders?: string[] }) =>\n  createModuleMatcher({\n    folders,\n    // We'll work to start reducing this.\n    moduleIds: ['expo', '@expo', '@unimodules', '@use-expo'],\n  });\n\n// TODO: Make this list as short as possible before releasing.\n// TODO: Add SDK version compat list.\nexport const createKnownCommunityMatcher = ({\n  folders,\n  moduleIds = [],\n}: {\n  folders?: string[];\n  moduleIds?: string[];\n} = {}) =>\n  createModuleMatcher({\n    folders,\n    moduleIds: [\n      ...moduleIds,\n      // The more complex, the longer the entire project takes...\n      // react-native-community, react-native-masked-view, react-native-picker, react-native-segmented-control, react-native\n      '@react-',\n      // @sentry/react-native\n      '@(?:[\\\\w|-]+)/react-native',\n      'react-native-',\n      'victory-',\n      'native-base',\n      'styled-components',\n      // three.js\n      'three/build/three.module.js',\n      'three/examples/jsm',\n      // Special case for testing expo/expo repo\n      'html-elements/',\n      // shared-element\n      'react-navigation-',\n    ],\n  });\n"]},"metadata":{},"sourceType":"script"}