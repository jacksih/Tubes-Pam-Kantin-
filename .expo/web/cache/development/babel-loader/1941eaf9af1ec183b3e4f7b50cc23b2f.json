{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _taggedTemplateLiteralLoose = require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\");\nvar _excluded = [\"reporter\"],\n  _excluded2 = [\"reporter\", \"target\"];\nvar _templateObject;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.INTERNAL_CALLSITES_REGEX = exports.EXPO_DEBUG = void 0;\nexports.getDefaultConfig = getDefaultConfig;\nexports.loadAsync = loadAsync;\nfunction _config() {\n  var data = require(\"@expo/config\");\n  _config = function _config() {\n    return data;\n  };\n  return data;\n}\nfunction _paths() {\n  var data = require(\"@expo/config/paths\");\n  _paths = function _paths() {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nfunction _getenv() {\n  var data = require(\"getenv\");\n  _getenv = function _getenv() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _resolveFrom() {\n  var data = _interopRequireDefault(require(\"resolve-from\"));\n  _resolveFrom = function _resolveFrom() {\n    return data;\n  };\n  return data;\n}\nfunction _url() {\n  var data = require(\"url\");\n  _url = function _url() {\n    return data;\n  };\n  return data;\n}\nfunction _getModulesPaths() {\n  var data = require(\"./getModulesPaths\");\n  _getModulesPaths = function _getModulesPaths() {\n    return data;\n  };\n  return data;\n}\nfunction _getWatchFolders() {\n  var data = require(\"./getWatchFolders\");\n  _getWatchFolders = function _getWatchFolders() {\n    return data;\n  };\n  return data;\n}\nfunction _importMetroFromProject() {\n  var data = require(\"./importMetroFromProject\");\n  _importMetroFromProject = function _importMetroFromProject() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar EXPO_DEBUG = (0, _getenv().boolish)('EXPO_DEBUG', false);\nexports.EXPO_DEBUG = EXPO_DEBUG;\nvar EXPO_USE_EXOTIC = (0, _getenv().boolish)('EXPO_USE_EXOTIC', false);\nvar INTERNAL_CALLSITES_REGEX = new RegExp(['/Libraries/Renderer/implementations/.+\\\\.js$', '/Libraries/BatchedBridge/MessageQueue\\\\.js$', '/Libraries/YellowBox/.+\\\\.js$', '/Libraries/LogBox/.+\\\\.js$', '/Libraries/Core/Timers/.+\\\\.js$', 'node_modules/react-devtools-core/.+\\\\.js$', 'node_modules/react-refresh/.+\\\\.js$', 'node_modules/scheduler/.+\\\\.js$', '/metro/.*/polyfills/require.js$', '/metro/.*/lib/bundle-modules/.+\\\\.js$', '/metro/.*/lib/bundle-modules/.+\\\\.js$', 'node_modules/react-native/Libraries/Utilities/HMRClient.js$', 'node_modules/eventemitter3/index.js', 'node_modules/event-target-shim/dist/.+\\\\.js$', '/expo/build/logs/RemoteConsole.js$', 'node_modules/invariant/.+\\\\.js$', 'node_modules/regenerator-runtime/.+\\\\.js$', 'node_modules/promise/setimmediate/.+\\\\.js$', 'node_modules/@babel/runtime/.+\\\\.js$', \"\\\\[native code\\\\]\"].join('|'));\nexports.INTERNAL_CALLSITES_REGEX = INTERNAL_CALLSITES_REGEX;\nfunction isUrl(value) {\n  try {\n    new (_url().URL)(value);\n    return true;\n  } catch (_unused) {\n    return false;\n  }\n}\nfunction readIsLegacyImportsEnabled(projectRoot) {\n  var config = (0, _config().getConfig)(projectRoot, {\n    skipSDKVersionRequirement: true\n  });\n  return (0, _config().isLegacyImportsEnabled)(config.exp);\n}\nfunction getProjectBabelConfigFile(projectRoot) {\n  return _resolveFrom().default.silent(projectRoot, './babel.config.js') || _resolveFrom().default.silent(projectRoot, './.babelrc') || _resolveFrom().default.silent(projectRoot, './.babelrc.js');\n}\nfunction getAssetPlugins(projectRoot) {\n  var assetPlugins = [];\n  var hashAssetFilesPath;\n  try {\n    hashAssetFilesPath = (0, _resolveFrom().default)(projectRoot, 'expo-asset/tools/hashAssetFiles');\n  } catch (_unused2) {}\n  if (hashAssetFilesPath) {\n    assetPlugins.push(hashAssetFilesPath);\n  }\n  return assetPlugins;\n}\nvar hasWarnedAboutExotic = false;\nfunction getDefaultConfig(projectRoot) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var isExotic = options.mode === 'exotic' || EXPO_USE_EXOTIC;\n  if (isExotic && !hasWarnedAboutExotic) {\n    hasWarnedAboutExotic = true;\n    console.log(_chalk().default.gray(\"\\u203A Unstable feature \" + _chalk().default.bold(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"EXPO_USE_EXOTIC\"]))) + \" is enabled. Bundling may not work as expected, and is subject to breaking changes.\"));\n  }\n  var MetroConfig = (0, _importMetroFromProject().importMetroConfigFromProject)(projectRoot);\n  var reactNativePath = _path().default.dirname((0, _resolveFrom().default)(projectRoot, 'react-native/package.json'));\n  try {\n    var babelPresetFbjsPath = (0, _resolveFrom().default)(projectRoot, 'babel-preset-fbjs/package.json');\n    process.env.EXPO_METRO_CACHE_KEY_VERSION = String(require(babelPresetFbjsPath).version);\n  } catch (_unused3) {}\n  var isLegacy = readIsLegacyImportsEnabled(projectRoot);\n  if (options.target) {\n    if (!isLegacy) {\n      console.warn(_chalk().default.yellow(\"The target option is deprecated. Learn more: http://expo.fyi/expo-extension-migration\"));\n      delete options.target;\n    }\n  } else if (process.env.EXPO_TARGET) {\n    console.error('EXPO_TARGET is deprecated. Learn more: http://expo.fyi/expo-extension-migration');\n    if (isLegacy) {\n      options.target = process.env.EXPO_TARGET;\n    }\n  } else if (isLegacy) {\n    options.target = (0, _config().getDefaultTarget)(projectRoot);\n  }\n  if (!options.target) {\n    options.target = 'bare';\n  }\n  var target = options.target;\n  if (!(target === 'managed' || target === 'bare')) {\n    throw new Error(\"Invalid target: '\" + target + \"'. Debug info: \\n\" + JSON.stringify({\n      'options.target': options.target,\n      default: (0, _config().getDefaultTarget)(projectRoot)\n    }, null, 2));\n  }\n  var sourceExtsConfig = {\n    isTS: true,\n    isReact: true,\n    isModern: false\n  };\n  var sourceExts = target === 'bare' ? (0, _paths().getBareExtensions)([], sourceExtsConfig) : (0, _paths().getManagedExtensions)([], sourceExtsConfig);\n  if (isExotic) {\n    sourceExts.push('cjs');\n  }\n  var babelConfigPath = getProjectBabelConfigFile(projectRoot);\n  var isCustomBabelConfigDefined = !!babelConfigPath;\n  var resolverMainFields = [];\n  if (!isExotic) {\n    resolverMainFields.push('react-native');\n  }\n  resolverMainFields.push('browser', 'main');\n  var watchFolders = (0, _getWatchFolders().getWatchFolders)(projectRoot);\n  var nodeModulesPaths = (0, _getModulesPaths().getModulesPaths)(projectRoot);\n  if (EXPO_DEBUG) {\n    console.log();\n    console.log(\"Expo Metro config:\");\n    try {\n      console.log(\"- Version: \" + require('../package.json').version);\n    } catch (_unused4) {}\n    console.log(\"- Bundler target: \" + target);\n    console.log(\"- Legacy: \" + isLegacy);\n    console.log(\"- Extensions: \" + sourceExts.join(', '));\n    console.log(\"- React Native: \" + reactNativePath);\n    console.log(\"- Babel config: \" + (babelConfigPath || 'babel-preset-expo (default)'));\n    console.log(\"- Resolver Fields: \" + resolverMainFields.join(', '));\n    console.log(\"- Watch Folders: \" + watchFolders.join(', '));\n    console.log(\"- Node Module Paths: \" + nodeModulesPaths.join(', '));\n    console.log(\"- Exotic: \" + isExotic);\n    console.log();\n  }\n  var _MetroConfig$getDefau = MetroConfig.getDefaultConfig.getDefaultValues(projectRoot),\n    reporter = _MetroConfig$getDefau.reporter,\n    metroDefaultValues = _objectWithoutProperties(_MetroConfig$getDefau, _excluded);\n  return MetroConfig.mergeConfig(metroDefaultValues, {\n    watchFolders: watchFolders,\n    resolver: {\n      resolverMainFields: resolverMainFields,\n      platforms: ['ios', 'android', 'native', 'testing'],\n      assetExts: metroDefaultValues.resolver.assetExts.filter(function (assetExt) {\n        return !sourceExts.includes(assetExt);\n      }),\n      sourceExts: sourceExts,\n      nodeModulesPaths: nodeModulesPaths\n    },\n    serializer: {\n      getModulesRunBeforeMainModule: function getModulesRunBeforeMainModule() {\n        return [require.resolve(_path().default.join(reactNativePath, 'Libraries/Core/InitializeCore'))];\n      },\n      getPolyfills: function getPolyfills() {\n        return require(_path().default.join(reactNativePath, 'rn-get-polyfills'))();\n      }\n    },\n    server: {\n      port: Number(process.env.RCT_METRO_PORT) || 8081\n    },\n    symbolicator: {\n      customizeFrame: function customizeFrame(frame) {\n        if (frame.file && isUrl(frame.file)) {\n          return Object.assign({}, frame, {\n            lineNumber: null,\n            column: null,\n            collapse: true\n          });\n        }\n        var collapse = Boolean(frame.file && INTERNAL_CALLSITES_REGEX.test(frame.file));\n        if (!collapse) {\n          var _frame$file;\n          if (frame.column === 3 && frame.methodName === 'global code' && (_frame$file = frame.file) !== null && _frame$file !== void 0 && _frame$file.match(/^https?:\\/\\//g)) {\n            collapse = true;\n          }\n        }\n        return Object.assign({}, frame || {}, {\n          collapse: collapse\n        });\n      }\n    },\n    transformer: {\n      unstable_allowRequireContext: true,\n      allowOptionalDependencies: true,\n      babelTransformerPath: isExotic ? require.resolve('./transformer/metro-expo-exotic-babel-transformer') : isCustomBabelConfigDefined ? _resolveFrom().default.silent(projectRoot, 'metro-react-native-babel-transformer') : require.resolve('./transformer/metro-expo-babel-transformer'),\n      assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',\n      assetPlugins: getAssetPlugins(projectRoot)\n    }\n  });\n}\nfunction loadAsync(_x) {\n  return _loadAsync.apply(this, arguments);\n}\nfunction _loadAsync() {\n  _loadAsync = _asyncToGenerator(function* (projectRoot) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      reporter = _ref.reporter,\n      target = _ref.target,\n      metroOptions = _objectWithoutProperties(_ref, _excluded2);\n    var defaultConfig = getDefaultConfig(projectRoot, {\n      target: target\n    });\n    if (reporter) {\n      defaultConfig = Object.assign({}, defaultConfig, {\n        reporter: reporter\n      });\n    }\n    var MetroConfig = (0, _importMetroFromProject().importMetroConfigFromProject)(projectRoot);\n    return yield MetroConfig.loadConfig(Object.assign({\n      cwd: projectRoot,\n      projectRoot: projectRoot\n    }, metroOptions), defaultConfig);\n  });\n  return _loadAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/ExpoMetroConfig.ts"],"names":["EXPO_DEBUG","EXPO_USE_EXOTIC","INTERNAL_CALLSITES_REGEX","RegExp","join","isUrl","value","URL","readIsLegacyImportsEnabled","projectRoot","config","skipSDKVersionRequirement","exp","getProjectBabelConfigFile","resolveFrom","silent","getAssetPlugins","assetPlugins","hashAssetFilesPath","push","hasWarnedAboutExotic","getDefaultConfig","options","isExotic","mode","console","log","chalk","gray","bold","MetroConfig","reactNativePath","path","dirname","babelPresetFbjsPath","process","env","EXPO_METRO_CACHE_KEY_VERSION","String","require","version","isLegacy","target","warn","yellow","EXPO_TARGET","error","Error","stringify","default","sourceExtsConfig","isTS","isReact","isModern","sourceExts","babelConfigPath","isCustomBabelConfigDefined","resolverMainFields","watchFolders","nodeModulesPaths","reporter","metroDefaultValues","getDefaultValues","mergeConfig","resolver","platforms","assetExts","filter","assetExt","includes","serializer","getModulesRunBeforeMainModule","resolve","getPolyfills","server","port","Number","RCT_METRO_PORT","symbolicator","customizeFrame","frame","file","lineNumber","column","collapse","Boolean","test","methodName","match","transformer","unstable_allowRequireContext","allowOptionalDependencies","babelTransformerPath","assetRegistryPath","loadAsync","metroOptions","defaultConfig","loadConfig","cwd"],"mappings":";;;;;;;;;;;;;;AAEA,SAAA,OAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,cAAA,CAAA;EAAA,OAAA,GAAA,mBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,MAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;EAAA,MAAA,GAAA,kBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,MAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;EAAA,MAAA,GAAA,kBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,OAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,QAAA,CAAA;EAAA,OAAA,GAAA,mBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AAGA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,YAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;EAAA,YAAA,GAAA,wBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,IAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,KAAA,CAAA;EAAA,IAAA,GAAA,gBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AAEA,SAAA,gBAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;EAAA,gBAAA,GAAA,4BAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,gBAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;EAAA,gBAAA,GAAA,4BAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,uBAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;EAAA,uBAAA,GAAA,mCAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;;;;;;AAEO,IAAMA,UAAU,GAAG,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,EAAQ,YAAR,EAAsB,KAAtB,CAAnB;;AACP,IAAMC,eAAe,GAAG,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,EAAQ,iBAAR,EAA2B,KAA3B,CAAxB;AAGO,IAAMC,wBAAwB,GAAG,IAAIC,MAAJ,CACtC,CACE,8CADF,EAEE,6CAFF,EAGE,+BAHF,EAIE,4BAJF,EAKE,iCALF,EAME,2CANF,EAOE,qCAPF,EAQE,iCARF,EAYE,iCAZF,EAcE,uCAdF,EAeE,uCAfF,EAgBE,6DAhBF,EAiBE,qCAjBF,EAkBE,8CAlBF,EAoBE,oCApBF,EAsBE,iCAtBF,EAwBE,2CAxBF,EA0BE,4CA1BF,EA4BE,sCA5BF,sBAAA,CA+BEC,IA/BF,CA+BO,GA/BP,CADsC,CAAjC;;AAmCP,SAASC,KAAT,CAAeC,KAAf,EAAuC;EACrC,IAAI;IAEF,KAAIC,IAAAA,EAAAA,CAAAA,GAAJ,EAAQD,KAAR,CAAA;IACA,OAAO,IAAP;EACD,CAJD,CAIE,gBAAM;IACN,OAAO,KAAP;EACD;AACF;AAOD,SAASE,0BAAT,CAAoCC,WAApC,EAAkE;EAChE,IAAMC,MAAM,GAAG,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAUD,WAAV,EAAuB;IAAEE,yBAAyB,EAAE;EAA7B,CAAvB,CAAf;EACA,OAAO,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,sBAAA,EAAuBD,MAAM,CAACE,GAA9B,CAAP;AACD;AAED,SAASC,yBAAT,CAAmCJ,WAAnC,EAA4E;EAC1E,OACEK,YAAAA,EAAAA,CAAAA,OAAAA,CAAYC,MAAZD,CAAmBL,WAAnBK,EAAgC,mBAAhCA,CAAAA,IACAA,YAAAA,EAAAA,CAAAA,OAAAA,CAAYC,MAAZD,CAAmBL,WAAnBK,EAAgC,YAAhCA,CADAA,IAEAA,YAAAA,EAAAA,CAAAA,OAAAA,CAAYC,MAAZD,CAAmBL,WAAnBK,EAAgC,eAAhCA,CAHF;AAKD;AAED,SAASE,eAAT,CAAyBP,WAAzB,EAAwD;EACtD,IAAMQ,YAAsB,GAAG,EAA/B;EAEA,IAAIC,kBAAJ;EACA,IAAI;IACFA,kBAAkB,GAAG,CAAA,CAAA,EAAA,YAAA,EAAA,CAAA,OAAA,EAAYT,WAAZ,EAAyB,iCAAzB,CAArBS;EACD,CAFD,CAEE,iBAAM,CAKP;EAED,IAAIA,kBAAJ,EAAwB;IACtBD,YAAY,CAACE,IAAbF,CAAkBC,kBAAlBD,CAAAA;EACD;EAED,OAAOA,YAAP;AACD;AAED,IAAIG,oBAAoB,GAAG,KAA3B;AAEO,SAASC,gBAAT,CACLZ,WADK,EAGqB;EAAA,IAD1Ba,OAA6B,uEAAG,CAAA,CAF3B;EAIL,IAAMC,QAAQ,GAAGD,OAAO,CAACE,IAARF,KAAiB,QAAjBA,IAA6BrB,eAA9C;EAEA,IAAIsB,QAAQ,IAAI,CAACH,oBAAjB,EAAuC;IACrCA,oBAAoB,GAAG,IAAvBA;IACAK,OAAO,CAACC,GAARD,CACEE,MAAAA,EAAAA,CAAAA,OAAAA,CAAMC,IAAND,8BAC6BA,MAAAA,EAAAA,CAAAA,OAAAA,CAAME,IADnCF,kLADFF,CAAAA;EAKD;EACD,IAAMK,WAAW,GAAG,CAAA,CAAA,EAAA,uBAAA,EAAA,CAAA,4BAAA,EAA6BrB,WAA7B,CAApB;EAEA,IAAMsB,eAAe,GAAGC,KAAAA,EAAAA,CAAAA,OAAAA,CAAKC,OAALD,CAAa,CAAA,CAAA,EAAA,YAAA,EAAA,CAAA,OAAA,EAAYvB,WAAZ,EAAyB,2BAAzB,CAAbuB,CAAxB;EAEA,IAAI;IAIF,IAAME,mBAAmB,GAAG,CAAA,CAAA,EAAA,YAAA,EAAA,CAAA,OAAA,EAAYzB,WAAZ,EAAyB,gCAAzB,CAA5B;IACA0B,OAAO,CAACC,GAARD,CAAYE,4BAAZF,GAA2CG,MAAM,CAACC,OAAO,CAACL,mBAAD,CAAPK,CAA6BC,OAA9B,CAAjDL;EACD,CAND,CAME,iBAAM,CAEP;EAED,IAAMM,QAAQ,GAAGjC,0BAA0B,CAACC,WAAD,CAzBjB;EA2B1B,IAAIa,OAAO,CAACoB,MAAZ,EAAoB;IAClB,IAAI,CAACD,QAAL,EAAe;MACbhB,OAAO,CAACkB,IAARlB,CACEE,MAAAA,EAAAA,CAAAA,OAAAA,CAAMiB,MAANjB,yFADFF,CAAAA;MAKA,OAAOH,OAAO,CAACoB,MAAf;IACD;EACF,CATD,MASO,IAAIP,OAAO,CAACC,GAARD,CAAYU,WAAhB,EAA6B;IAClCpB,OAAO,CAACqB,KAARrB,CACE,iFADFA,CAAAA;IAGA,IAAIgB,QAAJ,EAAc;MAIZnB,OAAO,CAACoB,MAARpB,GAAiBa,OAAO,CAACC,GAARD,CAAYU,WAA7BvB;IACD;EACF,CAVM,MAUA,IAAImB,QAAJ,EAAc;IAEnBnB,OAAO,CAACoB,MAARpB,GAAiB,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,EAAiBb,WAAjB,CAAjBa;EACD;EAED,IAAI,CAACA,OAAO,CAACoB,MAAb,EAAqB;IAEnBpB,OAAO,CAACoB,MAARpB,GAAiB,MAAjBA;EArDwB;EAyD1B,IAAQoB,MAAAA,GAAWpB,OAAnB,CAAQoB,MAAAA;EACR,IAAI,EAAEA,MAAM,KAAK,SAAXA,IAAwBA,MAAM,KAAK,MAArC,CAAJ,EAAkD;IAChD,MAAM,IAAIK,KAAJ,uBACgBL,MAAO,yBAAmB,IAAI,CAACM,SAAL,CAC5C;MACE,gBAAA,EAAkB1B,OAAO,CAACoB,MAD5B;MAEEO,OAAO,EAAE,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,EAAiBxC,WAAjB;IAFX,CAD4C,EAK5C,IAL4C,EAM5C,CAN4C,CAD1C,CAAN;EAUD;EACD,IAAMyC,gBAAgB,GAAG;IAAEC,IAAI,EAAE,IAAR;IAAcC,OAAO,EAAE,IAAvB;IAA6BC,QAAQ,EAAE;EAAvC,CAAzB;EACA,IAAMC,UAAU,GACdZ,MAAM,KAAK,MAAXA,GACI,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAkB,EAAlB,EAAsBQ,gBAAtB,CADJR,GAEI,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAqB,EAArB,EAAyBQ,gBAAzB,CAHN;EAKA,IAAI3B,QAAJ,EAAc;IAEZ+B,UAAU,CAACnC,IAAXmC,CAAgB,KAAhBA,CAAAA;EACD;EAED,IAAMC,eAAe,GAAG1C,yBAAyB,CAACJ,WAAD,CAAjD;EACA,IAAM+C,0BAA0B,GAAG,CAAC,CAACD,eAArC;EAEA,IAAME,kBAA4B,GAAG,EApFX;EAwF1B,IAAI,CAAClC,QAAL,EAAe;IACbkC,kBAAkB,CAACtC,IAAnBsC,CAAwB,cAAxBA,CAAAA;EACD;EACDA,kBAAkB,CAACtC,IAAnBsC,CAAwB,SAAxBA,EAAmC,MAAnCA,CAAAA;EAEA,IAAMC,YAAY,GAAG,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,eAAA,EAAgBjD,WAAhB,CA7FK;EA+F1B,IAAMkD,gBAAgB,GAAG,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,eAAA,EAAgBlD,WAAhB,CAAzB;EACA,IAAIT,UAAJ,EAAgB;IACdyB,OAAO,CAACC,GAARD,EAAAA;IACAA,OAAO,CAACC,GAARD,sBAAAA;IACA,IAAI;MACFA,OAAO,CAACC,GAARD,iBAA0Bc,OAAO,CAAC,iBAAD,CAAPA,CAA2BC,OAArDf,CAAAA;IACD,CAFD,CAEE,iBAAM,CAAE;IACVA,OAAO,CAACC,GAARD,wBAAiCiB,MAAjCjB,CAAAA;IACAA,OAAO,CAACC,GAARD,gBAAyBgB,QAAzBhB,CAAAA;IACAA,OAAO,CAACC,GAARD,oBAA6B6B,UAAU,CAAClD,IAAXkD,CAAgB,IAAhBA,CAA7B7B,CAAAA;IACAA,OAAO,CAACC,GAARD,sBAA+BM,eAA/BN,CAAAA;IACAA,OAAO,CAACC,GAARD,uBAA+B8B,eAAe,IAAI,6BAAlD9B,EAAAA;IACAA,OAAO,CAACC,GAARD,yBAAkCgC,kBAAkB,CAACrD,IAAnBqD,CAAwB,IAAxBA,CAAlChC,CAAAA;IACAA,OAAO,CAACC,GAARD,uBAAgCiC,YAAY,CAACtD,IAAbsD,CAAkB,IAAlBA,CAAhCjC,CAAAA;IACAA,OAAO,CAACC,GAARD,2BAAoCkC,gBAAgB,CAACvD,IAAjBuD,CAAsB,IAAtBA,CAApClC,CAAAA;IACAA,OAAO,CAACC,GAARD,gBAAyBF,QAAzBE,CAAAA;IACAA,OAAO,CAACC,GAARD,EAAAA;EACD;EACD,4BAKIK,WAAW,CAACT,gBAAZS,CAA6BgC,gBAA7BhC,CAA8CrB,WAA9CqB,CAtHsB;IAoHxB8B,QAHI,yBAGJA,QAHI;IAIDC,kBAAAA;EAKL,OAAO,WAAW,CAACE,WAAZ,CAAwBF,kBAAxB,EAA4C;IACjDH,YADiD,EACjDA,YADiD;IAEjDM,QAAQ,EAAE;MACRP,kBADQ,EACRA,kBADQ;MAERQ,SAAS,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,QAAnB,EAA6B,SAA7B,CAFH;MAGRC,SAAS,EAAEL,kBAAkB,CAACG,QAAnBH,CAA4BK,SAA5BL,CAAsCM,MAAtCN,CACRO,UAAAA,QAAD;QAAA,OAAc,CAACd,UAAU,CAACe,QAAXf,CAAoBc,QAApBd,CADNO;MAAAA,EAHH;MAMRP,UANQ,EAMRA,UANQ;MAORK,gBAAAA,EAAAA;IAPQ,CAFuC;IAWjDW,UAAU,EAAE;MACVC,6BAA6B,EAAE;QAAA,OAAM,CACnChC,OAAO,CAACiC,OAARjC,CAAgBP,KAAAA,EAAAA,CAAAA,OAAAA,CAAK5B,IAAL4B,CAAUD,eAAVC,EAA2B,+BAA3BA,CAAhBO,CADmC,CAD3B;MAAA;MAKVkC,YAAY,EAAE;QAAA,OAAMlC,OAAO,CAACP,KAAAA,EAAAA,CAAAA,OAAAA,CAAK5B,IAAL4B,CAAUD,eAAVC,EAA2B,kBAA3BA,CAAD,CAAPO,EAAAA;MAAAA;IALV,CAXqC;IAkBjDmC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM,CAACzC,OAAO,CAACC,GAARD,CAAY0C,cAAb,CAAND,IAAsC;IADtC,CAlByC;IAqBjDE,YAAY,EAAE;MACZC,cAAc,EAAGC,wBAAAA,KAAD,EAAW;QACzB,IAAIA,KAAK,CAACC,IAAND,IAAc3E,KAAK,CAAC2E,KAAK,CAACC,IAAP,CAAvB,EAAqC;UACnC,yBACKD,KADE;YAGLE,UAAU,EAAE,IAHP;YAILC,MAAM,EAAE,IAJH;YAMLC,QAAQ,EAAE;UAAA;QAEb;QACD,IAAIA,QAAQ,GAAGC,OAAO,CAACL,KAAK,CAACC,IAAND,IAAc9E,wBAAwB,CAACoF,IAAzBpF,CAA8B8E,KAAK,CAACC,IAApC/E,CAAf,CAAtB;QAEA,IAAI,CAACkF,QAAL,EAAe;UAAA,IAAA,WAAA;UAIb,IACEJ,KAAK,CAACG,MAANH,KAAiB,CAAjBA,IACAA,KAAK,CAACO,UAANP,KAAqB,aADrBA,IAAAA,CAAAA,WAAAA,GAEAA,KAAK,CAACC,IAFND,MAAAA,IAAAA,IAAAA,WAAAA,KAAAA,KAAAA,CAAAA,IAEAA,WAAAA,CAAYQ,KAAZR,CAAkB,eAAlBA,CAHF,EAIE;YACAI,QAAQ,GAAG,IAAXA;UACD;QACF;QAED,yBAAaJ,KAAK,IAAI,CAAA,CAAf;UAAoBI,QAAAA,EAAAA;QAAAA;MAC5B;IA5BW,CArBmC;IAmDjDK,WAAW,EAAE;MAEXC,4BAA4B,EAAE,IAFnB;MAGXC,yBAAyB,EAAE,IAHhB;MAIXC,oBAAoB,EAAErE,QAAQ,GAC1BgB,OAAO,CAACiC,OAARjC,CAAgB,mDAAhBA,CAD0B,GAE1BiB,0BAA0B,GAI1B1C,YAAAA,EAAAA,CAAAA,OAAAA,CAAYC,MAAZD,CAAmBL,WAAnBK,EAAgC,sCAAhCA,CAJ0B,GAM1ByB,OAAO,CAACiC,OAARjC,CAAgB,4CAAhBA,CAZO;MAaXsD,iBAAiB,EAAE,4CAbR;MAcX5E,YAAY,EAAED,eAAe,CAACP,WAAD;IAdlB;EAnDoC,CAA5C,CAAP;AAoED;AAAA,SAWqBqF,SAAf;EAAA;AAAA;AAAA;EAAA,+BAAA,WACLrF,WADK,EAGyB;IAAA,+EADuB,CAAA,CAFhD;MAEHmD,QAAF,QAAEA,QAAF;MAAYlB,MAAZ,QAAYA,MAAZ;MAAuBqD,YAAAA;IAEvB,IAAIC,aAAa,GAAG3E,gBAAgB,CAACZ,WAAD,EAAc;MAAEiC,MAAAA,EAAAA;IAAF,CAAd,CAApC;IACA,IAAIkB,QAAJ,EAAc;MACZoC,aAAa,qBAAQA,aAAL;QAAoBpC,QAAAA,EAAAA;MAAAA,EAApCoC;IACD;IACD,IAAMlE,WAAW,GAAG,CAAA,CAAA,EAAA,uBAAA,EAAA,CAAA,4BAAA,EAA6BrB,WAA7B,CAApB;IACA,aAAa,WAAW,CAACwF,UAAZ;MACTC,GAAG,EAAEzF,WAAP;MAAoBA,WAApB,EAAoBA;IAApB,GAAoCsF,YAAAA,GACpCC,aAFW,CAAb;EAID,CAAA;EAAA;AAAA","sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\n\nimport { getConfig, getDefaultTarget, isLegacyImportsEnabled, ProjectTarget } from '@expo/config';\nimport { getBareExtensions, getManagedExtensions } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport { boolish } from 'getenv';\nimport { Reporter } from 'metro';\nimport type MetroConfig from 'metro-config';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { URL } from 'url';\n\nimport { getModulesPaths } from './getModulesPaths';\nimport { getWatchFolders } from './getWatchFolders';\nimport { importMetroConfigFromProject } from './importMetroFromProject';\n\nexport const EXPO_DEBUG = boolish('EXPO_DEBUG', false);\nconst EXPO_USE_EXOTIC = boolish('EXPO_USE_EXOTIC', false);\n\n// Import only the types here, the values will be imported from the project, at runtime.\nexport const INTERNAL_CALLSITES_REGEX = new RegExp(\n  [\n    '/Libraries/Renderer/implementations/.+\\\\.js$',\n    '/Libraries/BatchedBridge/MessageQueue\\\\.js$',\n    '/Libraries/YellowBox/.+\\\\.js$',\n    '/Libraries/LogBox/.+\\\\.js$',\n    '/Libraries/Core/Timers/.+\\\\.js$',\n    'node_modules/react-devtools-core/.+\\\\.js$',\n    'node_modules/react-refresh/.+\\\\.js$',\n    'node_modules/scheduler/.+\\\\.js$',\n    // Metro replaces `require()` with a different method,\n    // we want to omit this method from the stack trace.\n    // This is akin to most React tooling.\n    '/metro/.*/polyfills/require.js$',\n    // Hide frames related to a fast refresh.\n    '/metro/.*/lib/bundle-modules/.+\\\\.js$',\n    '/metro/.*/lib/bundle-modules/.+\\\\.js$',\n    'node_modules/react-native/Libraries/Utilities/HMRClient.js$',\n    'node_modules/eventemitter3/index.js',\n    'node_modules/event-target-shim/dist/.+\\\\.js$',\n    // Ignore the log forwarder used in the expo package.\n    '/expo/build/logs/RemoteConsole.js$',\n    // Improve errors thrown by invariant (ex: `Invariant Violation: \"main\" has not been registered`).\n    'node_modules/invariant/.+\\\\.js$',\n    // Remove babel runtime additions\n    'node_modules/regenerator-runtime/.+\\\\.js$',\n    // Remove react native setImmediate ponyfill\n    'node_modules/promise/setimmediate/.+\\\\.js$',\n    // Babel helpers that implement language features\n    'node_modules/@babel/runtime/.+\\\\.js$',\n    // Block native code invocations\n    `\\\\[native code\\\\]`,\n  ].join('|')\n);\n\nfunction isUrl(value: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport interface DefaultConfigOptions {\n  target?: ProjectTarget;\n  mode?: 'exotic';\n}\n\nfunction readIsLegacyImportsEnabled(projectRoot: string): boolean {\n  const config = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  return isLegacyImportsEnabled(config.exp);\n}\n\nfunction getProjectBabelConfigFile(projectRoot: string): string | undefined {\n  return (\n    resolveFrom.silent(projectRoot, './babel.config.js') ||\n    resolveFrom.silent(projectRoot, './.babelrc') ||\n    resolveFrom.silent(projectRoot, './.babelrc.js')\n  );\n}\n\nfunction getAssetPlugins(projectRoot: string): string[] {\n  const assetPlugins: string[] = [];\n\n  let hashAssetFilesPath;\n  try {\n    hashAssetFilesPath = resolveFrom(projectRoot, 'expo-asset/tools/hashAssetFiles');\n  } catch {\n    // TODO: we should warn/throw an error if the user has expo-updates installed but does not\n    // have hashAssetFiles available, or if the user is in managed workflow and does not have\n    // hashAssetFiles available. but in a bare app w/o expo-updates, just using dev-client,\n    // it is not needed\n  }\n\n  if (hashAssetFilesPath) {\n    assetPlugins.push(hashAssetFilesPath);\n  }\n\n  return assetPlugins;\n}\n\nlet hasWarnedAboutExotic = false;\n\nexport function getDefaultConfig(\n  projectRoot: string,\n  options: DefaultConfigOptions = {}\n): MetroConfig.InputConfigT {\n  const isExotic = options.mode === 'exotic' || EXPO_USE_EXOTIC;\n\n  if (isExotic && !hasWarnedAboutExotic) {\n    hasWarnedAboutExotic = true;\n    console.log(\n      chalk.gray(\n        `\\u203A Unstable feature ${chalk.bold`EXPO_USE_EXOTIC`} is enabled. Bundling may not work as expected, and is subject to breaking changes.`\n      )\n    );\n  }\n  const MetroConfig = importMetroConfigFromProject(projectRoot);\n\n  const reactNativePath = path.dirname(resolveFrom(projectRoot, 'react-native/package.json'));\n\n  try {\n    // Set the `EXPO_METRO_CACHE_KEY_VERSION` variable for use in the custom babel transformer.\n    // This hack is used because there doesn't appear to be anyway to resolve\n    // `babel-preset-fbjs` relative to the project root later (in `metro-expo-babel-transformer`).\n    const babelPresetFbjsPath = resolveFrom(projectRoot, 'babel-preset-fbjs/package.json');\n    process.env.EXPO_METRO_CACHE_KEY_VERSION = String(require(babelPresetFbjsPath).version);\n  } catch {\n    // noop -- falls back to a hardcoded value.\n  }\n\n  const isLegacy = readIsLegacyImportsEnabled(projectRoot);\n  // Deprecated -- SDK 41 --\n  if (options.target) {\n    if (!isLegacy) {\n      console.warn(\n        chalk.yellow(\n          `The target option is deprecated. Learn more: http://expo.fyi/expo-extension-migration`\n        )\n      );\n      delete options.target;\n    }\n  } else if (process.env.EXPO_TARGET) {\n    console.error(\n      'EXPO_TARGET is deprecated. Learn more: http://expo.fyi/expo-extension-migration'\n    );\n    if (isLegacy) {\n      // EXPO_TARGET is used by @expo/metro-config to determine the target when getDefaultConfig is\n      // called from metro.config.js.\n      // @ts-ignore\n      options.target = process.env.EXPO_TARGET;\n    }\n  } else if (isLegacy) {\n    // Fall back to guessing based on the project structure in legacy mode.\n    options.target = getDefaultTarget(projectRoot);\n  }\n\n  if (!options.target) {\n    // Default to bare -- no .expo extension.\n    options.target = 'bare';\n  }\n  // End deprecated -- SDK 41 --\n\n  const { target } = options;\n  if (!(target === 'managed' || target === 'bare')) {\n    throw new Error(\n      `Invalid target: '${target}'. Debug info: \\n${JSON.stringify(\n        {\n          'options.target': options.target,\n          default: getDefaultTarget(projectRoot),\n        },\n        null,\n        2\n      )}`\n    );\n  }\n  const sourceExtsConfig = { isTS: true, isReact: true, isModern: false };\n  const sourceExts =\n    target === 'bare'\n      ? getBareExtensions([], sourceExtsConfig)\n      : getManagedExtensions([], sourceExtsConfig);\n\n  if (isExotic) {\n    // Add support for cjs (without platform extensions).\n    sourceExts.push('cjs');\n  }\n\n  const babelConfigPath = getProjectBabelConfigFile(projectRoot);\n  const isCustomBabelConfigDefined = !!babelConfigPath;\n\n  const resolverMainFields: string[] = [];\n\n  // Disable `react-native` in exotic mode, since library authors\n  // use it to ship raw application code to the project.\n  if (!isExotic) {\n    resolverMainFields.push('react-native');\n  }\n  resolverMainFields.push('browser', 'main');\n\n  const watchFolders = getWatchFolders(projectRoot);\n  // TODO: nodeModulesPaths does not work with the new Node.js package.json exports API, this causes packages like uuid to fail. Disabling for now.\n  const nodeModulesPaths = getModulesPaths(projectRoot);\n  if (EXPO_DEBUG) {\n    console.log();\n    console.log(`Expo Metro config:`);\n    try {\n      console.log(`- Version: ${require('../package.json').version}`);\n    } catch {}\n    console.log(`- Bundler target: ${target}`);\n    console.log(`- Legacy: ${isLegacy}`);\n    console.log(`- Extensions: ${sourceExts.join(', ')}`);\n    console.log(`- React Native: ${reactNativePath}`);\n    console.log(`- Babel config: ${babelConfigPath || 'babel-preset-expo (default)'}`);\n    console.log(`- Resolver Fields: ${resolverMainFields.join(', ')}`);\n    console.log(`- Watch Folders: ${watchFolders.join(', ')}`);\n    console.log(`- Node Module Paths: ${nodeModulesPaths.join(', ')}`);\n    console.log(`- Exotic: ${isExotic}`);\n    console.log();\n  }\n  const {\n    // Remove the default reporter which metro always resolves to be the react-native-community/cli reporter.\n    // This prints a giant React logo which is less accessible to users on smaller terminals.\n    reporter,\n    ...metroDefaultValues\n  } = MetroConfig.getDefaultConfig.getDefaultValues(projectRoot);\n\n  // Merge in the default config from Metro here, even though loadConfig uses it as defaults.\n  // This is a convenience for getDefaultConfig use in metro.config.js, e.g. to modify assetExts.\n  return MetroConfig.mergeConfig(metroDefaultValues, {\n    watchFolders,\n    resolver: {\n      resolverMainFields,\n      platforms: ['ios', 'android', 'native', 'testing'],\n      assetExts: metroDefaultValues.resolver.assetExts.filter(\n        (assetExt) => !sourceExts.includes(assetExt)\n      ),\n      sourceExts,\n      nodeModulesPaths,\n    },\n    serializer: {\n      getModulesRunBeforeMainModule: () => [\n        require.resolve(path.join(reactNativePath, 'Libraries/Core/InitializeCore')),\n        // TODO: Bacon: load Expo side-effects\n      ],\n      getPolyfills: () => require(path.join(reactNativePath, 'rn-get-polyfills'))(),\n    },\n    server: {\n      port: Number(process.env.RCT_METRO_PORT) || 8081,\n    },\n    symbolicator: {\n      customizeFrame: (frame) => {\n        if (frame.file && isUrl(frame.file)) {\n          return {\n            ...frame,\n            // HACK: This prevents Metro from attempting to read the invalid file URL it sent us.\n            lineNumber: null,\n            column: null,\n            // This prevents the invalid frame from being shown by default.\n            collapse: true,\n          };\n        }\n        let collapse = Boolean(frame.file && INTERNAL_CALLSITES_REGEX.test(frame.file));\n\n        if (!collapse) {\n          // This represents the first frame of the stacktrace.\n          // Often this looks like: `__r(0);`.\n          // The URL will also be unactionable in the app and therefore not very useful to the developer.\n          if (\n            frame.column === 3 &&\n            frame.methodName === 'global code' &&\n            frame.file?.match(/^https?:\\/\\//g)\n          ) {\n            collapse = true;\n          }\n        }\n\n        return { ...(frame || {}), collapse };\n      },\n    },\n    transformer: {\n      // `require.context` support\n      unstable_allowRequireContext: true,\n      allowOptionalDependencies: true,\n      babelTransformerPath: isExotic\n        ? require.resolve('./transformer/metro-expo-exotic-babel-transformer')\n        : isCustomBabelConfigDefined\n        ? // If the user defined a babel config file in their project,\n          // then use the default transformer.\n          // Try to use the project copy before falling back on the global version\n          resolveFrom.silent(projectRoot, 'metro-react-native-babel-transformer')\n        : // Otherwise, use a custom transformer that uses `babel-preset-expo` by default for projects.\n          require.resolve('./transformer/metro-expo-babel-transformer'),\n      assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',\n      assetPlugins: getAssetPlugins(projectRoot),\n    },\n  });\n}\n\nexport interface LoadOptions {\n  config?: string;\n  maxWorkers?: number;\n  port?: number;\n  reporter?: Reporter;\n  resetCache?: boolean;\n  target?: ProjectTarget;\n}\n\nexport async function loadAsync(\n  projectRoot: string,\n  { reporter, target, ...metroOptions }: LoadOptions = {}\n): Promise<MetroConfig.ConfigT> {\n  let defaultConfig = getDefaultConfig(projectRoot, { target });\n  if (reporter) {\n    defaultConfig = { ...defaultConfig, reporter };\n  }\n  const MetroConfig = importMetroConfigFromProject(projectRoot);\n  return await MetroConfig.loadConfig(\n    { cwd: projectRoot, projectRoot, ...metroOptions },\n    defaultConfig\n  );\n}\n"]},"metadata":{},"sourceType":"script"}