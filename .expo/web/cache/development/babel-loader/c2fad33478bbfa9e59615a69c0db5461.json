{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar Range = function () {\n  \"use strict\";\n\n  function Range(range, options) {\n    var _this = this;\n    _classCallCheck(this, Range);\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      };\n    }\n    if (range instanceof Range) {\n      if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n        return range;\n      } else {\n        return new Range(range.raw, options);\n      }\n    }\n    if (range instanceof Comparator) {\n      this.raw = range.value;\n      this.set = [[range]];\n      this.format();\n      return this;\n    }\n    this.options = options;\n    this.loose = !!options.loose;\n    this.includePrerelease = !!options.includePrerelease;\n    this.raw = range;\n    this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n      return _this.parseRange(range.trim());\n    }).filter(function (c) {\n      return c.length;\n    });\n    if (!this.set.length) {\n      throw new TypeError(\"Invalid SemVer Range: \" + range);\n    }\n    this.format();\n  }\n  _createClass(Range, [{\n    key: \"format\",\n    value: function format() {\n      this.range = this.set.map(function (comps) {\n        return comps.join(' ').trim();\n      }).join('||').trim();\n      return this.range;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.range;\n    }\n  }, {\n    key: \"parseRange\",\n    value: function parseRange(range) {\n      var _this2 = this;\n      var loose = this.options.loose;\n      range = range.trim();\n      var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];\n      range = range.replace(hr, hyphenReplace(this.options.includePrerelease));\n      debug('hyphen replace', range);\n      range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);\n      debug('comparator trim', range, re[t.COMPARATORTRIM]);\n      range = range.replace(re[t.TILDETRIM], tildeTrimReplace);\n      range = range.replace(re[t.CARETTRIM], caretTrimReplace);\n      range = range.split(/\\s+/).join(' ');\n      var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n      return range.split(' ').map(function (comp) {\n        return parseComparator(comp, _this2.options);\n      }).join(' ').split(/\\s+/).map(function (comp) {\n        return replaceGTE0(comp, _this2.options);\n      }).filter(this.options.loose ? function (comp) {\n        return !!comp.match(compRe);\n      } : function () {\n        return true;\n      }).map(function (comp) {\n        return new Comparator(comp, _this2.options);\n      });\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range, options) {\n      if (!(range instanceof Range)) {\n        throw new TypeError('a Range is required');\n      }\n      return this.set.some(function (thisComparators) {\n        return isSatisfiable(thisComparators, options) && range.set.some(function (rangeComparators) {\n          return isSatisfiable(rangeComparators, options) && thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"test\",\n    value: function test(version) {\n      if (!version) {\n        return false;\n      }\n      if (typeof version === 'string') {\n        try {\n          version = new SemVer(version, this.options);\n        } catch (er) {\n          return false;\n        }\n      }\n      for (var i = 0; i < this.set.length; i++) {\n        if (testSet(this.set[i], version, this.options)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }]);\n  return Range;\n}();\nmodule.exports = Range;\nvar Comparator = require('./comparator');\nvar debug = require('../internal/debug');\nvar SemVer = require('./semver');\nvar _require = require('../internal/re'),\n  re = _require.re,\n  t = _require.t,\n  comparatorTrimReplace = _require.comparatorTrimReplace,\n  tildeTrimReplace = _require.tildeTrimReplace,\n  caretTrimReplace = _require.caretTrimReplace;\nvar isSatisfiable = function isSatisfiable(comparators, options) {\n  var result = true;\n  var remainingComparators = comparators.slice();\n  var testComparator = remainingComparators.pop();\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options);\n    });\n    testComparator = remainingComparators.pop();\n  }\n  return result;\n};\nvar parseComparator = function parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n};\nvar isX = function isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n};\nvar replaceTildes = function replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n};\nvar replaceTilde = function replaceTilde(comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = \">=\" + M + \".0.0 <\" + (+M + 1) + \".0.0-0\";\n    } else if (isX(p)) {\n      ret = \">=\" + M + \".\" + m + \".0 <\" + M + \".\" + (+m + 1) + \".0-0\";\n    } else if (pr) {\n      debug('replaceTilde pr', pr);\n      ret = \">=\" + M + \".\" + m + \".\" + p + \"-\" + pr + \" <\" + M + \".\" + (+m + 1) + \".0-0\";\n    } else {\n      ret = \">=\" + M + \".\" + m + \".\" + p + \" <\" + M + \".\" + (+m + 1) + \".0-0\";\n    }\n    debug('tilde return', ret);\n    return ret;\n  });\n};\nvar replaceCarets = function replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n};\nvar replaceCaret = function replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];\n  var z = options.includePrerelease ? '-0' : '';\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = \">=\" + M + \".0.0\" + z + \" <\" + (+M + 1) + \".0.0-0\";\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = \">=\" + M + \".\" + m + \".0\" + z + \" <\" + M + \".\" + (+m + 1) + \".0-0\";\n      } else {\n        ret = \">=\" + M + \".\" + m + \".0\" + z + \" <\" + (+M + 1) + \".0.0-0\";\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (M === '0') {\n        if (m === '0') {\n          ret = \">=\" + M + \".\" + m + \".\" + p + \"-\" + pr + \" <\" + M + \".\" + m + \".\" + (+p + 1) + \"-0\";\n        } else {\n          ret = \">=\" + M + \".\" + m + \".\" + p + \"-\" + pr + \" <\" + M + \".\" + (+m + 1) + \".0-0\";\n        }\n      } else {\n        ret = \">=\" + M + \".\" + m + \".\" + p + \"-\" + pr + \" <\" + (+M + 1) + \".0.0-0\";\n      }\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0') {\n          ret = \">=\" + M + \".\" + m + \".\" + p + z + \" <\" + M + \".\" + m + \".\" + (+p + 1) + \"-0\";\n        } else {\n          ret = \">=\" + M + \".\" + m + \".\" + p + z + \" <\" + M + \".\" + (+m + 1) + \".0-0\";\n        }\n      } else {\n        ret = \">=\" + M + \".\" + m + \".\" + p + \" <\" + (+M + 1) + \".0.0-0\";\n      }\n    }\n    debug('caret return', ret);\n    return ret;\n  });\n};\nvar replaceXRanges = function replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n};\nvar replaceXRange = function replaceXRange(comp, options) {\n  comp = comp.trim();\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n    if (gtlt === '=' && anyX) {\n      gtlt = '';\n    }\n    pr = options.includePrerelease ? '-0' : '';\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        ret = '<0.0.0-0';\n      } else {\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      if (xm) {\n        m = 0;\n      }\n      p = 0;\n      if (gtlt === '>') {\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        gtlt = '<';\n        if (xm) {\n          M = +M + 1;\n        } else {\n          m = +m + 1;\n        }\n      }\n      if (gtlt === '<') pr = '-0';\n      ret = gtlt + M + \".\" + m + \".\" + p + pr;\n    } else if (xm) {\n      ret = \">=\" + M + \".0.0\" + pr + \" <\" + (+M + 1) + \".0.0-0\";\n    } else if (xp) {\n      ret = \">=\" + M + \".\" + m + \".0\" + pr + \" <\" + M + \".\" + (+m + 1) + \".0-0\";\n    }\n    debug('xRange return', ret);\n    return ret;\n  });\n};\nvar replaceStars = function replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  return comp.trim().replace(re[t.STAR], '');\n};\nvar replaceGTE0 = function replaceGTE0(comp, options) {\n  debug('replaceGTE0', comp, options);\n  return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '');\n};\nvar hyphenReplace = function hyphenReplace(incPr) {\n  return function ($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n    if (isX(fM)) {\n      from = '';\n    } else if (isX(fm)) {\n      from = \">=\" + fM + \".0.0\" + (incPr ? '-0' : '');\n    } else if (isX(fp)) {\n      from = \">=\" + fM + \".\" + fm + \".0\" + (incPr ? '-0' : '');\n    } else if (fpr) {\n      from = \">=\" + from;\n    } else {\n      from = \">=\" + from + (incPr ? '-0' : '');\n    }\n    if (isX(tM)) {\n      to = '';\n    } else if (isX(tm)) {\n      to = \"<\" + (+tM + 1) + \".0.0-0\";\n    } else if (isX(tp)) {\n      to = \"<\" + tM + \".\" + (+tm + 1) + \".0-0\";\n    } else if (tpr) {\n      to = \"<=\" + tM + \".\" + tm + \".\" + tp + \"-\" + tpr;\n    } else if (incPr) {\n      to = \"<\" + tM + \".\" + tm + \".\" + (+tp + 1) + \"-0\";\n    } else {\n      to = \"<=\" + to;\n    }\n    return (from + \" \" + to).trim();\n  };\n};\nvar testSet = function testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false;\n    }\n  }\n  if (version.prerelease.length && !options.includePrerelease) {\n    for (var _i = 0; _i < set.length; _i++) {\n      debug(set[_i].semver);\n      if (set[_i].semver === Comparator.ANY) {\n        continue;\n      }\n      if (set[_i].semver.prerelease.length > 0) {\n        var allowed = set[_i].semver;\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["Range","range","options","loose","includePrerelease","raw","Comparator","value","set","format","split","map","parseRange","trim","filter","c","length","TypeError","comps","join","hr","re","t","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","debug","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","COMPARATORLOOSE","COMPARATOR","comp","parseComparator","replaceGTE0","match","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","version","SemVer","er","i","testSet","module","exports","require","comparators","result","remainingComparators","slice","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","r","TILDELOOSE","TILDE","_","M","m","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","test","prerelease","semver","ANY","allowed","major","minor","patch"],"sources":["D:/Node Js/Latihan/clone/Tubes-Pam-Kantin-/node_modules/@expo/config/node_modules/semver/classes/range.js"],"sourcesContent":["// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    const loose = this.options.loose\n    range = range.trim()\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    return range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}