{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withDevTools = withDevTools;\nvar _expoConstants = _interopRequireWildcard(require(\"expo-constants\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _DevLoadingView = _interopRequireDefault(require(\"../environment/DevLoadingView\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction withDevTools(AppRootComponent) {\n  var useOptionalKeepAwake = function () {\n    if (_reactNative.Platform.OS !== 'web') {\n      try {\n        var _require = require('expo-keep-awake'),\n          useKeepAwake = _require.useKeepAwake,\n          ExpoKeepAwakeTag = _require.ExpoKeepAwakeTag;\n        return function () {\n          return useKeepAwake(ExpoKeepAwakeTag, {\n            suppressDeactivateWarnings: true\n          });\n        };\n      } catch (_unused) {}\n    }\n    return function () {};\n  }();\n  var shouldUseExpoFastRefreshView = _reactNative.Platform.select({\n    web: true,\n    ios: _expoConstants.default.executionEnvironment !== _expoConstants.ExecutionEnvironment.Bare,\n    default: false\n  });\n  function WithDevTools(props) {\n    useOptionalKeepAwake();\n    if (shouldUseExpoFastRefreshView) {\n      return React.createElement(React.Fragment, null, React.createElement(AppRootComponent, Object.assign({}, props)), React.createElement(_DevLoadingView.default, null));\n    }\n    return React.createElement(AppRootComponent, Object.assign({}, props));\n  }\n  var name = AppRootComponent.displayName || AppRootComponent.name || 'Anonymous';\n  WithDevTools.displayName = \"withDevTools(\" + name + \")\";\n  return WithDevTools;\n}","map":{"version":3,"mappings":";;;;;AAAA;AACA;AACA;AAEA;AAA2D;AAAA;AAMrD,SAAUA,YAAY,CAC1BC,gBAA4B;EAI5B,IAAMC,oBAAoB,GAA4B,YAAK;IACzD,IAAIC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzB,IAAI;QAEF,eAA2CC,OAAO,CAAC,iBAAiB,CAAC;UAA7DC,YAAY,YAAZA,YAAY;UAAEC,gBAAgB,YAAhBA,gBAAgB;QACtC,OAAO;UAAA,OAAMD,YAAY,CAACC,gBAAgB,EAAE;YAAEC,0BAA0B,EAAE;UAAI,CAAE,CAAC;QAAA;OAClF,CAAC,gBAAM;;IAGV,OAAO,YAAK,CAAE,CAAC;EACjB,CAAC,EAAG;EAEJ,IAAMC,4BAA4B,GAAGN,qBAAQ,CAACO,MAAM,CAAC;IACnDC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAEC,sBAAS,CAACC,oBAAoB,KAAKC,mCAAoB,CAACC,IAAI;IACjEC,OAAO,EAAE;GACV,CAAC;EAEF,SAASC,YAAY,CAACC,KAAuC;IAC3DjB,oBAAoB,EAAE;IAEtB,IAAIO,4BAA4B,EAAE;MAChC,OACEW,0CACEA,oBAACnB,gBAAgB,oBAAKkB,KAAK,EAAI,EAC/BC,oBAACC,uBAAc,OAAG,CACjB;;IAIP,OAAOD,oBAACnB,gBAAgB,oBAAKkB,KAAK,EAAI;EACxC;EAEA,IAAMG,IAAI,GAAGrB,gBAAgB,CAACsB,WAAW,IAAItB,gBAAgB,CAACqB,IAAI,IAAI,WAAW;EACjFJ,YAAY,CAACK,WAAW,qBAAmBD,IAAI,MAAG;EAElD,OAAOJ,YAAY;AACrB","names":["withDevTools","AppRootComponent","useOptionalKeepAwake","Platform","OS","require","useKeepAwake","ExpoKeepAwakeTag","suppressDeactivateWarnings","shouldUseExpoFastRefreshView","select","web","ios","Constants","executionEnvironment","ExecutionEnvironment","Bare","default","WithDevTools","props","React","DevLoadingView","name","displayName"],"sourceRoot":"","sources":["../../src/launch/withDevTools.tsx"],"sourcesContent":["import Constants, { ExecutionEnvironment } from 'expo-constants';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\n\nimport DevLoadingView from '../environment/DevLoadingView';\n\n/**\n * Append the Expo Fast Refresh view and optionally\n * keep the screen awake if `expo-keep-awake` is installed.\n */\nexport function withDevTools<TComponent extends React.ComponentType<any>>(\n  AppRootComponent: TComponent\n): React.ComponentType<React.ComponentProps<TComponent>> {\n  // This hook can be optionally imported because __DEV__ never changes during runtime.\n  // Using __DEV__ like this enables tree shaking to remove the hook in production.\n  const useOptionalKeepAwake: (tag?: string) => void = (() => {\n    if (Platform.OS !== 'web') {\n      try {\n        // Optionally import expo-keep-awake\n        const { useKeepAwake, ExpoKeepAwakeTag } = require('expo-keep-awake');\n        return () => useKeepAwake(ExpoKeepAwakeTag, { suppressDeactivateWarnings: true });\n      } catch {}\n    }\n\n    return () => {};\n  })();\n\n  const shouldUseExpoFastRefreshView = Platform.select({\n    web: true,\n    ios: Constants.executionEnvironment !== ExecutionEnvironment.Bare,\n    default: false,\n  });\n\n  function WithDevTools(props: React.ComponentProps<TComponent>) {\n    useOptionalKeepAwake();\n\n    if (shouldUseExpoFastRefreshView) {\n      return (\n        <>\n          <AppRootComponent {...props} />\n          <DevLoadingView />\n        </>\n      );\n    }\n\n    return <AppRootComponent {...props} />;\n  }\n\n  const name = AppRootComponent.displayName || AppRootComponent.name || 'Anonymous';\n  WithDevTools.displayName = `withDevTools(${name})`;\n\n  return WithDevTools;\n}\n"]},"metadata":{},"sourceType":"script"}