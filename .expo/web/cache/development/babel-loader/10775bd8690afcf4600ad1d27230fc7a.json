{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reverseSortString = void 0;\nexports.sortObjWithOrder = sortObjWithOrder;\nexports.sortObject = sortObject;\nexports.sortWithOrder = sortWithOrder;\nfunction sortObject(obj, compareFn) {\n  return Object.keys(obj).sort(compareFn).reduce(function (acc, key) {\n    return Object.assign({}, acc, _defineProperty({}, key, obj[key]));\n  }, {});\n}\nfunction sortObjWithOrder(obj, order) {\n  var sorted = sortWithOrder(Object.keys(obj), order);\n  return sorted.reduce(function (acc, key) {\n    return Object.assign({}, acc, _defineProperty({}, key, obj[key]));\n  }, {});\n}\nfunction sortWithOrder(obj, order) {\n  var groupOrder = _toConsumableArray(new Set(order.concat(obj)));\n  var sorted = [];\n  while (groupOrder.length) {\n    var key = groupOrder.shift();\n    var index = obj.indexOf(key);\n    if (index > -1) {\n      var _obj$splice = obj.splice(index, 1),\n        _obj$splice2 = _slicedToArray(_obj$splice, 1),\n        item = _obj$splice2[0];\n      sorted.push(item);\n    }\n  }\n  return sorted;\n}\nvar reverseSortString = function reverseSortString(a, b) {\n  if (a < b) return 1;\n  if (a > b) return -1;\n  return 0;\n};\nexports.reverseSortString = reverseSortString;","map":{"version":3,"sources":["../../src/utils/sortObject.ts"],"names":["sortObject","obj","compareFn","keys","sort","reduce","acc","key","sortObjWithOrder","order","sorted","sortWithOrder","Object","groupOrder","Set","concat","length","shift","index","indexOf","item","splice","push","reverseSortString","a","b"],"mappings":";;;;;;;;;;;;AAAO,SAASA,UAAT,CACLC,GADK,EAELC,SAFK,EAGF;EACH,OAAO,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAA,CACJG,IADI,CACCF,SADD,CAAA,CAEJG,MAFI,CAGH,UAACC,GAAD,EAAMC,GAAN;IAAA,yBACKD,GADU,sBAEZC,GAAD,EAAON,GAAG,CAACM,GAAD,CAAA;EAAA,CALT,EAOH,CAAA,CAPG,CAAP;AASD;AAEM,SAASC,gBAAT,CACLP,GADK,EAELQ,KAFK,EAGF;EACH,IAAMC,MAAM,GAAGC,aAAa,CAACC,MAAM,CAACT,IAAPS,CAAYX,GAAZW,CAAD,EAAmBH,KAAnB,CAA5B;EAEA,OAAO,MAAM,CAACJ,MAAP,CACL,UAACC,GAAD,EAAMC,GAAN;IAAA,yBACKD,GADU,sBAEZC,GAAD,EAAON,GAAG,CAACM,GAAD,CAAA;EAAA,CAHP,EAKL,CAAA,CALK,CAAP;AAOD;AAEM,SAASI,aAAT,CAAuBV,GAAvB,EAAsCQ,KAAtC,EAAiE;EACtE,IAAMI,UAAU,sBAAO,IAAIC,GAAJ,CAAQL,KAAK,CAACM,MAANN,CAAaR,GAAbQ,CAAR,CAAJ,CAAnB;EACA,IAAMC,MAAgB,GAAG,EAAzB;EAEA,OAAOG,UAAU,CAACG,MAAlB,EAA0B;IACxB,IAAMT,GAAG,GAAGM,UAAU,CAACI,KAAXJ,EAAZ;IACA,IAAMK,KAAK,GAAGjB,GAAG,CAACkB,OAAJlB,CAAYM,GAAZN,CAAd;IACA,IAAIiB,KAAK,GAAG,CAAC,CAAb,EAAgB;MACd,kBAAejB,GAAG,CAACoB,MAAJpB,CAAWiB,KAAXjB,EAAkB,CAAlBA,CAAf;QAAA;QAAOmB,IAAD;MACNV,MAAM,CAACY,IAAPZ,CAAYU,IAAZV,CAAAA;IACD;EACF;EAED,OAAOA,MAAP;AACD;AAEM,IAAMa,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,CAAD,EAAYC,CAAZ,EAA0B;EACzD,IAAID,CAAC,GAAGC,CAAR,EAAW,OAAO,CAAP;EACX,IAAID,CAAC,GAAGC,CAAR,EAAW,OAAO,CAAC,CAAR;EACX,OAAO,CAAP;AACD,CAJM","sourcesContent":["export function sortObject<T extends Record<string, any> = Record<string, any>>(\n  obj: T,\n  compareFn?: (a: string, b: string) => number\n): T {\n  return Object.keys(obj)\n    .sort(compareFn)\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: obj[key],\n      }),\n      {}\n    ) as T;\n}\n\nexport function sortObjWithOrder<T extends Record<string, any> = Record<string, any>>(\n  obj: T,\n  order: string[]\n): T {\n  const sorted = sortWithOrder(Object.keys(obj), order);\n\n  return sorted.reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: obj[key],\n    }),\n    {}\n  ) as T;\n}\n\nexport function sortWithOrder(obj: string[], order: string[]): string[] {\n  const groupOrder = [...new Set(order.concat(obj))];\n  const sorted: string[] = [];\n\n  while (groupOrder.length) {\n    const key = groupOrder.shift()!;\n    const index = obj.indexOf(key);\n    if (index > -1) {\n      const [item] = obj.splice(index, 1);\n      sorted.push(item);\n    }\n  }\n\n  return sorted;\n}\n\nexport const reverseSortString = (a: string, b: string) => {\n  if (a < b) return 1;\n  if (a > b) return -1;\n  return 0;\n};\n"]},"metadata":{},"sourceType":"script"}