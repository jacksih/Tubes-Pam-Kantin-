{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRootPackageJsonPath = getRootPackageJsonPath;\nfunction _fs() {\n  var data = require(\"fs\");\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = require(\"path\");\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _Errors() {\n  var data = require(\"./Errors\");\n  _Errors = function _Errors() {\n    return data;\n  };\n  return data;\n}\nfunction fileExists(file) {\n  try {\n    return (0, _fs().statSync)(file).isFile();\n  } catch (_unused) {\n    return false;\n  }\n}\nfunction getRootPackageJsonPath(projectRoot) {\n  var packageJsonPath = (0, _path().join)(projectRoot, 'package.json');\n  if (!fileExists(packageJsonPath)) {\n    throw new (_Errors().ConfigError)(\"The expected package.json path: \" + packageJsonPath + \" does not exist\", 'MODULE_NOT_FOUND');\n  }\n  return packageJsonPath;\n}","map":{"version":3,"sources":["../src/resolvePackageJson.ts"],"names":["fileExists","file","isFile","getRootPackageJsonPath","projectRoot","packageJsonPath","ConfigError"],"mappings":";;;;;;AAAA,SAAA,GAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA;EAAA,GAAA,GAAA,eAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AAEA,SAAA,OAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,UAAA,CAAA;EAAA,OAAA,GAAA,mBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AAEA,SAASA,UAAT,CAAoBC,IAApB,EAA2C;EACzC,IAAI;IACF,OAAO,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,QAAA,EAASA,IAAT,CAAA,CAAeC,MAAf,EAAP;EACD,CAFD,CAEE,gBAAM;IACN,OAAO,KAAP;EACD;AACF;AAEM,SAASC,sBAAT,CAAgCC,WAAhC,EAA6D;EAClE,IAAMC,eAAe,GAAG,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,IAAA,EAAKD,WAAL,EAAkB,cAAlB,CAAxB;EACA,IAAI,CAACJ,UAAU,CAACK,eAAD,CAAf,EAAkC;IAChC,MAAM,KAAIC,OAAAA,EAAAA,CAAAA,WAAJ,uCAC+BD,eAD/B,sBAEJ,kBAFI,CAAN;EAID;EACD,OAAOA,eAAP;AACD","sourcesContent":["import { statSync } from 'fs';\nimport { join } from 'path';\n\nimport { ConfigError } from './Errors';\n\nfunction fileExists(file: string): boolean {\n  try {\n    return statSync(file).isFile();\n  } catch {\n    return false;\n  }\n}\n\nexport function getRootPackageJsonPath(projectRoot: string): string {\n  const packageJsonPath = join(projectRoot, 'package.json');\n  if (!fileExists(packageJsonPath)) {\n    throw new ConfigError(\n      `The expected package.json path: ${packageJsonPath} does not exist`,\n      'MODULE_NOT_FOUND'\n    );\n  }\n  return packageJsonPath;\n}\n"]},"metadata":{},"sourceType":"script"}