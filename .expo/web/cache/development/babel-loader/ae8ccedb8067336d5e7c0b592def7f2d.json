{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addHistoryItem = addHistoryItem;\nexports.getHistoryItem = getHistoryItem;\nfunction getHistoryItem(config, name) {\n  var _config$_internal$plu, _config$_internal, _config$_internal$plu2;\n  return (_config$_internal$plu = (_config$_internal = config._internal) === null || _config$_internal === void 0 ? void 0 : (_config$_internal$plu2 = _config$_internal.pluginHistory) === null || _config$_internal$plu2 === void 0 ? void 0 : _config$_internal$plu2[name]) !== null && _config$_internal$plu !== void 0 ? _config$_internal$plu : null;\n}\nfunction addHistoryItem(config, item) {\n  if (!config._internal) {\n    config._internal = {};\n  }\n  if (!config._internal.pluginHistory) {\n    config._internal.pluginHistory = {};\n  }\n  if (!item.version) {\n    item.version = 'UNVERSIONED';\n  }\n  config._internal.pluginHistory[item.name] = item;\n  return config;\n}","map":{"version":3,"sources":["../../src/utils/history.ts"],"names":["getHistoryItem","config","name","_internal","pluginHistory","addHistoryItem","item","version"],"mappings":";;;;;;;AAUO,SAASA,cAAT,CACLC,MADK,EAELC,IAFK,EAGqB;EAAA,IAAA,qBAAA,EAAA,iBAAA,EAAA,sBAAA;EAC1B,OAAA,CAAA,qBAAA,GAAA,CAAA,iBAAA,GAAOD,MAAM,CAACE,SAAd,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAOF,iBAAAA,CAAkBG,aAAzB,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOH,sBAAAA,CAAkCC,IAAlCD,CAAP,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAkD,IAAlD;AACD;AAEM,SAASI,cAAT,CACLJ,MADK,EAELK,IAFK,EAGO;EACZ,IAAI,CAACL,MAAM,CAACE,SAAZ,EAAuB;IACrBF,MAAM,CAACE,SAAPF,GAAmB,CAAA,CAAnBA;EACD;EACD,IAAI,CAACA,MAAM,CAACE,SAAPF,CAAiBG,aAAtB,EAAqC;IACnCH,MAAM,CAACE,SAAPF,CAAiBG,aAAjBH,GAAiC,CAAA,CAAjCA;EACD;EAED,IAAI,CAACK,IAAI,CAACC,OAAV,EAAmB;IACjBD,IAAI,CAACC,OAALD,GAAe,aAAfA;EACD;EAEDL,MAAM,CAACE,SAAPF,CAAiBG,aAAjBH,CAA+BK,IAAI,CAACJ,IAApCD,CAAAA,GAA4CK,IAA5CL;EAEA,OAAOA,MAAP;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ModPlatform } from '../Plugin.types';\n\nexport type PluginHistoryItem = {\n  name: string;\n  version: string;\n  platform?: ModPlatform;\n};\n\nexport function getHistoryItem(\n  config: Pick<ExpoConfig, '_internal'>,\n  name: string\n): PluginHistoryItem | null {\n  return config._internal?.pluginHistory?.[name] ?? null;\n}\n\nexport function addHistoryItem(\n  config: ExpoConfig,\n  item: Omit<PluginHistoryItem, 'version'> & { version?: string }\n): ExpoConfig {\n  if (!config._internal) {\n    config._internal = {};\n  }\n  if (!config._internal.pluginHistory) {\n    config._internal.pluginHistory = {};\n  }\n\n  if (!item.version) {\n    item.version = 'UNVERSIONED';\n  }\n\n  config._internal.pluginHistory[item.name] = item;\n\n  return config;\n}\n"]},"metadata":{},"sourceType":"script"}