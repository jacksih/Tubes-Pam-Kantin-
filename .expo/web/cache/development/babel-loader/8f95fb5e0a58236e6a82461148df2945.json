{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGoogleMapsApiKey = getGoogleMapsApiKey;\nexports.setGoogleMapsApiKey = setGoogleMapsApiKey;\nexports.withGoogleMapsApiKey = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n  _Manifest = function _Manifest() {\n    return data;\n  };\n  return data;\n}\nvar META_API_KEY = 'com.google.android.geo.API_KEY';\nvar LIB_HTTP = 'org.apache.http.legacy';\nvar withGoogleMapsApiKey = (0, _androidPlugins().createAndroidManifestPlugin)(setGoogleMapsApiKey, 'withGoogleMapsApiKey');\nexports.withGoogleMapsApiKey = withGoogleMapsApiKey;\nfunction getGoogleMapsApiKey(config) {\n  var _config$android$confi, _config$android, _config$android$confi2, _config$android$confi3;\n  return (_config$android$confi = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : (_config$android$confi2 = _config$android.config) === null || _config$android$confi2 === void 0 ? void 0 : (_config$android$confi3 = _config$android$confi2.googleMaps) === null || _config$android$confi3 === void 0 ? void 0 : _config$android$confi3.apiKey) !== null && _config$android$confi !== void 0 ? _config$android$confi : null;\n}\nfunction setGoogleMapsApiKey(config, androidManifest) {\n  var apiKey = getGoogleMapsApiKey(config);\n  var mainApplication = (0, _Manifest().getMainApplicationOrThrow)(androidManifest);\n  if (apiKey) {\n    (0, _Manifest().addMetaDataItemToMainApplication)(mainApplication, META_API_KEY, apiKey);\n    (0, _Manifest().addUsesLibraryItemToMainApplication)(mainApplication, {\n      name: LIB_HTTP,\n      required: false\n    });\n  } else {\n    (0, _Manifest().removeMetaDataItemFromMainApplication)(mainApplication, META_API_KEY);\n    (0, _Manifest().removeUsesLibraryItemFromMainApplication)(mainApplication, LIB_HTTP);\n  }\n  return androidManifest;\n}","map":{"version":3,"sources":["../../src/android/GoogleMapsApiKey.ts"],"names":["META_API_KEY","LIB_HTTP","withGoogleMapsApiKey","setGoogleMapsApiKey","getGoogleMapsApiKey","config","android","googleMaps","apiKey","androidManifest","mainApplication","name","required"],"mappings":";;;;;;;;AAEA,SAAA,eAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;EAAA,eAAA,GAAA,2BAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AACA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,YAAA,CAAA;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;EAAA,OAAA,IAAA;AAAA;AASA,IAAMA,YAAY,GAAG,gCAArB;AACA,IAAMC,QAAQ,GAAG,wBAAjB;AAEO,IAAMC,oBAAoB,GAAG,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,2BAAA,EAClCC,mBADkC,EAElC,sBAFkC,CAA7B;;AAKA,SAASC,mBAAT,CAA6BC,MAA7B,EAAkE;EAAA,IAAA,qBAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,sBAAA;EACvE,OAAA,CAAA,qBAAA,GAAA,CAAA,eAAA,GAAOA,MAAM,CAACC,OAAd,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAOD,eAAAA,CAAgBA,MAAvB,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAOA,sBAAAA,CAAwBE,UAA/B,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOF,sBAAAA,CAAoCG,MAA3C,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAqD,IAArD;AACD;AAEM,SAASL,mBAAT,CACLE,MADK,EAELI,eAFK,EAGL;EACA,IAAMD,MAAM,GAAGJ,mBAAmB,CAACC,MAAD,CAAlC;EACA,IAAMK,eAAe,GAAG,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,yBAAA,EAA0BD,eAA1B,CAAxB;EAEA,IAAID,MAAJ,EAAY;IAEV,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,gCAAA,EAAiCE,eAAjC,EAAkDV,YAAlD,EAAgEQ,MAAhE,CAAA;IACA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,mCAAA,EAAoCE,eAApC,EAAqD;MACnDC,IAAI,EAAEV,QAD6C;MAEnDW,QAAQ,EAAE;IAFyC,CAArD,CAAA;EAID,CAPD,MAOO;IAEL,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,qCAAA,EAAsCF,eAAtC,EAAuDV,YAAvD,CAAA;IACA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,wCAAA,EAAyCU,eAAzC,EAA0DT,QAA1D,CAAA;EACD;EAED,OAAOQ,eAAP;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport {\n  addMetaDataItemToMainApplication,\n  addUsesLibraryItemToMainApplication,\n  AndroidManifest,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n  removeUsesLibraryItemFromMainApplication,\n} from './Manifest';\n\nconst META_API_KEY = 'com.google.android.geo.API_KEY';\nconst LIB_HTTP = 'org.apache.http.legacy';\n\nexport const withGoogleMapsApiKey = createAndroidManifestPlugin(\n  setGoogleMapsApiKey,\n  'withGoogleMapsApiKey'\n);\n\nexport function getGoogleMapsApiKey(config: Pick<ExpoConfig, 'android'>) {\n  return config.android?.config?.googleMaps?.apiKey ?? null;\n}\n\nexport function setGoogleMapsApiKey(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n) {\n  const apiKey = getGoogleMapsApiKey(config);\n  const mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  if (apiKey) {\n    // If the item exists, add it back\n    addMetaDataItemToMainApplication(mainApplication, META_API_KEY, apiKey);\n    addUsesLibraryItemToMainApplication(mainApplication, {\n      name: LIB_HTTP,\n      required: false,\n    });\n  } else {\n    // Remove any existing item\n    removeMetaDataItemFromMainApplication(mainApplication, META_API_KEY);\n    removeUsesLibraryItemFromMainApplication(mainApplication, LIB_HTTP);\n  }\n\n  return androidManifest;\n}\n"]},"metadata":{},"sourceType":"script"}